ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$2cc6 ($2b77 bytes) ["Begin"]
	         $0150 = Begin
	         $0153 = UnusedGetScreenTileInHLWhileOamFree
	         $0156 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $015d = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $0166 = AddScoreValueDEontoBaseScoreHL
	         $017e = VBlankInterruptHandler
	         $0199 = VBlankInterruptHandler.afterMasterTransfer
	         $01fb = VBlankInterruptHandler.end
	         $0207 = Begin2
	         $020f = Begin2.clear2ndWram
	         $0216 = Reset
	         $022e = Reset.waitUntilVBlank
	         $025b = Reset.clearLastPage
	         $0266 = Reset.clear1stWram
	         $0275 = Reset.clearVram
	         $0281 = Reset.clearOam
	         $028a = Reset.clearHram
	         $0295 = Reset.copyOamDmaFunc
	         $02bf = MainLoop
	         $02d6 = MainLoop.nextTimer
	         $02e2 = MainLoop.toNextTimer
	         $02ef = MainLoop.waitUntilVBlankIntDone
	         $02fa = ProcessGameState
	         $036b = GameState24_CopyrightDisplay
	         $038a = GameState24_CopyrightDisplay.copyLoop
	         $039f = GameState25_CopyrightWaiting
	         $03ac = GameState35_CopyrightCanContinue
	         $03b5 = GameState35_CopyrightCanContinue.setNewState
	         $03ba = GameState06_TitleScreenInit
	         $03df = GameState06_TitleScreenInit.clearScreenBuffer
	         $03fa = GameState06_TitleScreenInit.displayBlackRow
	         $0430 = PlayDemo
	         $0470 = PlayDemo.setDemoPlayed
	         $048a = UnusedSetRecordingDemo
	         $048f = GameState07_TitleScreenMain
	         $049e = GameState07_TitleScreenMain.afterTimerCheck
	         $04b9 = GameState07_TitleScreenMain.checkButtonsPressed
	         $04eb = GameState07_TitleScreenMain.scrollLoop
	         $04f2 = !0
	         $0501 = GameState07_TitleScreenMain.playerChecks
	         $0518 = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $0522 = GameState07_TitleScreenMain.setGameStateTo2ah
	         $0524 = GameState07_TitleScreenMain.setGameState
	         $0532 = GameState07_TitleScreenMain.is1Player
	         $053b = GameState07_TitleScreenMain.afterUpCheck
	         $053e = GameState07_TitleScreenMain.flipNumPlayersOption
	         $0540 = GameState07_TitleScreenMain.setNumPlayersOpt
	         $0558 = !1
	         $0565 = !2
	         $056c = GameState07_TitleScreenMain.setCursorX
	         $0577 = GameState07_TitleScreenMain.pressedRight
	         $057d = GameState07_TitleScreenMain.pressedLeft
	         $0581 = GameState07_TitleScreenMain.pressedDown
	         $0585 = GameState07_TitleScreenMain.pressedUp
	         $0588 = GameState07_TitleScreenMain.multiplayerInvalid
	         $058b = GameState07_TitleScreenMain.optionMenu
	         $05a0 = !3
	         $05a8 = !4
	         $05aa = GameState07_TitleScreenMain.setCursorY
	         $05ad = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $05c2 = GameState07_TitleScreenMain.pressedDownOptions
	         $05cb = GameState07_TitleScreenMain.pressedUpOptions
	         $05d5 = GameState07_TitleScreenMain.pressedBOptions
	         $05d5 = GameState07_TitleScreenMain.scrollLoopBack
	         $05dc = !5
	         $05eb = GameState07_TitleScreenMain.doneScrolling
	         $05fa = GameState07_TitleScreenMain.pressedAOptions
	         $0617 = !6
	         $061d = !7
	         $0624 = DemoSendPingsAndEndAfterAllStepsDone
	         $0645 = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $0652 = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $065a = DemoPollInput
	         $0672 = DemoPollInput.mainBit
	         $068e = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $0691 = DemoPollInput.end
	         $069a = UnusedClearDemoButtonsHeld
	         $06a0 = DemoRecordInput
	         $06ca = DemoRecordInput.incFrames
	         $06d0 = DemoRestorePlayerButtonsHeld
	         $06dd = GameState2a_passive
	         $06e4 = GameState2a_2PlayerGameMusicTypeInit
	         $06ee = GameState2a_2PlayerGameMusicTypeInit.cont
	         $0714 = GameState2b_2PlayerGameMusicTypeMain
	         $0730 = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $073d = GameState2b_2PlayerGameMusicTypeMain.cont
	         $0761 = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $077a = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $0781 = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $0789 = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $078d = GameState16_passive
	         $0794 = GameState16_MarioLuigiScreenInit
	         $07ac = GameState16_MarioLuigiScreenInit.loop
	         $07b3 = GameState16_MarioLuigiScreenInit.cont
	         $07ea = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $0827 = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $0847 = CopyDEtoHL_Bbytes
	         $0847 = CopyDEtoHL_Bbytes.loop
	         $084e = GameState17_MarioLuigiScreenMain
	         $0865 = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $086c = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0877 = GameState17_MarioLuigiScreenMain.isMaster
	         $0881 = GameState17_MarioLuigiScreenMain.notPressedStart
	         $088c = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $088f = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $08ac = GameState17_MarioLuigiScreenMain.aGameFinished
	         $08c4 = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $08cc = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $08ce = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $08d6 = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $08df = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $08f8 = GameState17_MarioLuigiScreenMain.pressedRight
	         $08fd = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0903 = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $090a = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0910 = GameState17_MarioLuigiScreenMain.pressedUp
	         $0918 = Player1HighCoords
	         $0924 = Player2HighCoords
	         $0930 = Set2PlayerHighCoords
	         $0947 = GameState18_2PlayerInGameInit
	         $094f = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $09cb = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $09eb = GameState18_2PlayerInGameInit.luigiFace
	         $09fb = GameState18_2PlayerInGameInit.marioFace
	         $0a0b = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0a19 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0a2a = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0a3d = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0a3f = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0a4c = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0a64 = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0a6f = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0a71 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0a8b = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0a94 = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0a9b = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0aac = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0abc = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0ac9 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0ad1 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0ae2 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0aed = GameState19_commonEnd
	         $0b0b = GameState19_commonEnd.afterPassiveCheck
	         $0b1d = GameState19_passive
	         $0b27 = GameState19_passive.toDecB
	         $0b2d = GameState19_passive.waitUntilMasterPresent
	         $0b3b = GameState19_passive.waitUntilPingToMasterHandled
	         $0b4b = GameState19_passive.nextRow
	         $0b4d = GameState19_passive.nextCol
	         $0b56 = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0b65 = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0b73 = GameState19_passive.waitUntilTransferFinished
	         $0b83 = GameState19_passive.loadNextPiece
	         $0b8c = GameState19_passive.waitUntilTransferFinished2
	         $0b97 = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0ba5 = GameState19_passive.waitUntilTransferFinished3
	         $0bb3 = LoadBottomRowWithBlocks
	         $0bba = LoadBottomRowWithBlocks.nextCol
	         $0bbf = SerialTransferWaitFunc
	         $0bc2 = SerialTransferWaitFunc.loop
	         $0bc8 = ShuffleHiddenPieces2Player
	         $0bd1 = ShuffleHiddenPieces2Player.nextRandomVal
	         $0bd4 = ShuffleHiddenPieces2Player.loop1chTo0
	         $0bd5 = ShuffleHiddenPieces2Player.toDecB
	         $0be2 = ShuffleHiddenPieces2Player.afterBEqu0
	         $0bf0 = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0bf9 = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0c18 = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0c29 = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0c31 = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0c43 = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0c48 = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0c51 = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0c58 = GameState1a_2PlayerInGameMain
	         $0c9a = GameState1a_2PlayerInGameMain.notYetFinished
	         $0caa = GameState1a_2PlayerInGameMain.afterLevelDone
	         $0cbb = GameState1a_2PlayerInGameMain.end
	         $0cc2 = CheckAlmostLosingStatus
	         $0ccc = CheckAlmostLosingStatus.nextRow
	         $0ccf = CheckAlmostLosingStatus.nextCol
	         $0cdc = CheckAlmostLosingStatus.afterLoop
	         $0cee = CheckAlmostLosingStatus.nearTop
	         $0cfd = MasterPausedSerialByteRead
	         $0d17 = InGame2PlayerProcessSerialByte
	         $0d43 = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $0d45 = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $0d4c = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $0d4e = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $0d55 = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $0d61 = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $0d74 = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $0d77 = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $0d87 = InGame2PlayerProcessSerialByte.noLineMarkings
	         $0d8b = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $0da3 = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $0da9 = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $0db3 = CheckIfOtherPlayerCleared2PlusLines
	         $0dbf = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $0dc9 = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $0dd1 = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $0dda = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $0ddc = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $0df4 = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $0df9 = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $0e12 = GameState1b_2PlayerGameEnd
	         $0e2a = GameState1b_2PlayerGameEnd.tie
	         $0e30 = GameState1b_2PlayerGameEnd.notLost
	         $0e3a = GameState1b_2PlayerGameEnd.cont
	         $0e4e = GameState1b_2PlayerGameEnd.setGameState
	         $0e59 = GameState1d_2PlayerWinnerInit
	         $0e67 = GameState1d_2PlayerWinnerInit.cont
	         $0e76 = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $0e8c = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $0ea5 = WinnerMainIsMaster
	         $0eb2 = WinnerMainIsMaster.notWonAll5
	         $0eb8 = WinnerMainIsMaster.toNextState
	         $0ec0 = GameState20_2PlayerWinnerMain
	         $0ed4 = GameState20_2PlayerWinnerMain.end
	         $0edd = GoPastWinnerGameStates
	         $0ee4 = ProcessWinnerMainTimer
	         $0f0c = ProcessWinnerMainTimer.afterTimerCheck
	         $0f2a = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $0f36 = ProcessWinnerMainTimer.hideBabySprite
	         $0f3a = ProcessWinnerMainTimer.end
	         $0f4a = GameState1e_2PlayerLoserInit
	         $0f58 = GameState1e_2PlayerLoserInit.cont
	         $0f67 = GameState1e_2PlayerLoserInit.loadSadSprites
	         $0f7d = GameState1e_2PlayerLoserInit.copySadSprites
	         $0f96 = LoserMainIsMaster
	         $0fa3 = LoserMainIsMaster.notLost5
	         $0fa9 = LoserMainIsMaster.toNextState
	         $0fb1 = GameState21_2PlayerLoserMain
	         $0fc5 = GameState21_2PlayerLoserMain.end
	         $0fce = GoPastLoserGameStates
	         $0fd5 = ProcessLoserMainTimer
	         $0ff6 = ProcessLoserMainTimer.afterTimerCheck
	         $101a = ProcessLoserMainTimer.turnAdultToBigGas
	         $102a = ProcessLoserMainTimer.hideAdultSprite
	         $102e = ProcessLoserMainTimer.end
	         $103e = DisplayTextPushStart
	         $105a = DisplayTextPushStart.loop
	         $1060 = DisplayTextPushStart.done
	         $1063 = DisplayTextPushStart.sprites
	         $1087 = ClearPushStartText
	         $1090 = ClearPushStartText.loop
	         $1096 = LoadWinnerLoserScreen
	         $10e5 = LoadWinnerLoserScreen.afterBGdisplay
	         $10ed = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $1107 = LoadWinnerLoserScreen.drawWinnerText
	         $110c = LoadWinnerLoserScreen.afterWinningText
	         $1117 = LoadWinnerLoserScreen.drawFaces
	         $113b = LoadWinnerLoserScreen.checkLosingGames
	         $1155 = LoadWinnerLoserScreen.drawLoserText
	         $115a = LoadWinnerLoserScreen.afterLosingText
	         $1165 = LoadWinnerLoserScreen.drawFaces2
	         $117e = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $118e = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $1196 = DrawCfaces
	         $1196 = DrawCfaces.nextFace
	         $119e = DrawCfaces.nextRow
	         $11b1 = ProcessDeuceAdvantageLogic
	         $11cf = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $11d8 = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $11dc = ProcessDeuceAdvantageLogic.won4
	         $11de = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $11e1 = ProcessDeuceAdvantageLogic.clearAdvantages
	         $11e7 = ProcessDeuceAdvantageLogic.wasDeuce
	         $11ee = ProcessDeuceAdvantageLogic.clearDeuce
	         $11f2 = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $11f6 = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $11fd = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $1204 = CopyAndUnderlineTextDEtoHL_Bbytes
	         $1206 = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $1214 = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $1219 = TextDeuce
	         $121f = TextMarioWins
	         $122a = TextLuigiWins
	         $1235 = TextAdvantage
	         $123e = GameState1f_Post2PlayerResults
	         $1266 = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $126b = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $1284 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $1286 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $128c = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $1293 = GameState26_ShuttleSceneInit
	         $12de = DisplayRocketScene
	         $1317 = GameState27_ShuttleSceneShowClouds
	         $132d = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $1336 = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $134d = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $1356 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $1375 = GameState02_ShuttleSceneLiftoff
	         $13a8 = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $13ac = GameState03_ShuttleSceneShootFire
	         $13ce = GameState03_ShuttleSceneShootFire.checkTimer2
	         $13de = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $13e4 = GameState2c_ShuttleSceneShowCongratulations
	         $1426 = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $1436 = GameState2d_CongratsWaitingBeforeBTypeScore
	         $1436 = GameState2c_ShuttleSceneShowCongratulations.end
	         $1451 = GameState34_PreRocketSceneWait
	         $145a = GameState2e_RocketSceneInit
	         $1487 = GameState2f_RocketSceneShowClouds
	         $149d = GameState30_PoweringUp
	         $14a6 = GameState30_PoweringUp.liftingOff
	         $14b4 = GameState31_RocketSceneLiftOff
	         $14e7 = GameState31_RocketSceneLiftOff.toggleVisibility
	         $14eb = GameState32_RocketSceneShootFire
	         $1505 = GameState32_RocketSceneShootFire.checkTimer2
	         $1515 = GameState32_RocketSceneShootFire.copySpecsToOam
	         $151b = GameState33_RocketSceneEnd
	         $1535 = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $1547 = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $1556 = ShuttleMetalStructureLeft
	         $155d = ShuttleMetalStructureRight
	         $1564 = RocketMetalStructureLeft
	         $156b = RocketMetalStructureRight
	         $1572 = CopyDEintoHLsColumn_Bbytes
	         $1572 = CopyDEintoHLsColumn_Bbytes.loop
	         $157f = GameState08_GameMusicTypeInit
	         $158a = GameMusicTypeInitWithoutDisablingSerialRegs
	         $15bd = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $15cc = Stub_148c
	         $15cd = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $15d2 = SetSpriteSpecCoordsForMusicType
	         $15e8 = SetSpriteSpecCoordsForMusicType.coords
	         $15f0 = GameState0f_MusicTypeMain
	         $1608 = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $1620 = GameState0f_MusicTypeMain.setMusicType
	         $1627 = GameState0f_MusicTypeMain.copyToShadowOam
	         $162b = GameState0f_MusicTypeMain.pressedUp
	         $1633 = GameState0f_MusicTypeMain.pressedRight
	         $163e = GameState0f_MusicTypeMain.pressedLeft
	         $1649 = GameState0f_MusicTypeMain.pressedB
	         $1652 = GameState0f_MusicTypeMain.not2player
	         $1657 = PlaySongBasedOnMusicTypeChosen
	         $1661 = PlaySongBasedOnMusicTypeChosen.playSong
	         $1665 = GameState0e_GameTypeMain
	         $168b = GameState0e_GameTypeMain.pressedRight
	         $1693 = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $169e = GameState0e_GameTypeMain.setSpecIdx
	         $169f = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $16a3 = GameState0e_GameTypeMain.pressedStart
	         $16b2 = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $16b7 = GameState0e_GameTypeMain.pressedA
	         $16bb = GameState10_ATypeSelectionInit
	         $16ff = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $1701 = GameState10_ATypeSelectionInit.setGameState
	         $1704 = GameState11_ATypeSelectionMain
	         $1736 = GameState11_ATypeSelectionMain.pressedRight
	         $173b = GameState11_ATypeSelectionMain.setNewLevel
	         $1748 = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $174c = GameState11_ATypeSelectionMain.pressedLeft
	         $1752 = GameState11_ATypeSelectionMain.pressedUp
	         $175a = ATypeLevelsCoords
	         $176e = GameState12_BTypeSelectionInit
	         $17ba = GameState12_BTypeSelectionInit.setEnterHiScore
	         $17bf = GameState13_setGameStateMakeSpriteVisible
	         $17c4 = GameState13_BTypeSelectionMain
	         $17f8 = GameState13_BTypeSelectionMain.pressedRight
	         $17fd = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $180a = GameState13_BTypeSelectionMain.sendToOam
	         $180e = GameState13_BTypeSelectionMain.pressedLeft
	         $1814 = GameState13_BTypeSelectionMain.pressedUp
	         $181c = BTypeLevelsCoords
	         $1830 = GameState14_setGameStateMakeSpriteVisible
	         $1835 = GameState14_BTypeHighMain
	         $1867 = GameState14_BTypeHighMain.pressedRight
	         $186c = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1879 = GameState14_BTypeHighMain.sendToOam
	         $187d = GameState14_BTypeHighMain.pressedLeft
	         $1883 = GameState14_BTypeHighMain.pressedUp
	         $188b = BTypeHighsCoords
	         $1897 = UnusedNop_174d
	         $1898 = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $189f = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $18b0 = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $18c0 = CopyCSpriteSpecStructsFromDEtoHL
	         $18c0 = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $18c3 = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $18d4 = Clear_wOam
	         $18da = Clear_wOam.loop
	         $18df = DisplayATypeHighScoresForLevel
	         $18ea = DisplayATypeHighScoresForLevel.decA
	         $18f1 = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $18f9 = DisplayBTypeHighScoresForLevel
	         $1904 = DisplayBTypeHighScoresForLevel.decA1
	         $190b = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1910 = DisplayBTypeHighScoresForLevel.decA2
	         $1917 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $191f = CopyHighScoreValueToRamBuffer
	         $1921 = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1931 = CopyHighScoreValueToRamBuffer.hasTens
	         $193b = CopyHighScoreValueToRamBuffer.storeDigits
	         $1941 = CopyHLtoDEbackwards_3bytes
	         $1943 = CopyHLtoDEbackwards_Bbytes.loop
	         $1943 = CopyHLtoDEbackwards_Bbytes
	         $194a = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1952 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1958 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1963 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $196c = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $197e = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1986 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $198b = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $19a2 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $19ac = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $19b0 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $19ca = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $19d5 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $19f4 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $19f7 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1a00 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1a14 = DisplayHighScoresAndNamesForLevel
	         $1a20 = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1a21 = DisplayHighScoresAndNamesForLevel.next6chars
	         $1a23 = DisplayHighScoresAndNamesForLevel.copyName
	         $1a41 = DisplayHighScoresAndNamesForLevel.end
	         $1a46 = DisplayDottedLinesForHighScore
	         $1a50 = DisplayDottedLinesForHighScore.nextRow
	         $1a53 = DisplayDottedLinesForHighScore.nextCol
	         $1a5d = GameState15_EnteringHighScore
	         $1a65 = GameState15_EnteringHighScore.decA
	         $1a6b = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1a8b = GameState15_EnteringHighScore.setTile
	         $1a8e = GameState15_EnteringHighScore.afterTimerCheck
	         $1ab2 = GameState15_EnteringHighScore.done
	         $1ac6 = GameState15_EnteringHighScore.setGameState
	         $1ac9 = GameState15_EnteringHighScore.upHeld
	         $1ad1 = GameState15_EnteringHighScore.upPressed
	         $1adc = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1ae2 = GameState15_EnteringHighScore.incChar
	         $1ae3 = GameState15_EnteringHighScore.setChar
	         $1aea = GameState15_EnteringHighScore.notUpLastChar
	         $1af2 = GameState15_EnteringHighScore.downHeld
	         $1afa = GameState15_EnteringHighScore.downPressed
	         $1b05 = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1b0c = GameState15_EnteringHighScore.decChar
	         $1b0f = GameState15_EnteringHighScore.notDownLastChar
	         $1b16 = GameState15_EnteringHighScore.aPressed
	         $1b31 = GameState15_EnteringHighScore.setNextCharLoc
	         $1b38 = GameState15_EnteringHighScore.bPressed
	         $1b48 = StoreAinHLwhenLCDFree
	         $1b49 = StoreBinHLwhenLCDFree
	         $1b49 = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1b51 = GameState0a_InGameInit
	         $1b8e = GameState0a_InGameInit.afterGameTypeCheck
	         $1bc0 = GameState0a_InGameInit.afterHardModeCheck
	         $1bde = GameState0a_InGameInit.setNumLinesCompleted
	         $1be7 = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $1bf5 = GameState0a_InGameInit.afterPieceHiddenCheck
	         $1c25 = GameState0a_InGameInit.notDemo
	         $1c2f = GameState0a_InGameInit.end
	         $1c37 = SetNumFramesUntilPiecesMoveDown
	         $1c48 = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $1c49 = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $1c55 = SetNumFramesUntilPiecesMoveDown.framesData
	         $1c6a = PopulateDemoBTypeScreenWithBlocks
	         $1c72 = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $1c75 = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $1c8f = PopulateDemoBTypeScreenWithBlocks.layout
	         $1cb7 = PopulateGameScreenWithRandomBlocks
	         $1cb8 = PopulateGameScreenWithRandomBlocks.decB
	         $1cbe = PopulateGameScreenWithRandomBlocks.mainLoop
	         $1cc1 = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $1cc3 = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $1cce = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $1cda = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $1cdc = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $1cef = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $1cf0 = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $1cfc = PopulateGameScreenWithRandomBlocks.from2player
	         $1d11 = PopulateGameScreenWithRandomBlocks.toNextRow
	         $1d17 = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $1d1d = GameState00_InGameMain
	         $1d43 = InGameCheckResetAndPause.startNotPressed
	         $1d43 = InGameCheckResetAndPause
	         $1d52 = InGameCheckResetAndPause.setPieceVisibility
	         $1d59 = InGameCheckResetAndPause.pieceNotHidden
	         $1d5c = InGameCheckResetAndPause.start
	         $1d8e = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $1d9c = InGameCheckResetAndPause.setNextPieceVisibility
	         $1d9f = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $1da9 = InGameCheckResetAndPause.gameUnPaused
	         $1db9 = InGameCheckResetAndPause.is2Player
	         $1dd7 = InGame2PlayerCheckUnpaused
	         $1df0 = InGame2PlayerCheckUnpaused.isPassive
	         $1df9 = InGame2PlayerCheckUnpaused.gameUnpaused
	         $1e10 = InGame2PlayerCheckUnpaused.loop
	         $1e18 = InGame2PlayerCheckUnpaused.popHL
	         $1e1a = Display2PlayerPauseText
	         $1e22 = Display2PlayerPauseText.loop
	         $1e2c = Display2PlayerPauseText.text
	         $1e31 = GameState01_GameOverInit
	         $1e55 = GameState04_LevelEndedMain
	         $1e5e = GameState04_LevelEndedMain.aOrStartPressed
	         $1e72 = GameState04_LevelEndedMain.setGameState
	         $1e75 = GameState05_BTypeLevelFinished
	         $1eb1 = GameState05_BTypeLevelFinished.clearScore
	         $1eb5 = GameState05_BTypeLevelFinished.fromLevel0
	         $1ed3 = DisplayBTypeScoreMultipliersBasedOnLevel
	         $1eda = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $1ee2 = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $1ef1 = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $1f00 = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $1f06 = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $1f0f = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $1f1d = GameState22_DancersInit
	         $1f4e = GameState22_DancersInit.setNextDancerAnimDetails
	         $1f63 = GameState22_DancersInit.numDancersInB
	         $1f6c = GameState22_DancersInit.loopSetVisible
	         $1f85 = Dancers_AnimationTimers
	         $1f8f = GameState23_sendDancersToOam
	         $1f95 = GameState23_DancersMain
	         $1fa5 = GameState23_DancersMain.nextDancer
	         $1fbe = GameState23_DancersMain.toNextDancer
	         $1fda = GameState23_DancersMain.setGameState
	         $1fdd = GameState23_DancersMain.isJumperStanding
	         $1fe3 = GameState23_DancersMain.isJumperJumping
	         $1fe9 = After4ScoreCategoriesProcessed
	         $202b = ProcessScoreUpdatesAfterBTypeLevelDone
	         $2066 = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $206a = GameState0c_UnusedPreShuttleLiftOff
	         $2073 = GameState0d_GameOverScreenClearing
	         $208b = GameState0d_GameOverScreenClearing.is1player
	         $20c0 = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $20c2 = GameState0d_GameOverScreenClearing.setGameState
	         $20c5 = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $20d1 = CopyGameScreenInnerText
	         $20d1 = CopyGameScreenInnerText.nextRow
	         $20d4 = CopyGameScreenInnerText.nextCol
	         $20e5 = AddOnCompletedLinesScore
	         $2117 = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $211d = AddOnCompletedLinesScore.loop
	         $212b = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $2131 = FillGameScreenBufferWithTileA
	         $2139 = FillGameScreenBufferWithTileA.nextRow
	         $213c = FillGameScreenBufferWithTileA.nextCol
	         $2146 = FillBottom2RowsOfTileMapWithEmptyTile
	         $2150 = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $2152 = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $215b = PlayNextPieceLoadNextAndHiddenPiece
	         $2178 = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $2187 = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $2195 = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $2197 = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $219a = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $219b = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $21a8 = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $21b6 = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $21b9 = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $21c5 = InGameHandlePieceFalling.holdingDown
	         $21c5 = InGameHandlePieceFalling
	         $21d7 = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $21f0 = InGameHandlePieceFalling.start
	         $21f8 = InGameHandlePieceFalling.afterPressedDown
	         $2205 = InGameHandlePieceFalling.sendActivePieceToOam
	         $2209 = InGameHandlePieceFalling.currScoreEqu0
	         $2216 = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $2254 = InGameHandlePieceFalling.clearTimesHoldingDown
	         $2257 = InGameHandlePieceFalling.fromNotHoldingDown
	         $2278 = InGameHandlePieceFalling.skipGameOver
	         $227a = InGameHandlePieceFalling.isAType
	         $227b = InGameHandlePieceFalling.keepAdding
	         $2282 = InGameHandlePieceFalling.addDropsToScore
	         $2292 = InGameCheckIfAnyTetrisRowsComplete
	         $22a7 = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $22aa = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $22bf = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $22ef = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $22fe = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $2323 = InGameCheckIfAnyTetrisRowsComplete.end
	         $232c = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $232f = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $2334 = FlashCompletedTetrisRows
	         $234a = FlashCompletedTetrisRows.upperOuterLoop
	         $235a = FlashCompletedTetrisRows.flashRow
	         $235c = FlashCompletedTetrisRows.flashRowLoop
	         $2365 = FlashCompletedTetrisRows.incFlashCount
	         $2373 = FlashCompletedTetrisRows.flashed7times
	         $237e = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $2382 = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $238c = FlashCompletedTetrisRows.origTileCopyLoop
	         $239c = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $23a1 = ShiftEntireGameRamBufferDownARow
	         $23ae = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $23b9 = ShiftEntireGameRamBufferDownARow.nextRow
	         $23bc = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $23db = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $23e7 = ClearPointersToCompletedTetrisRows
	         $23ed = ClearPointersToCompletedTetrisRows.loop
	         $23f2 = CopyRamBufferRow17ToVram
	         $2401 = CopyRamBufferRow16ToVram
	         $2410 = CopyRamBufferRow15ToVram
	         $241f = CopyRamBufferRow14ToVram
	         $242e = CopyRamBufferRow13ToVram
	         $243d = CopyRamBufferRow12ToVram
	         $244c = CopyRamBufferRow11ToVram
	         $2463 = CopyRamBufferRow11ToVram.loop
	         $2469 = CopyRamBufferRow11ToVram.is2Player
	         $2477 = CopyRamBufferRow10ToVram
	         $2486 = CopyRamBufferRow9ToVram
	         $2495 = CopyRamBufferRow8ToVram
	         $24a4 = CopyRamBufferRow7ToVram
	         $24b3 = CopyRamBufferRow6ToVram
	         $24c2 = CopyRamBufferRow5ToVram
	         $24d1 = CopyRamBufferRow4ToVram
	         $24e0 = CopyRamBufferRow3ToVram
	         $24f2 = CopyRamBufferRow2ToVram
	         $250b = CopyRamBufferRow1ToVram
	         $2520 = CopyRamBufferRow0ToVram
	         $253d = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $2553 = CopyRamBufferRow0ToVram.displayLines
	         $2572 = CopyRamBufferRow0ToVram.is1playerEnd
	         $257c = CopyRamBufferRow0ToVram.setGameState
	         $257f = CopyRamBufferRow0ToVram.playNextPiece
	         $2583 = CopyRamBufferRow0ToVram.is2player
	         $258f = DisplayGameATypeScoreIfInGameAndForced
	         $259f = CheckIfATypeNextLevelReached
	         $25d2 = CheckIfATypeNextLevelReached.nextDigit
	         $25e8 = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $25f1 = ABisBCDofValInHL
	         $25f6 = ABisBCDofValInHL.loop
	         $25fe = ABisBCDofValInHL.copyAtoB
	         $2600 = CopyRamBufferRowToVram
	         $2602 = CopyRamBufferRowToVram.loop
	         $260f = InGameCheckButtonsPressed
	         $262e = InGameCheckButtonsPressed.pressedAAnimation0
	         $2634 = InGameCheckButtonsPressed.pressedB
	         $263e = InGameCheckButtonsPressed.pressedBAnimation3
	         $2642 = InGameCheckButtonsPressed.afterRotation
	         $265d = InGameCheckButtonsPressed.afterCollisionCheck
	         $267b = InGameCheckButtonsPressed.pressedRight
	         $268e = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $269d = InGameCheckButtonsPressed.notHeldLeft
	         $26a0 = InGameCheckButtonsPressed.notHeldRight
	         $26b2 = InGameCheckButtonsPressed.pressedLeft
	         $26c7 = RetZIfNoCollisionForPiece
	         $26cc = RetZIfNoCollisionForPiece.nextSprite
	         $26ea = RetZIfNoCollisionForPiece.fromXis0
	         $26ee = RetZIfNoCollisionForPiece.notEmpty
	         $26f5 = InGameAddPieceToVram
	         $26ff = InGameAddPieceToVram.nextSquareOfPiece
	         $2711 = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $2723 = InGameAddPieceToVram.nextState
	         $272d = ProcessCurrentScoreCategory
	         $274b = ProcessCurrentScoreCategory.afterDisplaying10s
	         $2750 = ProcessCurrentScoreCategory.addCategScore
	         $276c = ProcessCurrentScoreCategory.addToTotalScore
	         $277a = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $278d = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $278e = IncScoreCategoryProcessedAfterBTypeDone
	         $27a5 = ClearScoreCategoryVarsAndTotalScore
	         $27ab = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $27b4 = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $27b9 = UnusedStoreBCDByteInHLInDestDE
	         $27c5 = Copy2SpriteSpecsToShadowOam
	         $27c7 = CopyASpriteSpecsToShadowOam
	         $27d7 = Copy1stSpriteSpecToSprite4
	         $27ea = Copy2ndSpriteSpecToSprite8
	         $27fd = DisplayBlackColumnFromHLdown
	         $2804 = DisplayBlackColumnFromHLdown.loop
	         $280a = CopyDEintoHLwhileFFhNotFound
	         $280a = CopyDEintoHLwhileFFhNotFound.loop
	         $2812 = StubInterruptHandler
	         $2813 = SpriteSpecStruct_LPieceActive
	         $281b = SpriteSpecStruct_LPieceNext
	         $2823 = SpriteSpecStruct_GameMusicAType
	         $282f = SpriteSpecStruct_ATypeFlashing0
	         $2835 = SpriteSpecStruct_BTypeLevelAndHigh
	         $2841 = SpriteSpecStruct_2PlayerHighsFlashing1
	         $284d = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $285f = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $2871 = SpriteSpecStruct_MariosFacingAway
	         $287d = SpriteSpecStruct_LuigisFacingAway
	         $2889 = SpriteSpecStruct_Dancers
	         $28c5 = SpriteSpecStruct_ShuttleAndGas
	         $28d7 = SpriteSpecStruct_RocketAndGas
	         $28e9 = FillScreen0FromHLdownWithEmptyTile
	         $28ec = FillScreenFromHLdownWithEmptyTile
	         $28ef = FillScreenFromHLdownWithEmptyTile.loop
	         $28f8 = CopyHLtoDE_BCbytes
	         $28f8 = CopyHLtoDE_BCbytes.loop
	         $2901 = LoadAsciiAndMenuScreenGfx
	         $291c = CopyAsciiTileData
	         $2925 = CopyAsciiTileData.loop
	         $2930 = CopyAsciiAndTitleScreenTileData
	         $293f = UnusedCopyHLtoVram1000hBytes
	         $2942 = CopyHLtoVramBCbytes
	         $2948 = Stub_27ea
	         $2949 = CopyLayoutToScreen0
	         $294c = CopyLayoutToHL
	         $294e = CopyLayoutBrowsToHL
	         $294e = CopyLayoutBrowsToHL.loopRow
	         $2951 = CopyLayoutBrowsToHL.loopCol
	         $2962 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $2962 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $2965 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $2978 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $297e = TurnOffLCD
	         $2986 = TurnOffLCD.waitUntilInVBlank
	         $2997 = GameInnerScreenLayout_Pause
	         $29e7 = GameScreenLayout_ScoreTotals
	         $2a9c = GameInnerScreenLayout_GameOver
	         $2ad4 = GameInnerScreen_TryAgain
	         $2b04 = PollInput
	         $2b41 = GetScreen0AddressOfPieceSquare
	         $2b54 = GetScreen0AddressOfPieceSquare.loop
	         $2b6e = UnusedMovePieceUpAndRight
	         $2b76 = UnusedMovePieceUpAndRight.deDiv16
	         $2b94 = DisplayBCDNum6DigitsIfForced
	         $2b98 = DisplayBCDNum6Digits
	         $2b9a = DisplayBCDNum2CDigits
	         $2b9d = DisplayBCDNum2CDigits.nextByte
	         $2bae = DisplayBCDNum2CDigits.displayTens
	         $2bc4 = DisplayBCDNum2CDigits.displayOnes
	         $2bcd = DisplayBCDNum2CDigits.tensNot0
	         $2bd5 = DisplayBCDNum2CDigits.onesNot0
	         $2bdd = OamDmaFunction
	         $2be3 = OamDmaFunction.wait
	         $2be7 = CopyToShadowOamBasedOnSpriteSpec
	         $2bec = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $2bfa = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $2c0c = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $2c11 = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $2c13 = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $2c18 = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $2c3b = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $2c53 = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $2c57 = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $2c5b = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $2c6e = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $2c78 = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $2c8d = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $2c97 = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $2ca9 = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $2cab = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	SECTION: $2cc7-$3611 ($094b bytes) ["Sound Engine"]
	         $2cc7 = SquareSoundEffectTable_Init
	         $2cd7 = SquareSoundEffectTable_Update
	         $2ce7 = NoiseSoundEffect_Init
	         $2cef = NoiseSoundEffect_Update
	         $2cf7 = SongsSoundChannelsData
	         $2d19 = Stub
	         $2d1a = UpdateSound
	         $2d2f = UpdateSound.endPath
	         $2d41 = UpdateSound.dontUnset
	         $2d56 = UpdateSound.done
	         $2d6b = UpdateSound.gameJustPaused
	         $2d97 = UpdateSound.setAud2RegsToPause1
	         $2d9a = UpdateSound.copyIntoAud2Regs
	         $2d9f = UpdateSound.setAud2RegsToPause2
	         $2da4 = UpdateSound.gameJustUnpaused
	         $2daa = UpdateSound.processPausedCounter
	         $2dc2 = Aud2RegVals_Pause1
	         $2dc6 = Aud2RegVals_Pause2
	         $2dca = IsSoundEffect_MovingSelection
	         $2dd0 = IsSoundEffect_TetrisRowsFell
	         $2dd6 = IsSoundEffect_4LinesCleared
	         $2ddc = IsSoundEffect_ReachedNextLevel
	         $2de2 = Aud1RegValsInit_MovingSelection
	         $2de7 = Aud1RegValsUpdate_MovingSelection
	         $2dec = Aud1RegValsInit_ConfirmOrLetterTyped
	         $2df1 = SquareEffectInit_MovingSelection
	         $2df9 = SquareEffectUpdate_MovingSelection
	         $2e0d = SquareEffectInit_ConfirmOrLetterTyped
	         $2e15 = SquareEffectUpdate_Common
	         $2e1a = ClearAud1RegsAndVars
	         $2e2e = Aud1RegVals_4LinesCleared_1
	         $2e33 = Aud1RegVals_4LinesCleared_2
	         $2e38 = SquareEffectInit_4LinesCleared
	         $2e3e = SquareEffectUpdate_4LinesCleared
	         $2e55 = SquareEffectUpdate_4LinesCleared.finalWav
	         $2e5e = SquareEffectUpdate_4LinesCleared.sound2
	         $2e64 = SquareEffectUpdate_4LinesCleared.sound1
	         $2e6a = Aud1RegValsInit_PieceMovedHoriz
	         $2e6f = SquareEffectInit_PieceMovedHoriz
	         $2e87 = Aud1RegVals_ReachedNextLevel_0and4
	         $2e8c = Aud1RegVals_ReachedNextLevel_1
	         $2e91 = Aud1RegVals_ReachedNextLevel_2
	         $2e96 = Aud1RegVals_ReachedNextLevel_3
	         $2e9b = SquareEffectInit_ReachedNextLevel
	         $2ea7 = SquareEffectUpdate_ReachedNextLevel
	         $2ec7 = SquareEffectUpdate_ReachedNextLevel.sound1
	         $2ecc = SquareEffectUpdate_ReachedNextLevel.sound2
	         $2ed1 = SquareEffectUpdate_ReachedNextLevel.sound3
	         $2ed6 = SquareEffectUpdate_ReachedNextLevel.sound4
	         $2ed9 = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $2edc = Aud1RegValsInit_Non4LinesCleared
	         $2ee1 = Aud1EnvData_Non4LinesCleared
	         $2eec = Aud1FreqLoData_Non4LinesCleared
	         $2ef6 = SquareEffectInit_Non4LinesCleared
	         $2f0a = SquareEffectUpdate_Non4LinesCleared
	         $2f28 = SetAud1EnvLowHighToEDB
	         $2f33 = Aud1RegValsInit_PieceRotated
	         $2f38 = Aud1EnvData_PieceRotated
	         $2f3e = Aud1FreqLoData_PieceRotated
	         $2f43 = SquareEffectInit_PieceRotated
	         $2f5b = SquareEffectUpdate_PieceRotated
	         $2f7b = SquareEffectInit_TetrisRowsFell
	         $2f87 = Aud1RegValsInit_TetrisRowsFell
	         $2f8c = Aud4RegValsInit_PieceHitFloor
	         $2f90 = Aud4RegValsInit_TetrisRowsFell
	         $2f94 = Aud4RegValsInit_RocketGas
	         $2f98 = Aud4RegValsInit_RocketFire
	         $2f9c = Aud4RegValsUpdate_RocketFire_Poly
	         $2fc0 = Aud4RegValsUpdate_RocketFire_Env
	         $2fe4 = NoiseEffectInit_RocketGas
	         $2fec = NoiseEffectInit_RocketFire
	         $2ff4 = NoiseEffectUpdate_RocketFire
	         $301b = NoiseEffectInit_TetrisRowsFell
	         $3023 = NoiseEffectInit_PieceHitFloor
	         $302b = NoiseEffectUpdate_Common
	         $3030 = NoiseEffectUpdate_ClearNoise
	         $3042 = Aud3RegValsInit_GameOver
	         $3047 = WavEffectInit_GameOver
	         $305e = WavEffectUpdate_GameOver
	         $3071 = WavEffectUpdate_GameOver.setAud3Low
	         $3079 = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $3083 = UpdateWavEffects
	         $309e = Aud3RegValsInit_After4LinesCleared
	         $30a3 = Aud3RegValsUpdate_After4LinesCleared_1
	         $30a8 = Aud3RegValsUpdate_After4LinesCleared_2
	         $30ad = Aud3RegValsUpdate_After4LinesCleared_3
	         $30b2 = WavEffectInit_After4LinesCleared
	         $30c7 = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $30ca = WavEffectUpdate_sound1
	         $30db = WavEffectUpdate_sound2
	         $30ec = WavEffectUpdate_sound3
	         $30fd = WavEffectUpdate_After4LinesCleared
	         $311f = WavEffectUpdate_After4LinesCleared.incLowVal
	         $3123 = WavEffectUpdate_After4LinesCleared.decLowVal
	         $3125 = WavEffectUpdate_After4LinesCleared.setLowVal
	         $3129 = ClearWavVarsAndRegs_ResumeMusic
	         $314f = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $3154 = InitWavEffect_pauseOtherChannels
	         $3179 = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $317d = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $319d = CopyDefaultValsInHLIntoAud1Regs
	         $31a4 = CopyDefaultValsInHLIntoAud2Regs
	         $31ab = CopyDefaultValsInHLIntoAud3Regs
	         $31b2 = CopyDefaultValsInHLIntoAud4Regs
	         $31b7 = CopyDefaultValsInHLIntoAudCRegs
	         $31b7 = CopyDefaultValsInHLIntoAudCRegs.loop
	         $31bf = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $31c3 = HLequAddressForSongData_tableHL_incE
	         $31d2 = IncCounterInDE_retZifHitsThreshold
	         $31dd = IncCounterInDE_retZifHitsThreshold.done
	         $31df = CopyFromHLintoWav3Ram
	         $31e2 = CopyFromHLintoWav3Ram.loop
	         $31ec = InitSound
	         $320e = ResetSoundHwRegs
	         $3224 = UpdateSquareEffects
	         $3237 = UpdateSquareEffects.noSquareEffectToPlay
	         $3243 = UpdateSquareEffects.done
	         $3244 = UpdateNoiseEffects
	         $3257 = UpdateNoiseEffects.noNoiseEffectToPlay
	         $3263 = UpdateNoiseEffects.done
	         $3264 = MuteSound
	         $3268 = InitSong
	         $3283 = SetSongsAudTermVars
	         $328b = SetSongsAudTermVars.nextSong
	         $3294 = SetSongsAudTermVars.setSongVars
	         $32ac = SetSongsAudTermRegs
	         $32d6 = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $32e1 = SetSongsAudTermRegs.afterDecidingWavOutput
	         $32eb = SetSongsAudTermRegs.setAudTermToB
	         $32ec = SetSongsAudTermRegs.setAudTerm
	         $32ef = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $32f3 = SetSongsAudTermRegs.use1stOutputValue
	         $32f8 = SetSongsAudTermRegs.notTimeToSwapOutput
	         $3305 = SongAudTermData
	         $3349 = StoreWordInWordInHLintoDE
	         $3354 = StoreWordInHLIintoDE
	         $335a = SetSongsInitialSoundChannelVars
	         $33b1 = SetSongsInitialSoundChannelVars.loop
	         $33c4 = ProcessSoundByte9dh_SetParams.aud3
	         $33c4 = ProcessSoundByte9dh_SetParams
	         $33d0 = ProcessSoundByte9dh_SetParams.start
	         $33fa = ProcessSoundByte9dh_SetParams.end
	         $3400 = IncWordInHL
	         $3406 = IncWordInHL.store
	         $340c = IncWordTwiceInHL
	         $3415 = GetABInWordStoredInHL
	         $341c = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $341c = UpdateMusic
	         $341f = UpdateMusic.processCurrSoundByteEnvelope
	         $3436 = UpdateMusic.passedWaveEnvelope
	         $344b = UpdateMusic.toNextSndChannelFromStructIdx2
	         $3450 = UpdateMusic.setNextAddrInCurrSndChannelData
	         $3457 = UpdateMusic.afterSpecialSoundByteAddress
	         $346b = UpdateMusic.sndChannelAddrEquFFFFh
	         $3482 = UpdateMusic.stopCurrSong
	         $348b = UpdateMusic.start
	         $3499 = UpdateMusic.nextSoundChannel
	         $34a3 = UpdateMusic.afterSettingSoundDataAddress
	         $34a5 = UpdateMusic.processNextSoundByte
	         $34d2 = UpdateMusic.contSoundByte
	         $34fe = UpdateMusic.soundByte01
	         $3503 = UpdateMusic.getNoiseDataToWrite
	         $350b = UpdateMusic.noiseLoop
	         $351a = UpdateMusic.getNonNoiseDataToWrite
	         $3534 = UpdateMusic.contWave
	         $353f = UpdateMusic.startWritingToSq2
	         $3543 = UpdateMusic.startWritingToSq1
	         $3548 = UpdateMusic.afterChoosingSndChannelBaseReg
	         $3551 = UpdateMusic.after_hasWavRam
	         $3554 = UpdateMusic.fromWav
	         $355d = UpdateMusic.afterDisabledEnvelopeCheck
	         $357b = UpdateMusic.skippingHwRegWrites
	         $3580 = UpdateMusic.toNextSndChannel
	         $3591 = UpdateMusic.done
	         $359e = UpdateMusic.hasWavRam
	         $35a5 = GetEinDEplusBdiv2
	         $35ae = WriteToFrequencyRegsAdjustedWithEnvelope
	         $35d0 = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $35d2 = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $35e8 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $35ed = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $35f9 = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $3606 = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $3608 = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $3609 = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $3612-$3fef ($09de bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $0a11 bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7f17 ($383d bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Layout_ATypeInGame
	         $56db = Gfx_MenuScreens.end
	         $5843 = Layout_BTypeInGame
	         $59ab = Gfx_Ascii
	         $5ae3 = Gfx_Ascii.end
	         $5ae3 = Gfx_TitleScreen
	         $6283 = Layout_Copyright
	         $6283 = Gfx_TitleScreen.end
	         $63eb = Layout_TitleScreen
	         $6643 = Layout_GameMusicTypeScreen
	         $67ab = Layout_ATypeSelectionScreen
	         $6913 = Layout_BTypeSelectionScreen
	         $6a7b = GameScreenLayout_Dancers
	         $6b30 = Layout_RocketScene
	         $6b80 = Layout_MarioLuigiScreen
	         $6ce8 = Layout_2PlayerInGame
	         $6e50 = Layout_MarioScore
	         $6ea0 = Layout_BricksAndLuigiScore
	         $6f18 = Gfx_RocketScene
	         $7f18 = Gfx_RocketScene.end
	EMPTY: $7f18-$7fff ($00e8 bytes)
	TOTAL EMPTY: $00e8 bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$55bf ($03c0 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $5458 = Layout_RocketScene_Sunrise_Sunset
	         $55c0 = Layout_RocketScene_Sunrise_Sunset.end
	EMPTY: $55c0-$7fff ($2a40 bytes)
	TOTAL EMPTY: $2a45 bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4674 ($0475 bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $4458 = Layout_RocketScene_Night
	         $45c0 = GameScreenLayout_Dancers_Night
	         $4675 = GameScreenLayout_Dancers_Night.end
	EMPTY: $4675-$7fff ($398b bytes)
	TOTAL EMPTY: $39db bytes

WRAM0 bank #0:
	SECTION: $c000-$dfff ($2000 bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wBTypeHighScores
	         $d654 = wATypeHighScores
	         $d762 = wd762
	         $df70 = wCurrSoundChannelBeingProcessed
	         $df71 = wOrigSoundEffectIdx
	         $df71 = wUnusedShadowAudLen
	         $df72 = wdf72
	         $df75 = wAudTermCounterUntilChangingOutput
	         $df76 = wAudTermCounterValueToHitToChangeOutput
	         $df77 = wAudTermSelectedOutputVal
	         $df78 = wAudTermSongsSpec
	         $df79 = wAudTermOutputValue1
	         $df7a = wAudTermOutputValue2
	         $df7b = wdf7b
	         $df7e = wGamePausedSoundTimer
	         $df7f = wGamePausedActivity
	         $df80 = wUnused_df80
	         $df81 = wSongTempoAddr
	         $df83 = wdf83
	         $df90 = wAudStructs
	         $df90 = wAud1Struct
	         $dfa0 = wAud2Struct
	         $dfb0 = wAud3Struct
	         $dfc0 = wAud4Struct
	         $dfd0 = wdfd0
	         $dfe0 = wSquareSoundToPlay
	         $dfe1 = wSquareEffectBeingPlayed
	         $dfe2 = wSquareEffectFrameCounter
	         $dfe3 = wSquareEffectFrameCounterThreshold
	         $dfe4 = wSquareEffectMiscCounter
	         $dfe5 = wdfe5
	         $dfe8 = wSongToStart
	         $dfe9 = wSongBeingPlayed
	         $dfea = wdfea
	         $dff0 = wWavSoundToPlay
	         $dff1 = wWavEffectBeingPlayed
	         $dff2 = wWavEffectFrameCounter
	         $dff3 = wWavEffectFrameCounterThreshold
	         $dff4 = wWavEffectMiscCounter
	         $dff5 = wWavEffectRandomVal
	         $dff5 = wWavEffectShouldIncOrDec
	         $dff6 = wWavEffectCurrLoVal
	         $dff7 = wdff7
	         $dff8 = wNoiseSoundToPlay
	         $dff9 = wNoiseEffectBeingPlayed
	         $dffa = wNoiseEffectFrameCounter
	         $dffb = wNoiseEffectFrameCounterThreshold
	         $dffc = wNoiseEffectMiscCounter
	         $dffd = wOptionLights
	         $dffe = wOptionColors
	         $dfff = wOptionDayNightCycle
	         $e000 = wOptionDayNightCycle.end
	TOTAL EMPTY: $0000 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 13807 bytes used / 2577 free
	ROMX: 23288 bytes used / 25864 free in 3 banks
	WRAM0: 8192 bytes used / 0 free
	HRAM: 127 bytes used / 0 free
