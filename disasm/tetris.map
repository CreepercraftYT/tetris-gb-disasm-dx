ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$3012 ($2ec3 bytes) ["Begin"]
	         $0150 = Begin
	         $0153 = UnusedGetScreenTileInHLWhileOamFree
	         $0156 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $015d = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $0166 = AddScoreValueDEontoBaseScoreHL
	         $017e = VBlankInterruptHandler
	         $0199 = VBlankInterruptHandler.afterMasterTransfer
	         $01fe = VBlankInterruptHandler.end
	         $020a = Begin2
	         $0217 = Begin2.clear2ndWram
	         $021e = Reset
	         $0236 = Reset.waitUntilVBlank
	         $0263 = Reset.clearLastPage
	         $026e = Reset.clear1stWram
	         $027d = Reset.clearVram
	         $0289 = Reset.clearOam
	         $0292 = Reset.clearHram
	         $029d = Reset.copyOamDmaFunc
	         $02c7 = MainLoop
	         $02de = MainLoop.nextTimer
	         $02ea = MainLoop.toNextTimer
	         $02f7 = MainLoop.waitUntilVBlankIntDone
	         $0302 = ProcessGameState
	         $0373 = GameState24_CopyrightDisplay
	         $0396 = GameState24_CopyrightDisplay.adjLoopA
	         $039c = GameState24_CopyrightDisplay.noPalAdjA
	         $03b6 = GameState24_CopyrightDisplay.adjLoopB
	         $03bc = GameState24_CopyrightDisplay.noPalAdjB
	         $03df = GameState24_CopyrightDisplay.copyLoop
	         $03f4 = GameState25_CopyrightWaiting
	         $040b = GameState35_CopyrightCanContinue
	         $0419 = GameState35_CopyrightCanContinue.setNewState
	         $041e = GameState06_TitleScreenInit
	         $0443 = GameState06_TitleScreenInit.clearScreenBuffer
	         $045e = GameState06_TitleScreenInit.displayBlackRow
	         $0476 = GameState06_TitleScreenInit.sunriseOrSunset
	         $047b = GameState06_TitleScreenInit.night
	         $047e = GameState06_TitleScreenInit.copy
	         $04bd = PlayDemo
	         $04fd = PlayDemo.setDemoPlayed
	         $0517 = UnusedSetRecordingDemo
	         $051c = GameState07_TitleScreenMain
	         $052b = GameState07_TitleScreenMain.afterTimerCheck
	         $0547 = GameState07_TitleScreenMain.checkButtonsPressed
	         $0580 = !0
	         $0584 = GameState07_TitleScreenMain.scrollLoop
	         $058b = !1
	         $059a = GameState07_TitleScreenMain.playerChecks
	         $05b1 = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $05bb = GameState07_TitleScreenMain.setGameStateTo2ah
	         $05bd = GameState07_TitleScreenMain.setGameState
	         $05cb = GameState07_TitleScreenMain.is1Player
	         $05d4 = GameState07_TitleScreenMain.afterUpCheck
	         $05d7 = GameState07_TitleScreenMain.flipNumPlayersOption
	         $05d9 = GameState07_TitleScreenMain.setNumPlayersOpt
	         $05f1 = !2
	         $05fe = !3
	         $0605 = GameState07_TitleScreenMain.setCursorX
	         $0609 = GameState07_TitleScreenMain.pressedRight
	         $060f = GameState07_TitleScreenMain.pressedLeft
	         $0613 = GameState07_TitleScreenMain.pressedDown
	         $061c = GameState07_TitleScreenMain.pressedUp
	         $061f = GameState07_TitleScreenMain.multiplayerInvalid
	         $0622 = GameState07_TitleScreenMain.optionMenu
	         $0637 = !4
	         $063f = !5
	         $0647 = !6
	         $0649 = GameState07_TitleScreenMain.setCursorY
	         $064c = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $0661 = GameState07_TitleScreenMain.updateClock
	         $066f = GameState07_TitleScreenMain.loopa
	         $0689 = GameState07_TitleScreenMain.loopb
	         $0699 = GameState07_TitleScreenMain.pressedDownOptions
	         $06a2 = GameState07_TitleScreenMain.pressedUpOptions
	         $06ac = GameState07_TitleScreenMain.pressedBOptions
	         $06ac = GameState07_TitleScreenMain.scrollLoopBack
	         $06b3 = !7
	         $06c2 = GameState07_TitleScreenMain.doneScrolling
	         $06d3 = GameState07_TitleScreenMain.pressedAOptions
	         $06f4 = !8
	         $06fa = !9
	         $0700 = GameState07_TitleScreenMain.waitVRAMA
	         $0709 = GameState07_TitleScreenMain.setTime
	         $0716 = GameState07_TitleScreenMain.hours
	         $074b = GameState07_TitleScreenMain.decreaseHours
	         $0752 = GameState07_TitleScreenMain.updateDecH
	         $0757 = GameState07_TitleScreenMain.separateTensDecH
	         $0762 = GameState07_TitleScreenMain.waitVRAM1
	         $0770 = GameState07_TitleScreenMain.increaseHours
	         $0777 = GameState07_TitleScreenMain.updateIncH
	         $077c = GameState07_TitleScreenMain.separateTensIncH
	         $0787 = GameState07_TitleScreenMain.waitVRAM2
	         $0795 = GameState07_TitleScreenMain.minutes
	         $07cb = GameState07_TitleScreenMain.decreaseMinutes
	         $07d2 = GameState07_TitleScreenMain.updateDecM
	         $07d7 = GameState07_TitleScreenMain.separateTensDecM
	         $07e2 = GameState07_TitleScreenMain.waitVRAM3
	         $07f9 = GameState07_TitleScreenMain.increaseMinutes
	         $0800 = GameState07_TitleScreenMain.updateIncM
	         $0805 = GameState07_TitleScreenMain.separateTensIncM
	         $0810 = GameState07_TitleScreenMain.waitVRAM4
	         $0828 = GameState07_TitleScreenMain.exit
	         $0836 = DemoSendPingsAndEndAfterAllStepsDone
	         $0857 = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $0864 = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $086c = DemoPollInput
	         $0884 = DemoPollInput.mainBit
	         $08a0 = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $08a3 = DemoPollInput.end
	         $08ac = UnusedClearDemoButtonsHeld
	         $08b2 = DemoRecordInput
	         $08dc = DemoRecordInput.incFrames
	         $08e2 = DemoRestorePlayerButtonsHeld
	         $08ef = GameState2a_passive
	         $08f6 = GameState2a_2PlayerGameMusicTypeInit
	         $0900 = GameState2a_2PlayerGameMusicTypeInit.cont
	         $0926 = GameState2b_2PlayerGameMusicTypeMain
	         $0942 = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $094f = GameState2b_2PlayerGameMusicTypeMain.cont
	         $0973 = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $098c = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $0993 = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $099b = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $099f = GameState16_passive
	         $09a6 = GameState16_MarioLuigiScreenInit
	         $09be = GameState16_MarioLuigiScreenInit.loop
	         $09c5 = GameState16_MarioLuigiScreenInit.cont
	         $09fc = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $0a39 = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $0a59 = CopyDEtoHL_Bbytes
	         $0a59 = CopyDEtoHL_Bbytes.loop
	         $0a60 = GameState17_MarioLuigiScreenMain
	         $0a77 = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $0a7e = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0a89 = GameState17_MarioLuigiScreenMain.isMaster
	         $0a93 = GameState17_MarioLuigiScreenMain.notPressedStart
	         $0a9e = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $0aa1 = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $0abe = GameState17_MarioLuigiScreenMain.aGameFinished
	         $0ad6 = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $0ade = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $0ae0 = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $0ae8 = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $0af1 = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $0b0a = GameState17_MarioLuigiScreenMain.pressedRight
	         $0b0f = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0b15 = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $0b1c = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0b22 = GameState17_MarioLuigiScreenMain.pressedUp
	         $0b2a = Player1HighCoords
	         $0b36 = Player2HighCoords
	         $0b42 = Set2PlayerHighCoords
	         $0b59 = GameState18_2PlayerInGameInit
	         $0b61 = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $0bdd = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $0bfd = GameState18_2PlayerInGameInit.luigiFace
	         $0c0d = GameState18_2PlayerInGameInit.marioFace
	         $0c1d = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0c2b = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0c3c = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0c4f = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0c51 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0c5e = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0c76 = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0c81 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0c83 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0c9d = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0ca6 = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0cad = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0cbe = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0cce = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0cdb = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0ce3 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0cf4 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0cff = GameState19_commonEnd
	         $0d1d = GameState19_commonEnd.afterPassiveCheck
	         $0d2f = GameState19_passive
	         $0d39 = GameState19_passive.toDecB
	         $0d3f = GameState19_passive.waitUntilMasterPresent
	         $0d4d = GameState19_passive.waitUntilPingToMasterHandled
	         $0d5d = GameState19_passive.nextRow
	         $0d5f = GameState19_passive.nextCol
	         $0d68 = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0d77 = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0d85 = GameState19_passive.waitUntilTransferFinished
	         $0d95 = GameState19_passive.loadNextPiece
	         $0d9e = GameState19_passive.waitUntilTransferFinished2
	         $0da9 = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0db7 = GameState19_passive.waitUntilTransferFinished3
	         $0dc5 = LoadBottomRowWithBlocks
	         $0dcc = LoadBottomRowWithBlocks.nextCol
	         $0dd1 = SerialTransferWaitFunc
	         $0dd4 = SerialTransferWaitFunc.loop
	         $0dda = ShuffleHiddenPieces2Player
	         $0de3 = ShuffleHiddenPieces2Player.nextRandomVal
	         $0de6 = ShuffleHiddenPieces2Player.loop1chTo0
	         $0de7 = ShuffleHiddenPieces2Player.toDecB
	         $0df4 = ShuffleHiddenPieces2Player.afterBEqu0
	         $0e02 = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0e0b = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0e2a = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0e3b = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0e43 = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0e55 = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0e5a = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0e63 = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0e6a = GameState1a_2PlayerInGameMain
	         $0eac = GameState1a_2PlayerInGameMain.notYetFinished
	         $0ebc = GameState1a_2PlayerInGameMain.afterLevelDone
	         $0ecd = GameState1a_2PlayerInGameMain.end
	         $0ed4 = CheckAlmostLosingStatus
	         $0ede = CheckAlmostLosingStatus.nextRow
	         $0ee1 = CheckAlmostLosingStatus.nextCol
	         $0eee = CheckAlmostLosingStatus.afterLoop
	         $0f00 = CheckAlmostLosingStatus.nearTop
	         $0f0f = MasterPausedSerialByteRead
	         $0f29 = InGame2PlayerProcessSerialByte
	         $0f55 = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $0f57 = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $0f5e = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $0f60 = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $0f67 = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $0f73 = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $0f86 = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $0f89 = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $0f99 = InGame2PlayerProcessSerialByte.noLineMarkings
	         $0f9d = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $0fb5 = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $0fbb = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $0fc5 = CheckIfOtherPlayerCleared2PlusLines
	         $0fd1 = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $0fdb = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $0fe3 = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $0fec = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $0fee = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $1006 = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $100b = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $1024 = GameState1b_2PlayerGameEnd
	         $103c = GameState1b_2PlayerGameEnd.tie
	         $1042 = GameState1b_2PlayerGameEnd.notLost
	         $104c = GameState1b_2PlayerGameEnd.cont
	         $1060 = GameState1b_2PlayerGameEnd.setGameState
	         $106b = GameState1d_2PlayerWinnerInit
	         $1079 = GameState1d_2PlayerWinnerInit.cont
	         $1088 = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $109e = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $10b7 = WinnerMainIsMaster
	         $10c4 = WinnerMainIsMaster.notWonAll5
	         $10ca = WinnerMainIsMaster.toNextState
	         $10d2 = GameState20_2PlayerWinnerMain
	         $10e6 = GameState20_2PlayerWinnerMain.end
	         $10ef = GoPastWinnerGameStates
	         $10f6 = ProcessWinnerMainTimer
	         $111e = ProcessWinnerMainTimer.afterTimerCheck
	         $113c = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $1148 = ProcessWinnerMainTimer.hideBabySprite
	         $114c = ProcessWinnerMainTimer.end
	         $115c = GameState1e_2PlayerLoserInit
	         $116a = GameState1e_2PlayerLoserInit.cont
	         $1179 = GameState1e_2PlayerLoserInit.loadSadSprites
	         $118f = GameState1e_2PlayerLoserInit.copySadSprites
	         $11a8 = LoserMainIsMaster
	         $11b5 = LoserMainIsMaster.notLost5
	         $11bb = LoserMainIsMaster.toNextState
	         $11c3 = GameState21_2PlayerLoserMain
	         $11d7 = GameState21_2PlayerLoserMain.end
	         $11e0 = GoPastLoserGameStates
	         $11e7 = ProcessLoserMainTimer
	         $1208 = ProcessLoserMainTimer.afterTimerCheck
	         $122c = ProcessLoserMainTimer.turnAdultToBigGas
	         $123c = ProcessLoserMainTimer.hideAdultSprite
	         $1240 = ProcessLoserMainTimer.end
	         $1250 = DisplayTextPushStart
	         $126c = DisplayTextPushStart.loop
	         $1272 = DisplayTextPushStart.done
	         $1275 = DisplayTextPushStart.sprites
	         $1299 = ClearPushStartText
	         $12a2 = ClearPushStartText.loop
	         $12a8 = LoadWinnerLoserScreen
	         $12f7 = LoadWinnerLoserScreen.afterBGdisplay
	         $12ff = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $1319 = LoadWinnerLoserScreen.drawWinnerText
	         $131e = LoadWinnerLoserScreen.afterWinningText
	         $1329 = LoadWinnerLoserScreen.drawFaces
	         $134d = LoadWinnerLoserScreen.checkLosingGames
	         $1367 = LoadWinnerLoserScreen.drawLoserText
	         $136c = LoadWinnerLoserScreen.afterLosingText
	         $1377 = LoadWinnerLoserScreen.drawFaces2
	         $1390 = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $13a0 = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $13a8 = DrawCfaces
	         $13a8 = DrawCfaces.nextFace
	         $13b0 = DrawCfaces.nextRow
	         $13c3 = ProcessDeuceAdvantageLogic
	         $13e1 = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $13ea = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $13ee = ProcessDeuceAdvantageLogic.won4
	         $13f0 = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $13f3 = ProcessDeuceAdvantageLogic.clearAdvantages
	         $13f9 = ProcessDeuceAdvantageLogic.wasDeuce
	         $1400 = ProcessDeuceAdvantageLogic.clearDeuce
	         $1404 = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $1408 = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $140f = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $1416 = CopyAndUnderlineTextDEtoHL_Bbytes
	         $1418 = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $1426 = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $142b = TextDeuce
	         $1431 = TextMarioWins
	         $143c = TextLuigiWins
	         $1447 = TextAdvantage
	         $1450 = GameState1f_Post2PlayerResults
	         $1478 = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $147d = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $1496 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $1498 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $149e = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $14a5 = GameState26_ShuttleSceneInit
	         $14f0 = DisplayRocketScene
	         $1529 = GameState27_ShuttleSceneShowClouds
	         $153f = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $1548 = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $155f = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $1568 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $1587 = GameState02_ShuttleSceneLiftoff
	         $15ba = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $15be = GameState03_ShuttleSceneShootFire
	         $15e0 = GameState03_ShuttleSceneShootFire.checkTimer2
	         $15f0 = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $15f6 = GameState2c_ShuttleSceneShowCongratulations
	         $1638 = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $1648 = GameState2d_CongratsWaitingBeforeBTypeScore
	         $1648 = GameState2c_ShuttleSceneShowCongratulations.end
	         $1663 = GameState34_PreRocketSceneWait
	         $166c = GameState2e_RocketSceneInit
	         $1699 = GameState2f_RocketSceneShowClouds
	         $16af = GameState30_PoweringUp
	         $16b8 = GameState30_PoweringUp.liftingOff
	         $16c6 = GameState31_RocketSceneLiftOff
	         $16f9 = GameState31_RocketSceneLiftOff.toggleVisibility
	         $16fd = GameState32_RocketSceneShootFire
	         $1717 = GameState32_RocketSceneShootFire.checkTimer2
	         $1727 = GameState32_RocketSceneShootFire.copySpecsToOam
	         $172d = GameState33_RocketSceneEnd
	         $1747 = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $1759 = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $1768 = ShuttleMetalStructureLeft
	         $176f = ShuttleMetalStructureRight
	         $1776 = RocketMetalStructureLeft
	         $177d = RocketMetalStructureRight
	         $1784 = CopyDEintoHLsColumn_Bbytes
	         $1784 = CopyDEintoHLsColumn_Bbytes.loop
	         $1791 = GameState08_GameMusicTypeInit
	         $179c = GameMusicTypeInitWithoutDisablingSerialRegs
	         $17cf = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $17de = Stub_148c
	         $17df = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $17e4 = SetSpriteSpecCoordsForMusicType
	         $17fa = SetSpriteSpecCoordsForMusicType.coords
	         $1802 = GameState0f_MusicTypeMain
	         $181a = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $1832 = GameState0f_MusicTypeMain.setMusicType
	         $1839 = GameState0f_MusicTypeMain.copyToShadowOam
	         $183d = GameState0f_MusicTypeMain.pressedUp
	         $1845 = GameState0f_MusicTypeMain.pressedRight
	         $1850 = GameState0f_MusicTypeMain.pressedLeft
	         $185b = GameState0f_MusicTypeMain.pressedB
	         $1864 = GameState0f_MusicTypeMain.not2player
	         $1869 = PlaySongBasedOnMusicTypeChosen
	         $1873 = PlaySongBasedOnMusicTypeChosen.playSong
	         $1877 = GameState0e_GameTypeMain
	         $189d = GameState0e_GameTypeMain.pressedRight
	         $18a5 = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $18b0 = GameState0e_GameTypeMain.setSpecIdx
	         $18b1 = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $18b5 = GameState0e_GameTypeMain.pressedStart
	         $18c4 = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $18c9 = GameState0e_GameTypeMain.pressedA
	         $18cd = GameState10_ATypeSelectionInit
	         $1911 = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $1913 = GameState10_ATypeSelectionInit.setGameState
	         $1916 = GameState11_ATypeSelectionMain
	         $1948 = GameState11_ATypeSelectionMain.pressedRight
	         $194d = GameState11_ATypeSelectionMain.setNewLevel
	         $195a = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $195e = GameState11_ATypeSelectionMain.pressedLeft
	         $1964 = GameState11_ATypeSelectionMain.pressedUp
	         $196c = ATypeLevelsCoords
	         $1980 = GameState12_BTypeSelectionInit
	         $19cc = GameState12_BTypeSelectionInit.setEnterHiScore
	         $19d1 = GameState13_setGameStateMakeSpriteVisible
	         $19d6 = GameState13_BTypeSelectionMain
	         $1a0a = GameState13_BTypeSelectionMain.pressedRight
	         $1a0f = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $1a1c = GameState13_BTypeSelectionMain.sendToOam
	         $1a20 = GameState13_BTypeSelectionMain.pressedLeft
	         $1a26 = GameState13_BTypeSelectionMain.pressedUp
	         $1a2e = BTypeLevelsCoords
	         $1a42 = GameState14_setGameStateMakeSpriteVisible
	         $1a47 = GameState14_BTypeHighMain
	         $1a79 = GameState14_BTypeHighMain.pressedRight
	         $1a7e = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1a8b = GameState14_BTypeHighMain.sendToOam
	         $1a8f = GameState14_BTypeHighMain.pressedLeft
	         $1a95 = GameState14_BTypeHighMain.pressedUp
	         $1a9d = BTypeHighsCoords
	         $1aa9 = UnusedNop_174d
	         $1aaa = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1ab1 = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1ac2 = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $1ad2 = CopyCSpriteSpecStructsFromDEtoHL
	         $1ad2 = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $1ad5 = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $1ae6 = Clear_wOam
	         $1aec = Clear_wOam.loop
	         $1af1 = DisplayATypeHighScoresForLevel
	         $1afc = DisplayATypeHighScoresForLevel.decA
	         $1b03 = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1b0b = DisplayBTypeHighScoresForLevel
	         $1b16 = DisplayBTypeHighScoresForLevel.decA1
	         $1b1d = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1b22 = DisplayBTypeHighScoresForLevel.decA2
	         $1b29 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $1b31 = CopyHighScoreValueToRamBuffer
	         $1b33 = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1b43 = CopyHighScoreValueToRamBuffer.hasTens
	         $1b4d = CopyHighScoreValueToRamBuffer.storeDigits
	         $1b53 = CopyHLtoDEbackwards_3bytes
	         $1b55 = CopyHLtoDEbackwards_Bbytes.loop
	         $1b55 = CopyHLtoDEbackwards_Bbytes
	         $1b5c = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1b64 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1b6a = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1b75 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $1b7e = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $1b90 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1b98 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $1b9d = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $1bb4 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $1bbe = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $1bc2 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $1bdc = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $1be7 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $1c06 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $1c09 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1c12 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1c26 = DisplayHighScoresAndNamesForLevel
	         $1c32 = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1c33 = DisplayHighScoresAndNamesForLevel.next6chars
	         $1c35 = DisplayHighScoresAndNamesForLevel.copyName
	         $1c53 = DisplayHighScoresAndNamesForLevel.end
	         $1c58 = DisplayDottedLinesForHighScore
	         $1c62 = DisplayDottedLinesForHighScore.nextRow
	         $1c65 = DisplayDottedLinesForHighScore.nextCol
	         $1c6f = GameState15_EnteringHighScore
	         $1c77 = GameState15_EnteringHighScore.decA
	         $1c7d = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1c9d = GameState15_EnteringHighScore.setTile
	         $1ca0 = GameState15_EnteringHighScore.afterTimerCheck
	         $1cc4 = GameState15_EnteringHighScore.done
	         $1cd8 = GameState15_EnteringHighScore.setGameState
	         $1cdb = GameState15_EnteringHighScore.upHeld
	         $1ce3 = GameState15_EnteringHighScore.upPressed
	         $1cee = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1cf4 = GameState15_EnteringHighScore.incChar
	         $1cf5 = GameState15_EnteringHighScore.setChar
	         $1cfc = GameState15_EnteringHighScore.notUpLastChar
	         $1d04 = GameState15_EnteringHighScore.downHeld
	         $1d0c = GameState15_EnteringHighScore.downPressed
	         $1d17 = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1d1e = GameState15_EnteringHighScore.decChar
	         $1d21 = GameState15_EnteringHighScore.notDownLastChar
	         $1d28 = GameState15_EnteringHighScore.aPressed
	         $1d43 = GameState15_EnteringHighScore.setNextCharLoc
	         $1d4a = GameState15_EnteringHighScore.bPressed
	         $1d5a = StoreAinHLwhenLCDFree
	         $1d5b = StoreBinHLwhenLCDFree
	         $1d5b = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1d63 = GameState0a_InGameInit
	         $1da0 = GameState0a_InGameInit.afterGameTypeCheck
	         $1dd2 = GameState0a_InGameInit.afterHardModeCheck
	         $1df0 = GameState0a_InGameInit.setNumLinesCompleted
	         $1df9 = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $1e07 = GameState0a_InGameInit.afterPieceHiddenCheck
	         $1e37 = GameState0a_InGameInit.notDemo
	         $1e41 = GameState0a_InGameInit.end
	         $1e49 = SetNumFramesUntilPiecesMoveDown
	         $1e5a = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $1e5b = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $1e67 = SetNumFramesUntilPiecesMoveDown.framesData
	         $1e7c = PopulateDemoBTypeScreenWithBlocks
	         $1e84 = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $1e87 = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $1ea1 = PopulateDemoBTypeScreenWithBlocks.layout
	         $1ec9 = PopulateGameScreenWithRandomBlocks
	         $1eca = PopulateGameScreenWithRandomBlocks.decB
	         $1ed0 = PopulateGameScreenWithRandomBlocks.mainLoop
	         $1ed3 = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $1ed5 = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $1ee0 = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $1eec = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $1eee = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $1f01 = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $1f02 = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $1f0e = PopulateGameScreenWithRandomBlocks.from2player
	         $1f23 = PopulateGameScreenWithRandomBlocks.toNextRow
	         $1f29 = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $1f2f = GameState00_InGameMain
	         $1f55 = InGameCheckResetAndPause.startNotPressed
	         $1f55 = InGameCheckResetAndPause
	         $1f64 = InGameCheckResetAndPause.setPieceVisibility
	         $1f6b = InGameCheckResetAndPause.pieceNotHidden
	         $1f6e = InGameCheckResetAndPause.start
	         $1fa0 = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $1fae = InGameCheckResetAndPause.setNextPieceVisibility
	         $1fb1 = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $1fbb = InGameCheckResetAndPause.gameUnPaused
	         $1fcb = InGameCheckResetAndPause.is2Player
	         $1fe9 = InGame2PlayerCheckUnpaused
	         $2002 = InGame2PlayerCheckUnpaused.isPassive
	         $200b = InGame2PlayerCheckUnpaused.gameUnpaused
	         $2022 = InGame2PlayerCheckUnpaused.loop
	         $202a = InGame2PlayerCheckUnpaused.popHL
	         $202c = Display2PlayerPauseText
	         $2034 = Display2PlayerPauseText.loop
	         $203e = Display2PlayerPauseText.text
	         $2043 = GameState01_GameOverInit
	         $2067 = GameState04_LevelEndedMain
	         $2070 = GameState04_LevelEndedMain.aOrStartPressed
	         $2084 = GameState04_LevelEndedMain.setGameState
	         $2087 = GameState05_BTypeLevelFinished
	         $20c3 = GameState05_BTypeLevelFinished.clearScore
	         $20c7 = GameState05_BTypeLevelFinished.fromLevel0
	         $20e5 = DisplayBTypeScoreMultipliersBasedOnLevel
	         $20ec = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $20f4 = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $2103 = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $2112 = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $2118 = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $2121 = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $212f = GameState22_DancersInit
	         $2160 = GameState22_DancersInit.setNextDancerAnimDetails
	         $2175 = GameState22_DancersInit.numDancersInB
	         $217e = GameState22_DancersInit.loopSetVisible
	         $2197 = Dancers_AnimationTimers
	         $21a1 = GameState23_sendDancersToOam
	         $21a7 = GameState23_DancersMain
	         $21b7 = GameState23_DancersMain.nextDancer
	         $21d0 = GameState23_DancersMain.toNextDancer
	         $21ec = GameState23_DancersMain.setGameState
	         $21ef = GameState23_DancersMain.isJumperStanding
	         $21f5 = GameState23_DancersMain.isJumperJumping
	         $21fb = After4ScoreCategoriesProcessed
	         $223d = ProcessScoreUpdatesAfterBTypeLevelDone
	         $2278 = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $227c = GameState0c_UnusedPreShuttleLiftOff
	         $2285 = GameState0d_GameOverScreenClearing
	         $229d = GameState0d_GameOverScreenClearing.is1player
	         $22d2 = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $22d4 = GameState0d_GameOverScreenClearing.setGameState
	         $22d7 = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $22e3 = CopyGameScreenInnerText
	         $22e3 = CopyGameScreenInnerText.nextRow
	         $22e6 = CopyGameScreenInnerText.nextCol
	         $22f7 = AddOnCompletedLinesScore
	         $2329 = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $232f = AddOnCompletedLinesScore.loop
	         $233d = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $2343 = FillGameScreenBufferWithTileA
	         $234b = FillGameScreenBufferWithTileA.nextRow
	         $234e = FillGameScreenBufferWithTileA.nextCol
	         $2358 = FillBottom2RowsOfTileMapWithEmptyTile
	         $2362 = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $2364 = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $236d = PlayNextPieceLoadNextAndHiddenPiece
	         $238a = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $2399 = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $23a7 = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $23a9 = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $23ac = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $23ad = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $23ba = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $23c8 = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $23cb = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $23d7 = InGameHandlePieceFalling.holdingDown
	         $23d7 = InGameHandlePieceFalling
	         $23e9 = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $2402 = InGameHandlePieceFalling.start
	         $240a = InGameHandlePieceFalling.afterPressedDown
	         $2417 = InGameHandlePieceFalling.sendActivePieceToOam
	         $241b = InGameHandlePieceFalling.currScoreEqu0
	         $2428 = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $2466 = InGameHandlePieceFalling.clearTimesHoldingDown
	         $2469 = InGameHandlePieceFalling.fromNotHoldingDown
	         $248a = InGameHandlePieceFalling.skipGameOver
	         $248c = InGameHandlePieceFalling.isAType
	         $248d = InGameHandlePieceFalling.keepAdding
	         $2494 = InGameHandlePieceFalling.addDropsToScore
	         $24a4 = InGameCheckIfAnyTetrisRowsComplete
	         $24b9 = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $24bc = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $24d1 = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $2501 = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $2510 = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $2535 = InGameCheckIfAnyTetrisRowsComplete.end
	         $253e = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $2541 = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $2546 = FlashCompletedTetrisRows
	         $255c = FlashCompletedTetrisRows.upperOuterLoop
	         $256c = FlashCompletedTetrisRows.flashRow
	         $256e = FlashCompletedTetrisRows.flashRowLoop
	         $2577 = FlashCompletedTetrisRows.incFlashCount
	         $2585 = FlashCompletedTetrisRows.flashed7times
	         $2590 = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $2594 = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $259e = FlashCompletedTetrisRows.origTileCopyLoop
	         $25ae = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $25b3 = ShiftEntireGameRamBufferDownARow
	         $25c0 = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $25cb = ShiftEntireGameRamBufferDownARow.nextRow
	         $25ce = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $25ed = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $25f9 = ClearPointersToCompletedTetrisRows
	         $25ff = ClearPointersToCompletedTetrisRows.loop
	         $2604 = CopyRamBufferRow17ToVram
	         $2613 = CopyRamBufferRow16ToVram
	         $2622 = CopyRamBufferRow15ToVram
	         $2631 = CopyRamBufferRow14ToVram
	         $2640 = CopyRamBufferRow13ToVram
	         $264f = CopyRamBufferRow12ToVram
	         $265e = CopyRamBufferRow11ToVram
	         $2675 = CopyRamBufferRow11ToVram.loop
	         $267b = CopyRamBufferRow11ToVram.is2Player
	         $2689 = CopyRamBufferRow10ToVram
	         $2698 = CopyRamBufferRow9ToVram
	         $26a7 = CopyRamBufferRow8ToVram
	         $26b6 = CopyRamBufferRow7ToVram
	         $26c5 = CopyRamBufferRow6ToVram
	         $26d4 = CopyRamBufferRow5ToVram
	         $26e3 = CopyRamBufferRow4ToVram
	         $26f2 = CopyRamBufferRow3ToVram
	         $2704 = CopyRamBufferRow2ToVram
	         $271d = CopyRamBufferRow1ToVram
	         $2732 = CopyRamBufferRow0ToVram
	         $274f = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $2765 = CopyRamBufferRow0ToVram.displayLines
	         $2784 = CopyRamBufferRow0ToVram.is1playerEnd
	         $278e = CopyRamBufferRow0ToVram.setGameState
	         $2791 = CopyRamBufferRow0ToVram.playNextPiece
	         $2795 = CopyRamBufferRow0ToVram.is2player
	         $27a1 = DisplayGameATypeScoreIfInGameAndForced
	         $27b1 = CheckIfATypeNextLevelReached
	         $27e4 = CheckIfATypeNextLevelReached.nextDigit
	         $27fa = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $2803 = ABisBCDofValInHL
	         $2808 = ABisBCDofValInHL.loop
	         $2810 = ABisBCDofValInHL.copyAtoB
	         $2812 = CopyRamBufferRowToVram
	         $2814 = CopyRamBufferRowToVram.loop
	         $2821 = InGameCheckButtonsPressed
	         $2840 = InGameCheckButtonsPressed.pressedAAnimation0
	         $2846 = InGameCheckButtonsPressed.pressedB
	         $2850 = InGameCheckButtonsPressed.pressedBAnimation3
	         $2854 = InGameCheckButtonsPressed.afterRotation
	         $286f = InGameCheckButtonsPressed.afterCollisionCheck
	         $288d = InGameCheckButtonsPressed.pressedRight
	         $28a0 = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $28af = InGameCheckButtonsPressed.notHeldLeft
	         $28b2 = InGameCheckButtonsPressed.notHeldRight
	         $28c4 = InGameCheckButtonsPressed.pressedLeft
	         $28d9 = RetZIfNoCollisionForPiece
	         $28de = RetZIfNoCollisionForPiece.nextSprite
	         $28fc = RetZIfNoCollisionForPiece.fromXis0
	         $2900 = RetZIfNoCollisionForPiece.notEmpty
	         $2907 = InGameAddPieceToVram
	         $2911 = InGameAddPieceToVram.nextSquareOfPiece
	         $2923 = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $292e = InGameAddPieceToVram.waitVRAMB
	         $2943 = InGameAddPieceToVram.nextState
	         $294d = ConvertFromObjectTileToBGTile
	         $2959 = ConvertFromObjectTileToBGTile.subForFxValues
	         $295b = ConvertFromObjectTileToBGTile.getOffset
	         $2960 = PieceTileConversionLookUpTable
	         $296c = ProcessCurrentScoreCategory
	         $298a = ProcessCurrentScoreCategory.afterDisplaying10s
	         $298f = ProcessCurrentScoreCategory.addCategScore
	         $29ab = ProcessCurrentScoreCategory.addToTotalScore
	         $29b9 = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $29cc = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $29cd = IncScoreCategoryProcessedAfterBTypeDone
	         $29e4 = ClearScoreCategoryVarsAndTotalScore
	         $29ea = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $29f3 = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $29f8 = ConvertHexToDec
	         $29f9 = ConvertHexToDec.convertLoop
	         $29ff = UpdateClock
	         $2a04 = UpdateClock.doHours
	         $2a0f = UpdateClock.loopa
	         $2a19 = UpdateClock.waitVRAMC
	         $2a2b = UpdateClock.doMinutes
	         $2a36 = UpdateClock.loopb
	         $2a4b = UpdateClock.setSramBank
	         $2a51 = UpdateClock.updateSIsDay_DuskDawn_Night
	         $2a6c = UpdateClock.isDay
	         $2a76 = UpdateClock.isDuskOrDawn
	         $2a82 = UpdateClock.isNight
	         $2a8e = ColonTile
	         $2a9e = UnusedStoreBCDByteInHLInDestDE
	         $2aaa = Copy2SpriteSpecsToShadowOam
	         $2aac = CopyASpriteSpecsToShadowOam
	         $2abc = Copy1stSpriteSpecToSprite4
	         $2acf = Copy2ndSpriteSpecToSprite8
	         $2ae2 = DisplayBlackColumnFromHLdown
	         $2ae9 = DisplayBlackColumnFromHLdown.loop
	         $2aef = CopyDEintoHLwhileFFhNotFound
	         $2aef = CopyDEintoHLwhileFFhNotFound.loop
	         $2af7 = StubInterruptHandler
	         $2af8 = SpriteSpecStruct_LPieceActive
	         $2b00 = SpriteSpecStruct_LPieceNext
	         $2b08 = SpriteSpecStruct_GameMusicAType
	         $2b14 = SpriteSpecStruct_ATypeFlashing0
	         $2b1a = SpriteSpecStruct_BTypeLevelAndHigh
	         $2b26 = SpriteSpecStruct_2PlayerHighsFlashing1
	         $2b32 = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $2b44 = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $2b56 = SpriteSpecStruct_MariosFacingAway
	         $2b62 = SpriteSpecStruct_LuigisFacingAway
	         $2b6e = SpriteSpecStruct_Dancers
	         $2baa = SpriteSpecStruct_ShuttleAndGas
	         $2bbc = SpriteSpecStruct_RocketAndGas
	         $2bce = FillScreen0FromHLdownWithEmptyTile
	         $2bd1 = FillScreenFromHLdownWithEmptyTile
	         $2bd4 = FillScreenFromHLdownWithEmptyTile.loop
	         $2bdd = CopyHLtoDE_BCbytes
	         $2bdd = CopyHLtoDE_BCbytes.loop
	         $2be6 = LoadAsciiAndMenuScreenGfx
	         $2c01 = CopyAsciiTileData
	         $2c0a = CopyAsciiTileData.loop
	         $2c15 = CopyAsciiAndTitleScreenTileData
	         $2c34 = UnusedCopyHLtoVram1000hBytes
	         $2c37 = CopyHLtoVramBCbytes
	         $2c3d = Stub_27ea
	         $2c3e = CopyLayoutToScreen0
	         $2c41 = CopyLayoutToHL
	         $2c43 = CopyLayoutBrowsToHL
	         $2c43 = CopyLayoutBrowsToHL.loopRow
	         $2c46 = CopyLayoutBrowsToHL.loopCol
	         $2c57 = CopyAttrToScreen0
	         $2c5f = CopyAttrToHL
	         $2c61 = CopyAttrBrowsToHL.loopRow
	         $2c61 = CopyAttrBrowsToHL
	         $2c65 = CopyAttrBrowsToHL.loopCol
	         $2c7c = CopyPalettesToCram
	         $2c7e = CopyPalettesToCram.loadPaletteLoop
	         $2c85 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $2c85 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $2c88 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $2c9b = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $2ca1 = TurnOffLCD
	         $2ca9 = TurnOffLCD.waitUntilInVBlank
	         $2cba = GameInnerScreenLayout_Pause
	         $2d0a = GameScreenLayout_ScoreTotals
	         $2dbf = GameInnerScreenLayout_GameOver
	         $2df7 = GameInnerScreen_TryAgain
	         $2e27 = PollInput
	         $2e64 = GetScreen0AddressOfPieceSquare
	         $2e77 = GetScreen0AddressOfPieceSquare.loop
	         $2e91 = UnusedMovePieceUpAndRight
	         $2e99 = UnusedMovePieceUpAndRight.deDiv16
	         $2eb7 = DisplayBCDNum6DigitsIfForced
	         $2ebb = DisplayBCDNum6Digits
	         $2ebd = DisplayBCDNum2CDigits
	         $2ec0 = DisplayBCDNum2CDigits.nextByte
	         $2ed1 = DisplayBCDNum2CDigits.displayTens
	         $2ee7 = DisplayBCDNum2CDigits.displayOnes
	         $2ef0 = DisplayBCDNum2CDigits.tensNot0
	         $2ef8 = DisplayBCDNum2CDigits.onesNot0
	         $2f00 = OamDmaFunction
	         $2f06 = OamDmaFunction.wait
	         $2f0a = CopyToShadowOamBasedOnSpriteSpec
	         $2f0f = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $2f1d = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $2f2f = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $2f34 = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $2f36 = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $2f3b = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $2f5e = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $2f79 = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $2f7d = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $2f81 = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $2f94 = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $2f9e = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $2fb3 = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $2fbd = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $2fcf = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $2fd1 = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	         $2fed = ConvertFromBgTileToObjectTile
	         $3002 = ConvertFromBgTileToObjectTile.pastGarbageBlock
	         $3009 = ConvertFromBgTileToObjectTile.pastGarbageBlock2
	         $3010 = ConvertFromBgTileToObjectTile.isHorIPieceEnd
	SECTION: $3013-$395d ($094b bytes) ["Sound Engine"]
	         $3013 = SquareSoundEffectTable_Init
	         $3023 = SquareSoundEffectTable_Update
	         $3033 = NoiseSoundEffect_Init
	         $303b = NoiseSoundEffect_Update
	         $3043 = SongsSoundChannelsData
	         $3065 = Stub
	         $3066 = UpdateSound
	         $307b = UpdateSound.endPath
	         $308d = UpdateSound.dontUnset
	         $30a2 = UpdateSound.done
	         $30b7 = UpdateSound.gameJustPaused
	         $30e3 = UpdateSound.setAud2RegsToPause1
	         $30e6 = UpdateSound.copyIntoAud2Regs
	         $30eb = UpdateSound.setAud2RegsToPause2
	         $30f0 = UpdateSound.gameJustUnpaused
	         $30f6 = UpdateSound.processPausedCounter
	         $310e = Aud2RegVals_Pause1
	         $3112 = Aud2RegVals_Pause2
	         $3116 = IsSoundEffect_MovingSelection
	         $311c = IsSoundEffect_TetrisRowsFell
	         $3122 = IsSoundEffect_4LinesCleared
	         $3128 = IsSoundEffect_ReachedNextLevel
	         $312e = Aud1RegValsInit_MovingSelection
	         $3133 = Aud1RegValsUpdate_MovingSelection
	         $3138 = Aud1RegValsInit_ConfirmOrLetterTyped
	         $313d = SquareEffectInit_MovingSelection
	         $3145 = SquareEffectUpdate_MovingSelection
	         $3159 = SquareEffectInit_ConfirmOrLetterTyped
	         $3161 = SquareEffectUpdate_Common
	         $3166 = ClearAud1RegsAndVars
	         $317a = Aud1RegVals_4LinesCleared_1
	         $317f = Aud1RegVals_4LinesCleared_2
	         $3184 = SquareEffectInit_4LinesCleared
	         $318a = SquareEffectUpdate_4LinesCleared
	         $31a1 = SquareEffectUpdate_4LinesCleared.finalWav
	         $31aa = SquareEffectUpdate_4LinesCleared.sound2
	         $31b0 = SquareEffectUpdate_4LinesCleared.sound1
	         $31b6 = Aud1RegValsInit_PieceMovedHoriz
	         $31bb = SquareEffectInit_PieceMovedHoriz
	         $31d3 = Aud1RegVals_ReachedNextLevel_0and4
	         $31d8 = Aud1RegVals_ReachedNextLevel_1
	         $31dd = Aud1RegVals_ReachedNextLevel_2
	         $31e2 = Aud1RegVals_ReachedNextLevel_3
	         $31e7 = SquareEffectInit_ReachedNextLevel
	         $31f3 = SquareEffectUpdate_ReachedNextLevel
	         $3213 = SquareEffectUpdate_ReachedNextLevel.sound1
	         $3218 = SquareEffectUpdate_ReachedNextLevel.sound2
	         $321d = SquareEffectUpdate_ReachedNextLevel.sound3
	         $3222 = SquareEffectUpdate_ReachedNextLevel.sound4
	         $3225 = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $3228 = Aud1RegValsInit_Non4LinesCleared
	         $322d = Aud1EnvData_Non4LinesCleared
	         $3238 = Aud1FreqLoData_Non4LinesCleared
	         $3242 = SquareEffectInit_Non4LinesCleared
	         $3256 = SquareEffectUpdate_Non4LinesCleared
	         $3274 = SetAud1EnvLowHighToEDB
	         $327f = Aud1RegValsInit_PieceRotated
	         $3284 = Aud1EnvData_PieceRotated
	         $328a = Aud1FreqLoData_PieceRotated
	         $328f = SquareEffectInit_PieceRotated
	         $32a7 = SquareEffectUpdate_PieceRotated
	         $32c7 = SquareEffectInit_TetrisRowsFell
	         $32d3 = Aud1RegValsInit_TetrisRowsFell
	         $32d8 = Aud4RegValsInit_PieceHitFloor
	         $32dc = Aud4RegValsInit_TetrisRowsFell
	         $32e0 = Aud4RegValsInit_RocketGas
	         $32e4 = Aud4RegValsInit_RocketFire
	         $32e8 = Aud4RegValsUpdate_RocketFire_Poly
	         $330c = Aud4RegValsUpdate_RocketFire_Env
	         $3330 = NoiseEffectInit_RocketGas
	         $3338 = NoiseEffectInit_RocketFire
	         $3340 = NoiseEffectUpdate_RocketFire
	         $3367 = NoiseEffectInit_TetrisRowsFell
	         $336f = NoiseEffectInit_PieceHitFloor
	         $3377 = NoiseEffectUpdate_Common
	         $337c = NoiseEffectUpdate_ClearNoise
	         $338e = Aud3RegValsInit_GameOver
	         $3393 = WavEffectInit_GameOver
	         $33aa = WavEffectUpdate_GameOver
	         $33bd = WavEffectUpdate_GameOver.setAud3Low
	         $33c5 = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $33cf = UpdateWavEffects
	         $33ea = Aud3RegValsInit_After4LinesCleared
	         $33ef = Aud3RegValsUpdate_After4LinesCleared_1
	         $33f4 = Aud3RegValsUpdate_After4LinesCleared_2
	         $33f9 = Aud3RegValsUpdate_After4LinesCleared_3
	         $33fe = WavEffectInit_After4LinesCleared
	         $3413 = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $3416 = WavEffectUpdate_sound1
	         $3427 = WavEffectUpdate_sound2
	         $3438 = WavEffectUpdate_sound3
	         $3449 = WavEffectUpdate_After4LinesCleared
	         $346b = WavEffectUpdate_After4LinesCleared.incLowVal
	         $346f = WavEffectUpdate_After4LinesCleared.decLowVal
	         $3471 = WavEffectUpdate_After4LinesCleared.setLowVal
	         $3475 = ClearWavVarsAndRegs_ResumeMusic
	         $349b = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $34a0 = InitWavEffect_pauseOtherChannels
	         $34c5 = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $34c9 = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $34e9 = CopyDefaultValsInHLIntoAud1Regs
	         $34f0 = CopyDefaultValsInHLIntoAud2Regs
	         $34f7 = CopyDefaultValsInHLIntoAud3Regs
	         $34fe = CopyDefaultValsInHLIntoAud4Regs
	         $3503 = CopyDefaultValsInHLIntoAudCRegs
	         $3503 = CopyDefaultValsInHLIntoAudCRegs.loop
	         $350b = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $350f = HLequAddressForSongData_tableHL_incE
	         $351e = IncCounterInDE_retZifHitsThreshold
	         $3529 = IncCounterInDE_retZifHitsThreshold.done
	         $352b = CopyFromHLintoWav3Ram
	         $352e = CopyFromHLintoWav3Ram.loop
	         $3538 = InitSound
	         $355a = ResetSoundHwRegs
	         $3570 = UpdateSquareEffects
	         $3583 = UpdateSquareEffects.noSquareEffectToPlay
	         $358f = UpdateSquareEffects.done
	         $3590 = UpdateNoiseEffects
	         $35a3 = UpdateNoiseEffects.noNoiseEffectToPlay
	         $35af = UpdateNoiseEffects.done
	         $35b0 = MuteSound
	         $35b4 = InitSong
	         $35cf = SetSongsAudTermVars
	         $35d7 = SetSongsAudTermVars.nextSong
	         $35e0 = SetSongsAudTermVars.setSongVars
	         $35f8 = SetSongsAudTermRegs
	         $3622 = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $362d = SetSongsAudTermRegs.afterDecidingWavOutput
	         $3637 = SetSongsAudTermRegs.setAudTermToB
	         $3638 = SetSongsAudTermRegs.setAudTerm
	         $363b = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $363f = SetSongsAudTermRegs.use1stOutputValue
	         $3644 = SetSongsAudTermRegs.notTimeToSwapOutput
	         $3651 = SongAudTermData
	         $3695 = StoreWordInWordInHLintoDE
	         $36a0 = StoreWordInHLIintoDE
	         $36a6 = SetSongsInitialSoundChannelVars
	         $36fd = SetSongsInitialSoundChannelVars.loop
	         $3710 = ProcessSoundByte9dh_SetParams.aud3
	         $3710 = ProcessSoundByte9dh_SetParams
	         $371c = ProcessSoundByte9dh_SetParams.start
	         $3746 = ProcessSoundByte9dh_SetParams.end
	         $374c = IncWordInHL
	         $3752 = IncWordInHL.store
	         $3758 = IncWordTwiceInHL
	         $3761 = GetABInWordStoredInHL
	         $3768 = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $3768 = UpdateMusic
	         $376b = UpdateMusic.processCurrSoundByteEnvelope
	         $3782 = UpdateMusic.passedWaveEnvelope
	         $3797 = UpdateMusic.toNextSndChannelFromStructIdx2
	         $379c = UpdateMusic.setNextAddrInCurrSndChannelData
	         $37a3 = UpdateMusic.afterSpecialSoundByteAddress
	         $37b7 = UpdateMusic.sndChannelAddrEquFFFFh
	         $37ce = UpdateMusic.stopCurrSong
	         $37d7 = UpdateMusic.start
	         $37e5 = UpdateMusic.nextSoundChannel
	         $37ef = UpdateMusic.afterSettingSoundDataAddress
	         $37f1 = UpdateMusic.processNextSoundByte
	         $381e = UpdateMusic.contSoundByte
	         $384a = UpdateMusic.soundByte01
	         $384f = UpdateMusic.getNoiseDataToWrite
	         $3857 = UpdateMusic.noiseLoop
	         $3866 = UpdateMusic.getNonNoiseDataToWrite
	         $3880 = UpdateMusic.contWave
	         $388b = UpdateMusic.startWritingToSq2
	         $388f = UpdateMusic.startWritingToSq1
	         $3894 = UpdateMusic.afterChoosingSndChannelBaseReg
	         $389d = UpdateMusic.after_hasWavRam
	         $38a0 = UpdateMusic.fromWav
	         $38a9 = UpdateMusic.afterDisabledEnvelopeCheck
	         $38c7 = UpdateMusic.skippingHwRegWrites
	         $38cc = UpdateMusic.toNextSndChannel
	         $38dd = UpdateMusic.done
	         $38ea = UpdateMusic.hasWavRam
	         $38f1 = GetEinDEplusBdiv2
	         $38fa = WriteToFrequencyRegsAdjustedWithEnvelope
	         $391c = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $391e = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $3934 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $3939 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $3945 = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $3952 = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $3954 = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $3955 = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $395e-$3fef ($0692 bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $06c5 bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7f27 ($384d bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Layout_ATypeInGame
	         $56db = Gfx_MenuScreens.end
	         $5843 = Layout_BTypeInGame
	         $59ab = Gfx_Ascii
	         $5ae3 = Gfx_Ascii.end
	         $5ae3 = Gfx_TitleScreen
	         $6293 = Layout_Copyright
	         $6293 = Gfx_TitleScreen.end
	         $63fb = Layout_TitleScreen
	         $6653 = Layout_GameMusicTypeScreen
	         $67bb = Layout_ATypeSelectionScreen
	         $6923 = Layout_BTypeSelectionScreen
	         $6a8b = GameScreenLayout_Dancers
	         $6b40 = Layout_RocketScene
	         $6b90 = Layout_MarioLuigiScreen
	         $6cf8 = Layout_2PlayerInGame
	         $6e60 = Layout_MarioScore
	         $6eb0 = Layout_BricksAndLuigiScore
	         $6f28 = Gfx_RocketScene
	         $7f28 = Gfx_RocketScene.end
	EMPTY: $7f28-$7fff ($00d8 bytes)
	TOTAL EMPTY: $00d8 bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$55bf ($03c0 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $5458 = Layout_RocketScene_Sunrise_Sunset
	         $55c0 = Layout_RocketScene_Sunrise_Sunset.end
	EMPTY: $55c0-$7fff ($2a40 bytes)
	TOTAL EMPTY: $2a45 bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4674 ($0475 bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $4458 = Layout_RocketScene_Night
	         $45c0 = GameScreenLayout_Dancers_Night
	         $4675 = GameScreenLayout_Dancers_Night.end
	SECTION: $4675-$4ca4 ($0630 bytes) ["Palettes and Attribute Maps"]
	         $4675 = Palettes_TitleScreen
	         $47f5 = Attributes_TitleScreen
	         $4ca5 = Attributes_TitleScreen.end
	EMPTY: $4ca5-$7fff ($335b bytes)
	TOTAL EMPTY: $33ab bytes

SRAM bank #0:
	SECTION: $a000-$a003 ($0004 bytes) ["SRAM"]
	         $a000 = sCurrMonth
	         $a001 = sCurrYear
	         $a003 = sIsDay_DuskDawn_Night
	         $a003 = sCurrYear.end
	         $a004 = sIsDay_DuskDawn_Night.end
	EMPTY: $a004-$bfff ($1ffc bytes)
	TOTAL EMPTY: $1ffc bytes

WRAM0 bank #0:
	SECTION: $c000-$dfff ($2000 bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wBTypeHighScores
	         $d654 = wATypeHighScores
	         $d762 = wd762
	         $df70 = wCurrSoundChannelBeingProcessed
	         $df71 = wOrigSoundEffectIdx
	         $df71 = wUnusedShadowAudLen
	         $df72 = wdf72
	         $df75 = wAudTermCounterUntilChangingOutput
	         $df76 = wAudTermCounterValueToHitToChangeOutput
	         $df77 = wAudTermSelectedOutputVal
	         $df78 = wAudTermSongsSpec
	         $df79 = wAudTermOutputValue1
	         $df7a = wAudTermOutputValue2
	         $df7b = wdf7b
	         $df7e = wGamePausedSoundTimer
	         $df7f = wGamePausedActivity
	         $df80 = wUnused_df80
	         $df81 = wSongTempoAddr
	         $df83 = wdf83
	         $df90 = wAudStructs
	         $df90 = wAud1Struct
	         $dfa0 = wAud2Struct
	         $dfb0 = wAud3Struct
	         $dfc0 = wAud4Struct
	         $dfd0 = wdfd0
	         $dfe0 = wSquareSoundToPlay
	         $dfe1 = wSquareEffectBeingPlayed
	         $dfe2 = wSquareEffectFrameCounter
	         $dfe3 = wSquareEffectFrameCounterThreshold
	         $dfe4 = wSquareEffectMiscCounter
	         $dfe5 = wdfe5
	         $dfe8 = wSongToStart
	         $dfe9 = wSongBeingPlayed
	         $dfea = wdfea
	         $dff0 = wWavSoundToPlay
	         $dff1 = wWavEffectBeingPlayed
	         $dff2 = wWavEffectFrameCounter
	         $dff3 = wWavEffectFrameCounterThreshold
	         $dff4 = wWavEffectMiscCounter
	         $dff5 = wWavEffectRandomVal
	         $dff5 = wWavEffectShouldIncOrDec
	         $dff6 = wWavEffectCurrLoVal
	         $dff7 = wdff7
	         $dff8 = wNoiseSoundToPlay
	         $dff9 = wNoiseEffectBeingPlayed
	         $dffa = wNoiseEffectFrameCounter
	         $dffb = wNoiseEffectFrameCounterThreshold
	         $dffc = wNoiseEffectMiscCounter
	         $dffd = wOptionLights
	         $dffe = wOptionColors
	         $dfff = wOptionDayNightCycle
	         $e000 = wOptionDayNightCycle.end
	TOTAL EMPTY: $0000 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 14651 bytes used / 1733 free
	ROMX: 24888 bytes used / 24264 free in 3 banks
	SRAM: 4 bytes used / 8188 free in 1 bank
	WRAM0: 8192 bytes used / 0 free
	HRAM: 127 bytes used / 0 free
