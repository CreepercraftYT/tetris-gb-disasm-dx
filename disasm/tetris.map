ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$32ab ($315c bytes) ["Begin"]
	         $0150 = Begin
	         $016c = UnusedGetScreenTileInHLWhileOamFree
	         $016f = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $0176 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $017f = AddScoreValueDEontoBaseScoreHL
	         $0197 = VBlankInterruptHandler
	         $01b2 = VBlankInterruptHandler.afterMasterTransfer
	         $0217 = VBlankInterruptHandler.end
	         $0223 = Begin2
	         $0230 = Begin2.clear2ndWram
	         $0237 = Reset
	         $024f = Reset.waitUntilVBlank
	         $0276 = Reset.initializeSram
	         $0285 = Reset.clearSram
	         $0291 = Reset.sramInitialized
	         $0297 = Reset.clearLastPage
	         $02a2 = Reset.clear1stWram
	         $02b1 = Reset.clearVram
	         $02bd = Reset.clearOam
	         $02c6 = Reset.clearHram
	         $02d1 = Reset.copyOamDmaFunc
	         $02fb = MainLoop
	         $0312 = MainLoop.nextTimer
	         $031e = MainLoop.toNextTimer
	         $032b = MainLoop.waitUntilVBlankIntDone
	         $0336 = ProcessGameState
	         $03a7 = GameState24_CopyrightDisplay
	         $03ca = GameState24_CopyrightDisplay.adjLoopA
	         $03d0 = GameState24_CopyrightDisplay.noPalAdjA
	         $03ed = GameState24_CopyrightDisplay.adjLoopB
	         $03f3 = GameState24_CopyrightDisplay.noPalAdjB
	         $0416 = GameState24_CopyrightDisplay.copyLoop
	         $042b = GameState25_CopyrightWaiting
	         $0442 = GameState35_CopyrightCanContinue
	         $0450 = GameState35_CopyrightCanContinue.setNewState
	         $0455 = GameState06_TitleScreenInit
	         $047a = GameState06_TitleScreenInit.clearScreenBuffer
	         $0495 = GameState06_TitleScreenInit.displayBlackRow
	         $04ad = GameState06_TitleScreenInit.sunriseOrSunset
	         $04b2 = GameState06_TitleScreenInit.night
	         $04b5 = GameState06_TitleScreenInit.copy
	         $04f4 = PlayDemo
	         $0534 = PlayDemo.setDemoPlayed
	         $054e = UnusedSetRecordingDemo
	         $0553 = GameState07_TitleScreenMain
	         $0562 = GameState07_TitleScreenMain.afterTimerCheck
	         $057e = GameState07_TitleScreenMain.checkButtonsPressed
	         $05b7 = !0
	         $05bb = GameState07_TitleScreenMain.scrollLoop
	         $05c2 = !1
	         $05d1 = GameState07_TitleScreenMain.playerChecks
	         $05e8 = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $05f2 = GameState07_TitleScreenMain.setGameStateTo2ah
	         $05f4 = GameState07_TitleScreenMain.setGameState
	         $0602 = GameState07_TitleScreenMain.is1Player
	         $060b = GameState07_TitleScreenMain.afterUpCheck
	         $060e = GameState07_TitleScreenMain.flipNumPlayersOption
	         $0610 = GameState07_TitleScreenMain.setNumPlayersOpt
	         $0628 = !2
	         $0635 = !3
	         $063c = GameState07_TitleScreenMain.setCursorX
	         $0640 = GameState07_TitleScreenMain.pressedRight
	         $0646 = GameState07_TitleScreenMain.pressedLeft
	         $064a = GameState07_TitleScreenMain.pressedDown
	         $0653 = GameState07_TitleScreenMain.pressedUp
	         $0656 = GameState07_TitleScreenMain.multiplayerInvalid
	         $0659 = GameState07_TitleScreenMain.optionMenu
	         $066e = !4
	         $0676 = !5
	         $067e = !6
	         $0680 = GameState07_TitleScreenMain.setCursorY
	         $0683 = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $0698 = GameState07_TitleScreenMain.updateClock
	         $06ae = GameState07_TitleScreenMain.loopa
	         $06d0 = GameState07_TitleScreenMain.loopb
	         $06e0 = GameState07_TitleScreenMain.pressedDownOptions
	         $06e9 = GameState07_TitleScreenMain.pressedUpOptions
	         $06f3 = GameState07_TitleScreenMain.pressedBOptions
	         $06f3 = GameState07_TitleScreenMain.scrollLoopBack
	         $06fa = !7
	         $0709 = GameState07_TitleScreenMain.doneScrolling
	         $071a = GameState07_TitleScreenMain.pressedAOptions
	         $073b = !8
	         $0741 = !9
	         $0747 = GameState07_TitleScreenMain.waitVRAMA
	         $0750 = GameState07_TitleScreenMain.setTime
	         $075d = GameState07_TitleScreenMain.hours
	         $079a = GameState07_TitleScreenMain.decreaseHours
	         $07a1 = GameState07_TitleScreenMain.updateDecH
	         $07a6 = GameState07_TitleScreenMain.separateTensDecH
	         $07b1 = GameState07_TitleScreenMain.waitVRAM1
	         $07bf = GameState07_TitleScreenMain.increaseHours
	         $07c6 = GameState07_TitleScreenMain.updateIncH
	         $07cb = GameState07_TitleScreenMain.separateTensIncH
	         $07d6 = GameState07_TitleScreenMain.waitVRAM2
	         $07e5 = GameState07_TitleScreenMain.minutes
	         $0828 = GameState07_TitleScreenMain.decreaseMinutes
	         $082f = GameState07_TitleScreenMain.updateDecM
	         $0834 = GameState07_TitleScreenMain.separateTensDecM
	         $083f = GameState07_TitleScreenMain.waitVRAM3
	         $0856 = GameState07_TitleScreenMain.increaseMinutes
	         $085d = GameState07_TitleScreenMain.updateIncM
	         $0862 = GameState07_TitleScreenMain.separateTensIncM
	         $086d = GameState07_TitleScreenMain.waitVRAM4
	         $0885 = GameState07_TitleScreenMain.exit
	         $0893 = DemoSendPingsAndEndAfterAllStepsDone
	         $08b4 = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $08c1 = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $08c9 = DemoPollInput
	         $08e1 = DemoPollInput.mainBit
	         $08fd = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $0900 = DemoPollInput.end
	         $0909 = UnusedClearDemoButtonsHeld
	         $090f = DemoRecordInput
	         $0939 = DemoRecordInput.incFrames
	         $093f = DemoRestorePlayerButtonsHeld
	         $094c = GameState2a_passive
	         $0953 = GameState2a_2PlayerGameMusicTypeInit
	         $095d = GameState2a_2PlayerGameMusicTypeInit.cont
	         $0983 = GameState2b_2PlayerGameMusicTypeMain
	         $099f = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $09ac = GameState2b_2PlayerGameMusicTypeMain.cont
	         $09d0 = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $09e9 = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $09f0 = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $09f8 = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $09fc = GameState16_passive
	         $0a03 = GameState16_MarioLuigiScreenInit
	         $0a1b = GameState16_MarioLuigiScreenInit.loop
	         $0a22 = GameState16_MarioLuigiScreenInit.cont
	         $0a59 = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $0a96 = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $0ab6 = CopyDEtoHL_Bbytes
	         $0ab6 = CopyDEtoHL_Bbytes.loop
	         $0abd = GameState17_MarioLuigiScreenMain
	         $0ad4 = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $0adb = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0ae6 = GameState17_MarioLuigiScreenMain.isMaster
	         $0af0 = GameState17_MarioLuigiScreenMain.notPressedStart
	         $0afb = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $0afe = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $0b1b = GameState17_MarioLuigiScreenMain.aGameFinished
	         $0b33 = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $0b3b = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $0b3d = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $0b45 = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $0b4e = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $0b67 = GameState17_MarioLuigiScreenMain.pressedRight
	         $0b6c = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0b72 = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $0b79 = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0b7f = GameState17_MarioLuigiScreenMain.pressedUp
	         $0b87 = Player1HighCoords
	         $0b93 = Player2HighCoords
	         $0b9f = Set2PlayerHighCoords
	         $0bb6 = GameState18_2PlayerInGameInit
	         $0bbe = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $0c0d = GameState18_2PlayerInGameInit.adjLoopA
	         $0c13 = GameState18_2PlayerInGameInit.noPalAdjA
	         $0c30 = GameState18_2PlayerInGameInit.adjLoopB
	         $0c36 = GameState18_2PlayerInGameInit.noPalAdjB
	         $0c8a = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $0caa = GameState18_2PlayerInGameInit.luigiFace
	         $0cba = GameState18_2PlayerInGameInit.marioFace
	         $0cca = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0cd8 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0ce9 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0cfc = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0cfe = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0d0b = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0d23 = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0d2e = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0d30 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0d4a = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0d53 = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0d5a = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0d6b = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0d7b = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0d88 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0d90 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0da1 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0dac = GameState19_commonEnd
	         $0dca = GameState19_commonEnd.afterPassiveCheck
	         $0ddc = GameState19_passive
	         $0de6 = GameState19_passive.toDecB
	         $0dec = GameState19_passive.waitUntilMasterPresent
	         $0dfa = GameState19_passive.waitUntilPingToMasterHandled
	         $0e0a = GameState19_passive.nextRow
	         $0e0c = GameState19_passive.nextCol
	         $0e15 = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0e24 = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0e32 = GameState19_passive.waitUntilTransferFinished
	         $0e42 = GameState19_passive.loadNextPiece
	         $0e4b = GameState19_passive.waitUntilTransferFinished2
	         $0e56 = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0e64 = GameState19_passive.waitUntilTransferFinished3
	         $0e72 = LoadBottomRowWithBlocks
	         $0e79 = LoadBottomRowWithBlocks.nextCol
	         $0e7e = SerialTransferWaitFunc
	         $0e81 = SerialTransferWaitFunc.loop
	         $0e87 = ShuffleHiddenPieces2Player
	         $0e90 = ShuffleHiddenPieces2Player.nextRandomVal
	         $0e93 = ShuffleHiddenPieces2Player.loop1chTo0
	         $0e94 = ShuffleHiddenPieces2Player.toDecB
	         $0ea1 = ShuffleHiddenPieces2Player.afterBEqu0
	         $0eaf = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0eb8 = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0ed7 = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0ee8 = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0ef0 = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0f02 = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0f07 = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0f10 = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0f17 = GameState1a_2PlayerInGameMain
	         $0f5c = GameState1a_2PlayerInGameMain.notYetFinished
	         $0f6c = GameState1a_2PlayerInGameMain.afterLevelDone
	         $0f7d = GameState1a_2PlayerInGameMain.end
	         $0f84 = CheckAlmostLosingStatus
	         $0f8e = CheckAlmostLosingStatus.nextRow
	         $0f91 = CheckAlmostLosingStatus.nextCol
	         $0f9e = CheckAlmostLosingStatus.afterLoop
	         $0fb0 = CheckAlmostLosingStatus.nearTop
	         $0fbf = MasterPausedSerialByteRead
	         $0fd9 = InGame2PlayerProcessSerialByte
	         $1005 = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $1007 = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $100e = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $1010 = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $1017 = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $1023 = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $1036 = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $1039 = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $1049 = InGame2PlayerProcessSerialByte.noLineMarkings
	         $104d = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $1065 = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $106b = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $1075 = CheckIfOtherPlayerCleared2PlusLines
	         $1081 = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $108b = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $1093 = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $109c = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $109e = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $10b6 = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $10bb = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $10d4 = GameState1b_2PlayerGameEnd
	         $10ec = GameState1b_2PlayerGameEnd.tie
	         $10f2 = GameState1b_2PlayerGameEnd.notLost
	         $10fc = GameState1b_2PlayerGameEnd.cont
	         $1110 = GameState1b_2PlayerGameEnd.setGameState
	         $111b = GameState1d_2PlayerWinnerInit
	         $1129 = GameState1d_2PlayerWinnerInit.cont
	         $1138 = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $114e = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $1167 = WinnerMainIsMaster
	         $1174 = WinnerMainIsMaster.notWonAll5
	         $117a = WinnerMainIsMaster.toNextState
	         $1182 = GameState20_2PlayerWinnerMain
	         $1196 = GameState20_2PlayerWinnerMain.end
	         $119f = GoPastWinnerGameStates
	         $11a6 = ProcessWinnerMainTimer
	         $11ce = ProcessWinnerMainTimer.afterTimerCheck
	         $11ec = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $11f8 = ProcessWinnerMainTimer.hideBabySprite
	         $11fc = ProcessWinnerMainTimer.end
	         $120c = GameState1e_2PlayerLoserInit
	         $121a = GameState1e_2PlayerLoserInit.cont
	         $1229 = GameState1e_2PlayerLoserInit.loadSadSprites
	         $123f = GameState1e_2PlayerLoserInit.copySadSprites
	         $1258 = LoserMainIsMaster
	         $1265 = LoserMainIsMaster.notLost5
	         $126b = LoserMainIsMaster.toNextState
	         $1273 = GameState21_2PlayerLoserMain
	         $1287 = GameState21_2PlayerLoserMain.end
	         $1290 = GoPastLoserGameStates
	         $1297 = ProcessLoserMainTimer
	         $12b8 = ProcessLoserMainTimer.afterTimerCheck
	         $12dc = ProcessLoserMainTimer.turnAdultToBigGas
	         $12ec = ProcessLoserMainTimer.hideAdultSprite
	         $12f0 = ProcessLoserMainTimer.end
	         $1300 = DisplayTextPushStart
	         $131c = DisplayTextPushStart.loop
	         $1322 = DisplayTextPushStart.done
	         $1325 = DisplayTextPushStart.sprites
	         $1349 = ClearPushStartText
	         $1352 = ClearPushStartText.loop
	         $1358 = LoadWinnerLoserScreen
	         $13a7 = LoadWinnerLoserScreen.afterBGdisplay
	         $13af = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $13c9 = LoadWinnerLoserScreen.drawWinnerText
	         $13ce = LoadWinnerLoserScreen.afterWinningText
	         $13d9 = LoadWinnerLoserScreen.drawFaces
	         $13fd = LoadWinnerLoserScreen.checkLosingGames
	         $1417 = LoadWinnerLoserScreen.drawLoserText
	         $141c = LoadWinnerLoserScreen.afterLosingText
	         $1427 = LoadWinnerLoserScreen.drawFaces2
	         $1440 = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $1450 = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $1458 = DrawCfaces
	         $1458 = DrawCfaces.nextFace
	         $1460 = DrawCfaces.nextRow
	         $1473 = ProcessDeuceAdvantageLogic
	         $1491 = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $149a = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $149e = ProcessDeuceAdvantageLogic.won4
	         $14a0 = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $14a3 = ProcessDeuceAdvantageLogic.clearAdvantages
	         $14a9 = ProcessDeuceAdvantageLogic.wasDeuce
	         $14b0 = ProcessDeuceAdvantageLogic.clearDeuce
	         $14b4 = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $14b8 = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $14bf = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $14c6 = CopyAndUnderlineTextDEtoHL_Bbytes
	         $14c8 = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $14d6 = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $14db = TextDeuce
	         $14e1 = TextMarioWins
	         $14ec = TextLuigiWins
	         $14f7 = TextAdvantage
	         $1500 = GameState1f_Post2PlayerResults
	         $1528 = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $152d = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $1546 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $1548 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $154e = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $1555 = GameState26_ShuttleSceneInit
	         $15a5 = DisplayRocketScene
	         $15de = GameState27_ShuttleSceneShowClouds
	         $15f4 = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $15fd = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $1614 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $161d = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $163c = GameState02_ShuttleSceneLiftoff
	         $166f = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $1673 = GameState03_ShuttleSceneShootFire
	         $1695 = GameState03_ShuttleSceneShootFire.checkTimer2
	         $16a5 = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $16ab = GameState2c_ShuttleSceneShowCongratulations
	         $16ed = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $16fd = GameState2d_CongratsWaitingBeforeBTypeScore
	         $16fd = GameState2c_ShuttleSceneShowCongratulations.end
	         $171c = GameState34_PreRocketSceneWait
	         $1725 = GameState2e_RocketSceneInit
	         $1757 = GameState2f_RocketSceneShowClouds
	         $176d = GameState30_PoweringUp
	         $1776 = GameState30_PoweringUp.liftingOff
	         $1784 = GameState31_RocketSceneLiftOff
	         $17b7 = GameState31_RocketSceneLiftOff.toggleVisibility
	         $17bb = GameState32_RocketSceneShootFire
	         $17d5 = GameState32_RocketSceneShootFire.checkTimer2
	         $17e5 = GameState32_RocketSceneShootFire.copySpecsToOam
	         $17eb = GameState33_RocketSceneEnd
	         $1809 = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $181b = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $182a = ShuttleMetalStructureLeft
	         $1831 = ShuttleMetalStructureRight
	         $1838 = RocketMetalStructureLeft
	         $183f = RocketMetalStructureRight
	         $1846 = CopyDEintoHLsColumn_Bbytes
	         $1846 = CopyDEintoHLsColumn_Bbytes.loop
	         $1853 = GameState08_GameMusicTypeInit
	         $185e = GameMusicTypeInitWithoutDisablingSerialRegs
	         $18a1 = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $18b0 = Stub_148c
	         $18b1 = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $18b6 = SetSpriteSpecCoordsForMusicType
	         $18cc = SetSpriteSpecCoordsForMusicType.coords
	         $18d4 = GameState0f_MusicTypeMain
	         $18ec = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $1904 = GameState0f_MusicTypeMain.setMusicType
	         $190b = GameState0f_MusicTypeMain.copyToShadowOam
	         $190f = GameState0f_MusicTypeMain.pressedUp
	         $1917 = GameState0f_MusicTypeMain.pressedRight
	         $1922 = GameState0f_MusicTypeMain.pressedLeft
	         $192d = GameState0f_MusicTypeMain.pressedB
	         $1936 = GameState0f_MusicTypeMain.not2player
	         $193b = PlaySongBasedOnMusicTypeChosen
	         $1945 = PlaySongBasedOnMusicTypeChosen.playSong
	         $1949 = GameState0e_GameTypeMain
	         $196f = GameState0e_GameTypeMain.pressedRight
	         $1977 = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $1982 = GameState0e_GameTypeMain.setSpecIdx
	         $1983 = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $1987 = GameState0e_GameTypeMain.pressedStart
	         $1996 = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $199b = GameState0e_GameTypeMain.pressedA
	         $199f = GameState10_ATypeSelectionInit
	         $19c5 = GameState10_ATypeSelectionInit.adjLoopA
	         $19cb = GameState10_ATypeSelectionInit.noPalAdjA
	         $19e8 = GameState10_ATypeSelectionInit.adjLoopB
	         $19ee = GameState10_ATypeSelectionInit.noPalAdjB
	         $1a39 = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $1a3b = GameState10_ATypeSelectionInit.setGameState
	         $1a3e = GameState11_ATypeSelectionMain
	         $1a70 = GameState11_ATypeSelectionMain.pressedRight
	         $1a75 = GameState11_ATypeSelectionMain.setNewLevel
	         $1a82 = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $1a86 = GameState11_ATypeSelectionMain.pressedLeft
	         $1a8c = GameState11_ATypeSelectionMain.pressedUp
	         $1a94 = ATypeLevelsCoords
	         $1aa8 = GameState12_BTypeSelectionInit
	         $1ace = GameState12_BTypeSelectionInit.adjLoopA
	         $1ad4 = GameState12_BTypeSelectionInit.noPalAdjA
	         $1af1 = GameState12_BTypeSelectionInit.adjLoopB
	         $1af7 = GameState12_BTypeSelectionInit.noPalAdjB
	         $1b4a = GameState12_BTypeSelectionInit.setEnterHiScore
	         $1b4f = GameState13_setGameStateMakeSpriteVisible
	         $1b54 = GameState13_BTypeSelectionMain
	         $1b88 = GameState13_BTypeSelectionMain.pressedRight
	         $1b8d = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $1b9a = GameState13_BTypeSelectionMain.sendToOam
	         $1b9e = GameState13_BTypeSelectionMain.pressedLeft
	         $1ba4 = GameState13_BTypeSelectionMain.pressedUp
	         $1bac = BTypeLevelsCoords
	         $1bc0 = GameState14_setGameStateMakeSpriteVisible
	         $1bc5 = GameState14_BTypeHighMain
	         $1bf7 = GameState14_BTypeHighMain.pressedRight
	         $1bfc = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1c09 = GameState14_BTypeHighMain.sendToOam
	         $1c0d = GameState14_BTypeHighMain.pressedLeft
	         $1c13 = GameState14_BTypeHighMain.pressedUp
	         $1c1b = BTypeHighsCoords
	         $1c27 = UnusedNop_174d
	         $1c28 = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1c2f = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1c40 = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $1c50 = CopyCSpriteSpecStructsFromDEtoHL
	         $1c50 = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $1c53 = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $1c64 = Clear_wOam
	         $1c6a = Clear_wOam.loop
	         $1c6f = DisplayATypeHighScoresForLevel
	         $1c7a = DisplayATypeHighScoresForLevel.decA
	         $1c81 = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1c89 = DisplayBTypeHighScoresForLevel
	         $1c94 = DisplayBTypeHighScoresForLevel.decA1
	         $1c9b = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1ca0 = DisplayBTypeHighScoresForLevel.decA2
	         $1ca7 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $1caf = CopyHighScoreValueToRamBuffer
	         $1cb1 = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1cc1 = CopyHighScoreValueToRamBuffer.hasTens
	         $1ccb = CopyHighScoreValueToRamBuffer.storeDigits
	         $1cd1 = CopyHLtoDEbackwards_3bytes
	         $1cd3 = CopyHLtoDEbackwards_Bbytes.loop
	         $1cd3 = CopyHLtoDEbackwards_Bbytes
	         $1cda = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1ce2 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1ce8 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1cf3 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $1cfc = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $1d0e = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1d16 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $1d1b = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $1d32 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $1d3c = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $1d40 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $1d5a = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $1d65 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $1d84 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $1d87 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1d90 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1da4 = DisplayHighScoresAndNamesForLevel
	         $1db0 = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1db1 = DisplayHighScoresAndNamesForLevel.next6chars
	         $1db3 = DisplayHighScoresAndNamesForLevel.copyName
	         $1dd1 = DisplayHighScoresAndNamesForLevel.end
	         $1dd6 = DisplayDottedLinesForHighScore
	         $1de0 = DisplayDottedLinesForHighScore.nextRow
	         $1de3 = DisplayDottedLinesForHighScore.nextCol
	         $1ded = GameState15_EnteringHighScore
	         $1df5 = GameState15_EnteringHighScore.decA
	         $1dfb = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1e1b = GameState15_EnteringHighScore.setTile
	         $1e1e = GameState15_EnteringHighScore.afterTimerCheck
	         $1e42 = GameState15_EnteringHighScore.done
	         $1e56 = GameState15_EnteringHighScore.setGameState
	         $1e59 = GameState15_EnteringHighScore.upHeld
	         $1e61 = GameState15_EnteringHighScore.upPressed
	         $1e6c = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1e72 = GameState15_EnteringHighScore.incChar
	         $1e73 = GameState15_EnteringHighScore.setChar
	         $1e7a = GameState15_EnteringHighScore.notUpLastChar
	         $1e82 = GameState15_EnteringHighScore.downHeld
	         $1e8a = GameState15_EnteringHighScore.downPressed
	         $1e95 = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1e9c = GameState15_EnteringHighScore.decChar
	         $1e9f = GameState15_EnteringHighScore.notDownLastChar
	         $1ea6 = GameState15_EnteringHighScore.aPressed
	         $1ec1 = GameState15_EnteringHighScore.setNextCharLoc
	         $1ec8 = GameState15_EnteringHighScore.bPressed
	         $1ed8 = StoreAinHLwhenLCDFree
	         $1ed9 = StoreBinHLwhenLCDFree
	         $1ed9 = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1ee1 = GameState0a_InGameInit
	         $1f1e = GameState0a_InGameInit.afterGameTypeCheck
	         $1f40 = GameState0a_InGameInit.adjLoopA
	         $1f46 = GameState0a_InGameInit.noPalAdjA
	         $1f63 = GameState0a_InGameInit.adjLoopB
	         $1f69 = GameState0a_InGameInit.noPalAdjB
	         $1fa0 = GameState0a_InGameInit.afterHardModeCheck
	         $1fbe = GameState0a_InGameInit.setNumLinesCompleted
	         $1fc7 = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $1fd5 = GameState0a_InGameInit.afterPieceHiddenCheck
	         $2005 = GameState0a_InGameInit.notDemo
	         $200f = GameState0a_InGameInit.end
	         $2017 = SetNumFramesUntilPiecesMoveDown
	         $2028 = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $2029 = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $2035 = SetNumFramesUntilPiecesMoveDown.framesData
	         $204a = PopulateDemoBTypeScreenWithBlocks
	         $2052 = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $2055 = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $206f = PopulateDemoBTypeScreenWithBlocks.layout
	         $2097 = PopulateGameScreenWithRandomBlocks
	         $2098 = PopulateGameScreenWithRandomBlocks.decB
	         $209e = PopulateGameScreenWithRandomBlocks.mainLoop
	         $20a1 = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $20a3 = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $20ae = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $20ba = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $20bc = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $20cf = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $20d0 = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $20dc = PopulateGameScreenWithRandomBlocks.from2player
	         $20f1 = PopulateGameScreenWithRandomBlocks.toNextRow
	         $20f7 = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $20fd = GameState00_InGameMain
	         $2126 = InGameCheckResetAndPause.startNotPressed
	         $2126 = InGameCheckResetAndPause
	         $2135 = InGameCheckResetAndPause.setPieceVisibility
	         $213c = InGameCheckResetAndPause.pieceNotHidden
	         $213f = InGameCheckResetAndPause.start
	         $2171 = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $217f = InGameCheckResetAndPause.setNextPieceVisibility
	         $2182 = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $218c = InGameCheckResetAndPause.gameUnPaused
	         $219c = InGameCheckResetAndPause.is2Player
	         $21ba = InGame2PlayerCheckUnpaused
	         $21d3 = InGame2PlayerCheckUnpaused.isPassive
	         $21dc = InGame2PlayerCheckUnpaused.gameUnpaused
	         $21f3 = InGame2PlayerCheckUnpaused.loop
	         $21fb = InGame2PlayerCheckUnpaused.popHL
	         $21fd = Display2PlayerPauseText
	         $2205 = Display2PlayerPauseText.loop
	         $220f = Display2PlayerPauseText.text
	         $2214 = GameState01_GameOverInit
	         $2238 = GameState04_LevelEndedMain
	         $2241 = GameState04_LevelEndedMain.aOrStartPressed
	         $2255 = GameState04_LevelEndedMain.setGameState
	         $2258 = GameState05_BTypeLevelFinished
	         $2294 = GameState05_BTypeLevelFinished.clearScore
	         $2298 = GameState05_BTypeLevelFinished.fromLevel0
	         $22b6 = DisplayBTypeScoreMultipliersBasedOnLevel
	         $22bd = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $22c5 = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $22d4 = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $22e3 = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $22e9 = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $22f2 = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $2300 = GameState22_DancersInit
	         $2331 = GameState22_DancersInit.setNextDancerAnimDetails
	         $2346 = GameState22_DancersInit.numDancersInB
	         $234f = GameState22_DancersInit.loopSetVisible
	         $2368 = Dancers_AnimationTimers
	         $2372 = GameState23_sendDancersToOam
	         $2378 = GameState23_DancersMain
	         $2388 = GameState23_DancersMain.nextDancer
	         $23a1 = GameState23_DancersMain.toNextDancer
	         $23bd = GameState23_DancersMain.setGameState
	         $23c0 = GameState23_DancersMain.isJumperStanding
	         $23c6 = GameState23_DancersMain.isJumperJumping
	         $23cc = After4ScoreCategoriesProcessed
	         $240e = ProcessScoreUpdatesAfterBTypeLevelDone
	         $2449 = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $244d = GameState0c_UnusedPreShuttleLiftOff
	         $2456 = GameState0d_GameOverScreenClearing
	         $246e = GameState0d_GameOverScreenClearing.is1player
	         $24a3 = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $24a5 = GameState0d_GameOverScreenClearing.setGameState
	         $24a8 = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $24b4 = CopyGameScreenInnerText
	         $24b4 = CopyGameScreenInnerText.nextRow
	         $24b7 = CopyGameScreenInnerText.nextCol
	         $24c8 = AddOnCompletedLinesScore
	         $24fa = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $2500 = AddOnCompletedLinesScore.loop
	         $250e = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $2514 = FillGameScreenBufferWithTileA
	         $251c = FillGameScreenBufferWithTileA.nextRow
	         $251f = FillGameScreenBufferWithTileA.nextCol
	         $2529 = FillBottom2RowsOfTileMapWithEmptyTile
	         $2533 = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $2535 = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $253e = PlayNextPieceLoadNextAndHiddenPiece
	         $256b = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $257a = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $2588 = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $258a = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $258d = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $258e = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $259b = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $25a9 = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $25ac = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $25c7 = InGameHandlePieceFalling.holdingDown
	         $25c7 = InGameHandlePieceFalling
	         $25d9 = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $25f2 = InGameHandlePieceFalling.start
	         $25fa = InGameHandlePieceFalling.afterPressedDown
	         $2607 = InGameHandlePieceFalling.sendActivePieceToOam
	         $260b = InGameHandlePieceFalling.currScoreEqu0
	         $2618 = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $2656 = InGameHandlePieceFalling.clearTimesHoldingDown
	         $2659 = InGameHandlePieceFalling.fromNotHoldingDown
	         $267a = InGameHandlePieceFalling.skipGameOver
	         $267c = InGameHandlePieceFalling.isAType
	         $267d = InGameHandlePieceFalling.keepAdding
	         $2684 = InGameHandlePieceFalling.addDropsToScore
	         $2694 = InGameCheckIfAnyTetrisRowsComplete
	         $26a9 = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $26ac = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $26c1 = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $26f1 = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $2700 = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $2725 = InGameCheckIfAnyTetrisRowsComplete.end
	         $272e = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $2731 = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $2736 = FlashCompletedTetrisRows
	         $274c = FlashCompletedTetrisRows.upperOuterLoop
	         $275c = FlashCompletedTetrisRows.flashRow
	         $275e = FlashCompletedTetrisRows.flashRowLoop
	         $2767 = FlashCompletedTetrisRows.incFlashCount
	         $2775 = FlashCompletedTetrisRows.flashed7times
	         $2780 = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $2784 = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $278e = FlashCompletedTetrisRows.origTileCopyLoop
	         $279e = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $27a3 = ShiftEntireGameRamBufferDownARow
	         $27b0 = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $27bb = ShiftEntireGameRamBufferDownARow.nextRow
	         $27be = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $27dd = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $27e9 = ClearPointersToCompletedTetrisRows
	         $27ef = ClearPointersToCompletedTetrisRows.loop
	         $27f4 = CopyRamBufferRow17ToVram
	         $2803 = CopyRamBufferRow16ToVram
	         $2812 = CopyRamBufferRow15ToVram
	         $2821 = CopyRamBufferRow14ToVram
	         $2830 = CopyRamBufferRow13ToVram
	         $283f = CopyRamBufferRow12ToVram
	         $284e = CopyRamBufferRow11ToVram
	         $2865 = CopyRamBufferRow11ToVram.loop
	         $286b = CopyRamBufferRow11ToVram.is2Player
	         $2879 = CopyRamBufferRow10ToVram
	         $2888 = CopyRamBufferRow9ToVram
	         $2897 = CopyRamBufferRow8ToVram
	         $28a6 = CopyRamBufferRow7ToVram
	         $28b5 = CopyRamBufferRow6ToVram
	         $28c4 = CopyRamBufferRow5ToVram
	         $28d3 = CopyRamBufferRow4ToVram
	         $28e2 = CopyRamBufferRow3ToVram
	         $28f4 = CopyRamBufferRow2ToVram
	         $290d = CopyRamBufferRow1ToVram
	         $2922 = CopyRamBufferRow0ToVram
	         $293f = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $2955 = CopyRamBufferRow0ToVram.displayLines
	         $2974 = CopyRamBufferRow0ToVram.is1playerEnd
	         $297e = CopyRamBufferRow0ToVram.setGameState
	         $2981 = CopyRamBufferRow0ToVram.playNextPiece
	         $2985 = CopyRamBufferRow0ToVram.is2player
	         $2991 = DisplayGameATypeScoreIfInGameAndForced
	         $29a1 = CheckIfATypeNextLevelReached
	         $29d4 = CheckIfATypeNextLevelReached.nextDigit
	         $29ea = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $29f3 = ABisBCDofValInHL
	         $29f8 = ABisBCDofValInHL.loop
	         $2a00 = ABisBCDofValInHL.copyAtoB
	         $2a02 = CopyRamBufferRowToVram
	         $2a04 = CopyRamBufferRowToVram.loop
	         $2a11 = InGameCheckButtonsPressed
	         $2a30 = InGameCheckButtonsPressed.pressedAAnimation0
	         $2a36 = InGameCheckButtonsPressed.pressedB
	         $2a40 = InGameCheckButtonsPressed.pressedBAnimation3
	         $2a44 = InGameCheckButtonsPressed.afterRotation
	         $2a5f = InGameCheckButtonsPressed.afterCollisionCheck
	         $2a7d = InGameCheckButtonsPressed.pressedRight
	         $2a90 = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $2a9f = InGameCheckButtonsPressed.notHeldLeft
	         $2aa2 = InGameCheckButtonsPressed.notHeldRight
	         $2ab4 = InGameCheckButtonsPressed.pressedLeft
	         $2ac9 = RetZIfNoCollisionForPiece
	         $2ace = RetZIfNoCollisionForPiece.nextSprite
	         $2ae9 = RetZIfNoCollisionForPiece.empty
	         $2af0 = RetZIfNoCollisionForPiece.fromXis0
	         $2af4 = RetZIfNoCollisionForPiece.notEmpty
	         $2afb = InGameAddPieceToVram
	         $2b05 = InGameAddPieceToVram.nextSquareOfPiece
	         $2b17 = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $2b22 = InGameAddPieceToVram.waitVRAMB
	         $2b37 = InGameAddPieceToVram.nextState
	         $2b41 = ConvertFromObjectTileToBGTile
	         $2b4d = ConvertFromObjectTileToBGTile.subForFxValues
	         $2b4f = ConvertFromObjectTileToBGTile.getOffset
	         $2b54 = InGameAddPieceToVram1
	         $2b63 = InGameAddPieceToVram1.nextSquareOfPiece
	         $2b75 = InGameAddPieceToVram1.waitUntilVramAndOamFree
	         $2b86 = InGameAddPieceToVram1.waitVRAMB
	         $2b99 = InGameAddPieceToVram1.nextState
	         $2ba7 = PieceTileConversionLookUpTable
	         $2bb3 = PieceColorLookUpTable
	         $2bba = PieceBGColorLookUpTable
	         $2bc0 = ProcessCurrentScoreCategory
	         $2bde = ProcessCurrentScoreCategory.afterDisplaying10s
	         $2be3 = ProcessCurrentScoreCategory.addCategScore
	         $2bff = ProcessCurrentScoreCategory.addToTotalScore
	         $2c0d = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $2c20 = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $2c21 = IncScoreCategoryProcessedAfterBTypeDone
	         $2c38 = ClearScoreCategoryVarsAndTotalScore
	         $2c3e = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $2c47 = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $2c4c = ConvertHexToDec
	         $2c4d = ConvertHexToDec.convertLoop
	         $2c53 = UpdateClock
	         $2c6a = UpdateClock.doHours
	         $2c7d = UpdateClock.loopa
	         $2c87 = UpdateClock.waitVRAMC
	         $2c99 = UpdateClock.doMinutes
	         $2cac = UpdateClock.loopb
	         $2cc5 = UpdateClock.setSramBank
	         $2ccb = UpdateClock.updateSIsDay_DuskDawn_Night
	         $2ce6 = UpdateClock.isDay
	         $2cf0 = UpdateClock.isDuskOrDawn
	         $2cfc = UpdateClock.isNight
	         $2d08 = ColonTile
	         $2d18 = IsDMG
	         $2d32 = UnusedStoreBCDByteInHLInDestDE
	         $2d3e = Copy2SpriteSpecsToShadowOam
	         $2d40 = CopyASpriteSpecsToShadowOam
	         $2d50 = Copy1stSpriteSpecToSprite4
	         $2d63 = Copy2ndSpriteSpecToSprite8
	         $2d76 = DisplayBlackColumnFromHLdown
	         $2d7d = DisplayBlackColumnFromHLdown.loop
	         $2d83 = CopyDEintoHLwhileFFhNotFound
	         $2d83 = CopyDEintoHLwhileFFhNotFound.loop
	         $2d8b = StubInterruptHandler
	         $2d8c = SpriteSpecStruct_LPieceActive
	         $2d94 = SpriteSpecStruct_LPieceNext
	         $2d9c = SpriteSpecStruct_GameMusicAType
	         $2da8 = SpriteSpecStruct_ATypeFlashing0
	         $2dae = SpriteSpecStruct_BTypeLevelAndHigh
	         $2dba = SpriteSpecStruct_2PlayerHighsFlashing1
	         $2dc6 = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $2dd8 = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $2dea = SpriteSpecStruct_MariosFacingAway
	         $2df6 = SpriteSpecStruct_LuigisFacingAway
	         $2e02 = SpriteSpecStruct_Dancers
	         $2e3e = SpriteSpecStruct_ShuttleAndGas
	         $2e50 = SpriteSpecStruct_RocketAndGas
	         $2e62 = FillScreen0FromHLdownWithEmptyTile
	         $2e65 = FillScreenFromHLdownWithEmptyTile
	         $2e68 = FillScreenFromHLdownWithEmptyTile.loop
	         $2e71 = CopyHLtoDE_BCbytes
	         $2e71 = CopyHLtoDE_BCbytes.loop
	         $2e7a = LoadAsciiAndMenuScreenGfx
	         $2e95 = CopyAsciiTileData
	         $2e9e = CopyAsciiTileData.loop
	         $2ea9 = CopyAsciiAndTitleScreenTileData
	         $2ec8 = UnusedCopyHLtoVram1000hBytes
	         $2ecb = CopyHLtoVramBCbytes
	         $2ed1 = Stub_27ea
	         $2ed2 = CopyLayoutToScreen0
	         $2ed5 = CopyLayoutToHL
	         $2ed7 = CopyLayoutBrowsToHL
	         $2ed7 = CopyLayoutBrowsToHL.loopRow
	         $2eda = CopyLayoutBrowsToHL.loopCol
	         $2eeb = CopyAttrToScreen0
	         $2ef3 = CopyAttrToHL
	         $2ef5 = CopyAttrBrowsToHL.loopRow
	         $2ef5 = CopyAttrBrowsToHL
	         $2ef9 = CopyAttrBrowsToHL.loopCol
	         $2f10 = CopyPalettesToCram
	         $2f12 = CopyPalettesToCram.loadPaletteLoop
	         $2f19 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $2f19 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $2f1c = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $2f2f = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $2f35 = TurnOffLCD
	         $2f3d = TurnOffLCD.waitUntilInVBlank
	         $2f4e = GameInnerScreenLayout_Pause
	         $2f9e = GameScreenLayout_ScoreTotals
	         $3053 = GameInnerScreenLayout_GameOver
	         $308b = GameInnerScreen_TryAgain
	         $30bb = PollInput
	         $30f8 = GetScreen0AddressOfPieceSquare
	         $310b = GetScreen0AddressOfPieceSquare.loop
	         $3125 = UnusedMovePieceUpAndRight
	         $312d = UnusedMovePieceUpAndRight.deDiv16
	         $314b = DisplayBCDNum6DigitsIfForced
	         $314f = DisplayBCDNum6Digits
	         $3151 = DisplayBCDNum2CDigits
	         $3154 = DisplayBCDNum2CDigits.nextByte
	         $3165 = DisplayBCDNum2CDigits.displayTens
	         $317b = DisplayBCDNum2CDigits.displayOnes
	         $3184 = DisplayBCDNum2CDigits.tensNot0
	         $318c = DisplayBCDNum2CDigits.onesNot0
	         $3194 = OamDmaFunction
	         $319a = OamDmaFunction.wait
	         $319e = CopyToShadowOamBasedOnSpriteSpec
	         $31a3 = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $31b1 = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $31c3 = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $31c8 = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $31ca = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $31cf = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $31f2 = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $320d = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $3211 = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $3215 = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $3228 = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $3232 = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $3247 = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $3251 = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $3263 = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $3265 = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	         $3281 = ConvertFromBgTileToObjectTile
	         $3293 = ConvertFromBgTileToObjectTile.isInGame
	         $329b = ConvertFromBgTileToObjectTile.pastGarbageBlock
	         $32a2 = ConvertFromBgTileToObjectTile.pastGarbageBlock2
	         $32a9 = ConvertFromBgTileToObjectTile.isHorIPieceEnd
	SECTION: $32ac-$3bf6 ($094b bytes) ["Sound Engine"]
	         $32ac = SquareSoundEffectTable_Init
	         $32bc = SquareSoundEffectTable_Update
	         $32cc = NoiseSoundEffect_Init
	         $32d4 = NoiseSoundEffect_Update
	         $32dc = SongsSoundChannelsData
	         $32fe = Stub
	         $32ff = UpdateSound
	         $3314 = UpdateSound.endPath
	         $3326 = UpdateSound.dontUnset
	         $333b = UpdateSound.done
	         $3350 = UpdateSound.gameJustPaused
	         $337c = UpdateSound.setAud2RegsToPause1
	         $337f = UpdateSound.copyIntoAud2Regs
	         $3384 = UpdateSound.setAud2RegsToPause2
	         $3389 = UpdateSound.gameJustUnpaused
	         $338f = UpdateSound.processPausedCounter
	         $33a7 = Aud2RegVals_Pause1
	         $33ab = Aud2RegVals_Pause2
	         $33af = IsSoundEffect_MovingSelection
	         $33b5 = IsSoundEffect_TetrisRowsFell
	         $33bb = IsSoundEffect_4LinesCleared
	         $33c1 = IsSoundEffect_ReachedNextLevel
	         $33c7 = Aud1RegValsInit_MovingSelection
	         $33cc = Aud1RegValsUpdate_MovingSelection
	         $33d1 = Aud1RegValsInit_ConfirmOrLetterTyped
	         $33d6 = SquareEffectInit_MovingSelection
	         $33de = SquareEffectUpdate_MovingSelection
	         $33f2 = SquareEffectInit_ConfirmOrLetterTyped
	         $33fa = SquareEffectUpdate_Common
	         $33ff = ClearAud1RegsAndVars
	         $3413 = Aud1RegVals_4LinesCleared_1
	         $3418 = Aud1RegVals_4LinesCleared_2
	         $341d = SquareEffectInit_4LinesCleared
	         $3423 = SquareEffectUpdate_4LinesCleared
	         $343a = SquareEffectUpdate_4LinesCleared.finalWav
	         $3443 = SquareEffectUpdate_4LinesCleared.sound2
	         $3449 = SquareEffectUpdate_4LinesCleared.sound1
	         $344f = Aud1RegValsInit_PieceMovedHoriz
	         $3454 = SquareEffectInit_PieceMovedHoriz
	         $346c = Aud1RegVals_ReachedNextLevel_0and4
	         $3471 = Aud1RegVals_ReachedNextLevel_1
	         $3476 = Aud1RegVals_ReachedNextLevel_2
	         $347b = Aud1RegVals_ReachedNextLevel_3
	         $3480 = SquareEffectInit_ReachedNextLevel
	         $348c = SquareEffectUpdate_ReachedNextLevel
	         $34ac = SquareEffectUpdate_ReachedNextLevel.sound1
	         $34b1 = SquareEffectUpdate_ReachedNextLevel.sound2
	         $34b6 = SquareEffectUpdate_ReachedNextLevel.sound3
	         $34bb = SquareEffectUpdate_ReachedNextLevel.sound4
	         $34be = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $34c1 = Aud1RegValsInit_Non4LinesCleared
	         $34c6 = Aud1EnvData_Non4LinesCleared
	         $34d1 = Aud1FreqLoData_Non4LinesCleared
	         $34db = SquareEffectInit_Non4LinesCleared
	         $34ef = SquareEffectUpdate_Non4LinesCleared
	         $350d = SetAud1EnvLowHighToEDB
	         $3518 = Aud1RegValsInit_PieceRotated
	         $351d = Aud1EnvData_PieceRotated
	         $3523 = Aud1FreqLoData_PieceRotated
	         $3528 = SquareEffectInit_PieceRotated
	         $3540 = SquareEffectUpdate_PieceRotated
	         $3560 = SquareEffectInit_TetrisRowsFell
	         $356c = Aud1RegValsInit_TetrisRowsFell
	         $3571 = Aud4RegValsInit_PieceHitFloor
	         $3575 = Aud4RegValsInit_TetrisRowsFell
	         $3579 = Aud4RegValsInit_RocketGas
	         $357d = Aud4RegValsInit_RocketFire
	         $3581 = Aud4RegValsUpdate_RocketFire_Poly
	         $35a5 = Aud4RegValsUpdate_RocketFire_Env
	         $35c9 = NoiseEffectInit_RocketGas
	         $35d1 = NoiseEffectInit_RocketFire
	         $35d9 = NoiseEffectUpdate_RocketFire
	         $3600 = NoiseEffectInit_TetrisRowsFell
	         $3608 = NoiseEffectInit_PieceHitFloor
	         $3610 = NoiseEffectUpdate_Common
	         $3615 = NoiseEffectUpdate_ClearNoise
	         $3627 = Aud3RegValsInit_GameOver
	         $362c = WavEffectInit_GameOver
	         $3643 = WavEffectUpdate_GameOver
	         $3656 = WavEffectUpdate_GameOver.setAud3Low
	         $365e = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $3668 = UpdateWavEffects
	         $3683 = Aud3RegValsInit_After4LinesCleared
	         $3688 = Aud3RegValsUpdate_After4LinesCleared_1
	         $368d = Aud3RegValsUpdate_After4LinesCleared_2
	         $3692 = Aud3RegValsUpdate_After4LinesCleared_3
	         $3697 = WavEffectInit_After4LinesCleared
	         $36ac = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $36af = WavEffectUpdate_sound1
	         $36c0 = WavEffectUpdate_sound2
	         $36d1 = WavEffectUpdate_sound3
	         $36e2 = WavEffectUpdate_After4LinesCleared
	         $3704 = WavEffectUpdate_After4LinesCleared.incLowVal
	         $3708 = WavEffectUpdate_After4LinesCleared.decLowVal
	         $370a = WavEffectUpdate_After4LinesCleared.setLowVal
	         $370e = ClearWavVarsAndRegs_ResumeMusic
	         $3734 = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $3739 = InitWavEffect_pauseOtherChannels
	         $375e = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $3762 = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $3782 = CopyDefaultValsInHLIntoAud1Regs
	         $3789 = CopyDefaultValsInHLIntoAud2Regs
	         $3790 = CopyDefaultValsInHLIntoAud3Regs
	         $3797 = CopyDefaultValsInHLIntoAud4Regs
	         $379c = CopyDefaultValsInHLIntoAudCRegs
	         $379c = CopyDefaultValsInHLIntoAudCRegs.loop
	         $37a4 = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $37a8 = HLequAddressForSongData_tableHL_incE
	         $37b7 = IncCounterInDE_retZifHitsThreshold
	         $37c2 = IncCounterInDE_retZifHitsThreshold.done
	         $37c4 = CopyFromHLintoWav3Ram
	         $37c7 = CopyFromHLintoWav3Ram.loop
	         $37d1 = InitSound
	         $37f3 = ResetSoundHwRegs
	         $3809 = UpdateSquareEffects
	         $381c = UpdateSquareEffects.noSquareEffectToPlay
	         $3828 = UpdateSquareEffects.done
	         $3829 = UpdateNoiseEffects
	         $383c = UpdateNoiseEffects.noNoiseEffectToPlay
	         $3848 = UpdateNoiseEffects.done
	         $3849 = MuteSound
	         $384d = InitSong
	         $3868 = SetSongsAudTermVars
	         $3870 = SetSongsAudTermVars.nextSong
	         $3879 = SetSongsAudTermVars.setSongVars
	         $3891 = SetSongsAudTermRegs
	         $38bb = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $38c6 = SetSongsAudTermRegs.afterDecidingWavOutput
	         $38d0 = SetSongsAudTermRegs.setAudTermToB
	         $38d1 = SetSongsAudTermRegs.setAudTerm
	         $38d4 = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $38d8 = SetSongsAudTermRegs.use1stOutputValue
	         $38dd = SetSongsAudTermRegs.notTimeToSwapOutput
	         $38ea = SongAudTermData
	         $392e = StoreWordInWordInHLintoDE
	         $3939 = StoreWordInHLIintoDE
	         $393f = SetSongsInitialSoundChannelVars
	         $3996 = SetSongsInitialSoundChannelVars.loop
	         $39a9 = ProcessSoundByte9dh_SetParams.aud3
	         $39a9 = ProcessSoundByte9dh_SetParams
	         $39b5 = ProcessSoundByte9dh_SetParams.start
	         $39df = ProcessSoundByte9dh_SetParams.end
	         $39e5 = IncWordInHL
	         $39eb = IncWordInHL.store
	         $39f1 = IncWordTwiceInHL
	         $39fa = GetABInWordStoredInHL
	         $3a01 = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $3a01 = UpdateMusic
	         $3a04 = UpdateMusic.processCurrSoundByteEnvelope
	         $3a1b = UpdateMusic.passedWaveEnvelope
	         $3a30 = UpdateMusic.toNextSndChannelFromStructIdx2
	         $3a35 = UpdateMusic.setNextAddrInCurrSndChannelData
	         $3a3c = UpdateMusic.afterSpecialSoundByteAddress
	         $3a50 = UpdateMusic.sndChannelAddrEquFFFFh
	         $3a67 = UpdateMusic.stopCurrSong
	         $3a70 = UpdateMusic.start
	         $3a7e = UpdateMusic.nextSoundChannel
	         $3a88 = UpdateMusic.afterSettingSoundDataAddress
	         $3a8a = UpdateMusic.processNextSoundByte
	         $3ab7 = UpdateMusic.contSoundByte
	         $3ae3 = UpdateMusic.soundByte01
	         $3ae8 = UpdateMusic.getNoiseDataToWrite
	         $3af0 = UpdateMusic.noiseLoop
	         $3aff = UpdateMusic.getNonNoiseDataToWrite
	         $3b19 = UpdateMusic.contWave
	         $3b24 = UpdateMusic.startWritingToSq2
	         $3b28 = UpdateMusic.startWritingToSq1
	         $3b2d = UpdateMusic.afterChoosingSndChannelBaseReg
	         $3b36 = UpdateMusic.after_hasWavRam
	         $3b39 = UpdateMusic.fromWav
	         $3b42 = UpdateMusic.afterDisabledEnvelopeCheck
	         $3b60 = UpdateMusic.skippingHwRegWrites
	         $3b65 = UpdateMusic.toNextSndChannel
	         $3b76 = UpdateMusic.done
	         $3b83 = UpdateMusic.hasWavRam
	         $3b8a = GetEinDEplusBdiv2
	         $3b93 = WriteToFrequencyRegsAdjustedWithEnvelope
	         $3bb5 = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $3bb7 = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $3bcd = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $3bd2 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $3bde = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $3beb = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $3bed = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $3bee = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $3bf7-$3fef ($03f9 bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $042c bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7f27 ($384d bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Layout_ATypeInGame
	         $56db = Gfx_MenuScreens.end
	         $5843 = Layout_BTypeInGame
	         $59ab = Gfx_Ascii
	         $5ae3 = Gfx_Ascii.end
	         $5ae3 = Gfx_TitleScreen
	         $6293 = Layout_Copyright
	         $6293 = Gfx_TitleScreen.end
	         $63fb = Layout_TitleScreen
	         $6653 = Layout_GameMusicTypeScreen
	         $67bb = Layout_ATypeSelectionScreen
	         $6923 = Layout_BTypeSelectionScreen
	         $6a8b = GameScreenLayout_Dancers
	         $6b40 = Layout_RocketScene
	         $6b90 = Layout_MarioLuigiScreen
	         $6cf8 = Layout_2PlayerInGame
	         $6e60 = Layout_MarioScore
	         $6eb0 = Layout_BricksAndLuigiScore
	         $6f28 = Gfx_RocketScene
	         $7f28 = Gfx_RocketScene.end
	EMPTY: $7f28-$7fff ($00d8 bytes)
	TOTAL EMPTY: $00d8 bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$55bf ($03c0 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $5458 = Layout_RocketScene_Sunrise_Sunset
	         $55c0 = Layout_RocketScene_Sunrise_Sunset.end
	EMPTY: $55c0-$7fff ($2a40 bytes)
	TOTAL EMPTY: $2a45 bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4674 ($0475 bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $4458 = Layout_RocketScene_Night
	         $45c0 = GameScreenLayout_Dancers_Night
	         $4675 = GameScreenLayout_Dancers_Night.end
	SECTION: $4675-$597c ($1308 bytes) ["Palettes and Attribute Maps"]
	         $4675 = Palettes_TitleScreen
	         $47f5 = Palettes_InGameGuideline
	         $4975 = Palettes_InGameSega
	         $4af5 = Attributes_TitleScreen
	         $4fa5 = Attributes_GameMusicTypeScreen
	         $5275 = Attributes_ATypeSelectionScreen
	         $5545 = Attributes_BTypeSelectionScreen
	         $5815 = Layout_DMG
	         $5815 = Attributes_BTypeSelectionScreen.end
	EMPTY: $597d-$7fff ($2683 bytes)
	TOTAL EMPTY: $26d3 bytes

SRAM bank #0:
	SECTION: $a000-$ab6a ($0b6b bytes) ["SRAM"]
	         $a000 = sCurrMonth
	         $a001 = sCurrYear
	         $a003 = sIsDay_DuskDawn_Night
	         $a003 = sCurrYear.end
	         $a004 = sIsRocketScene
	         $a004 = sIsDay_DuskDawn_Night.end
	         $a005 = sOptionLights
	         $a005 = sIsRocketScene.end
	         $a006 = sOptionColors
	         $a007 = sOptionDayNightCycle
	         $a008 = sOptionDayNightCycle.end
	         $a008 = sGameScreenBufferAttr
	         $a408 = sGameScreenBufferAttr.end
	         $a408 = sBTypeHighScores
	         $aa5c = sATypeHighScores
	         $ab6a = sATypeHighScores.end
	         $ab6a = sIsSRAMInitialized
	         $ab6b = sIsSRAMInitialized.end
	EMPTY: $ab6b-$bfff ($1495 bytes)
	TOTAL EMPTY: $1495 bytes

WRAM0 bank #0:
	SECTION: $c000-$d89a ($189b bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wd762
	         $d80e = wCurrSoundChannelBeingProcessed
	         $d80f = wOrigSoundEffectIdx
	         $d80f = wUnusedShadowAudLen
	         $d810 = wdf72
	         $d813 = wAudTermCounterUntilChangingOutput
	         $d814 = wAudTermCounterValueToHitToChangeOutput
	         $d815 = wAudTermSelectedOutputVal
	         $d816 = wAudTermSongsSpec
	         $d817 = wAudTermOutputValue1
	         $d818 = wAudTermOutputValue2
	         $d819 = wdf7b
	         $d81c = wGamePausedSoundTimer
	         $d81d = wGamePausedActivity
	         $d81e = wUnused_df80
	         $d81f = wSongTempoAddr
	         $d821 = wdf83
	         $d82e = wAudStructs
	         $d82e = wAud1Struct
	         $d83e = wAud2Struct
	         $d84e = wAud3Struct
	         $d85e = wAud4Struct
	         $d86e = wdfd0
	         $d87e = wSquareSoundToPlay
	         $d87f = wSquareEffectBeingPlayed
	         $d880 = wSquareEffectFrameCounter
	         $d881 = wSquareEffectFrameCounterThreshold
	         $d882 = wSquareEffectMiscCounter
	         $d883 = wdfe5
	         $d886 = wSongToStart
	         $d887 = wSongBeingPlayed
	         $d888 = wdfea
	         $d88e = wWavSoundToPlay
	         $d88f = wWavEffectBeingPlayed
	         $d890 = wWavEffectFrameCounter
	         $d891 = wWavEffectFrameCounterThreshold
	         $d892 = wWavEffectMiscCounter
	         $d893 = wWavEffectRandomVal
	         $d893 = wWavEffectShouldIncOrDec
	         $d894 = wWavEffectCurrLoVal
	         $d895 = wdff7
	         $d896 = wNoiseSoundToPlay
	         $d897 = wNoiseEffectBeingPlayed
	         $d898 = wNoiseEffectFrameCounter
	         $d899 = wNoiseEffectFrameCounterThreshold
	         $d89a = wNoiseEffectMiscCounter
	EMPTY: $d89b-$dfff ($0765 bytes)
	TOTAL EMPTY: $0765 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 15316 bytes used / 1068 free
	ROMX: 28176 bytes used / 20976 free in 3 banks
	SRAM: 2923 bytes used / 5269 free in 1 bank
	WRAM0: 6299 bytes used / 1893 free
	HRAM: 127 bytes used / 0 free
