ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$2f8c ($2e3d bytes) ["Begin"]
	         $0150 = Begin
	         $0153 = UnusedGetScreenTileInHLWhileOamFree
	         $0156 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $015d = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $0166 = AddScoreValueDEontoBaseScoreHL
	         $017e = VBlankInterruptHandler
	         $0199 = VBlankInterruptHandler.afterMasterTransfer
	         $01fe = VBlankInterruptHandler.end
	         $020a = Begin2
	         $0217 = Begin2.clear2ndWram
	         $021e = Reset
	         $0236 = Reset.waitUntilVBlank
	         $0263 = Reset.clearLastPage
	         $026e = Reset.clear1stWram
	         $027d = Reset.clearVram
	         $0289 = Reset.clearOam
	         $0292 = Reset.clearHram
	         $029d = Reset.copyOamDmaFunc
	         $02c7 = MainLoop
	         $02de = MainLoop.nextTimer
	         $02ea = MainLoop.toNextTimer
	         $02f7 = MainLoop.waitUntilVBlankIntDone
	         $0302 = ProcessGameState
	         $0373 = GameState24_CopyrightDisplay
	         $0392 = GameState24_CopyrightDisplay.copyLoop
	         $03a7 = GameState25_CopyrightWaiting
	         $03be = GameState35_CopyrightCanContinue
	         $03cc = GameState35_CopyrightCanContinue.setNewState
	         $03d1 = GameState06_TitleScreenInit
	         $03f6 = GameState06_TitleScreenInit.clearScreenBuffer
	         $0411 = GameState06_TitleScreenInit.displayBlackRow
	         $0429 = GameState06_TitleScreenInit.sunriseOrSunset
	         $042e = GameState06_TitleScreenInit.night
	         $0431 = GameState06_TitleScreenInit.copy
	         $0465 = PlayDemo
	         $04a5 = PlayDemo.setDemoPlayed
	         $04bf = UnusedSetRecordingDemo
	         $04c4 = GameState07_TitleScreenMain
	         $04d3 = GameState07_TitleScreenMain.afterTimerCheck
	         $04ef = GameState07_TitleScreenMain.checkButtonsPressed
	         $0528 = !0
	         $052c = GameState07_TitleScreenMain.scrollLoop
	         $0533 = !1
	         $0542 = GameState07_TitleScreenMain.playerChecks
	         $0559 = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $0563 = GameState07_TitleScreenMain.setGameStateTo2ah
	         $0565 = GameState07_TitleScreenMain.setGameState
	         $0573 = GameState07_TitleScreenMain.is1Player
	         $057c = GameState07_TitleScreenMain.afterUpCheck
	         $057f = GameState07_TitleScreenMain.flipNumPlayersOption
	         $0581 = GameState07_TitleScreenMain.setNumPlayersOpt
	         $0599 = !2
	         $05a6 = !3
	         $05ad = GameState07_TitleScreenMain.setCursorX
	         $05b1 = GameState07_TitleScreenMain.pressedRight
	         $05b7 = GameState07_TitleScreenMain.pressedLeft
	         $05bb = GameState07_TitleScreenMain.pressedDown
	         $05c4 = GameState07_TitleScreenMain.pressedUp
	         $05c7 = GameState07_TitleScreenMain.multiplayerInvalid
	         $05ca = GameState07_TitleScreenMain.optionMenu
	         $05df = !4
	         $05e7 = !5
	         $05ef = !6
	         $05f1 = GameState07_TitleScreenMain.setCursorY
	         $05f4 = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $0609 = GameState07_TitleScreenMain.updateClock
	         $0617 = GameState07_TitleScreenMain.loopa
	         $0631 = GameState07_TitleScreenMain.loopb
	         $0641 = GameState07_TitleScreenMain.pressedDownOptions
	         $064a = GameState07_TitleScreenMain.pressedUpOptions
	         $0654 = GameState07_TitleScreenMain.pressedBOptions
	         $0654 = GameState07_TitleScreenMain.scrollLoopBack
	         $065b = !7
	         $066a = GameState07_TitleScreenMain.doneScrolling
	         $067b = GameState07_TitleScreenMain.pressedAOptions
	         $069c = !8
	         $06a2 = !9
	         $06a8 = GameState07_TitleScreenMain.waitVRAMA
	         $06b1 = GameState07_TitleScreenMain.setTime
	         $06be = GameState07_TitleScreenMain.hours
	         $06f3 = GameState07_TitleScreenMain.decreaseHours
	         $06fa = GameState07_TitleScreenMain.updateDecH
	         $06ff = GameState07_TitleScreenMain.separateTensDecH
	         $070a = GameState07_TitleScreenMain.waitVRAM1
	         $0718 = GameState07_TitleScreenMain.increaseHours
	         $071f = GameState07_TitleScreenMain.updateIncH
	         $0724 = GameState07_TitleScreenMain.separateTensIncH
	         $072f = GameState07_TitleScreenMain.waitVRAM2
	         $073d = GameState07_TitleScreenMain.minutes
	         $0773 = GameState07_TitleScreenMain.decreaseMinutes
	         $077a = GameState07_TitleScreenMain.updateDecM
	         $077f = GameState07_TitleScreenMain.separateTensDecM
	         $078a = GameState07_TitleScreenMain.waitVRAM3
	         $07a1 = GameState07_TitleScreenMain.increaseMinutes
	         $07a8 = GameState07_TitleScreenMain.updateIncM
	         $07ad = GameState07_TitleScreenMain.separateTensIncM
	         $07b8 = GameState07_TitleScreenMain.waitVRAM4
	         $07d0 = GameState07_TitleScreenMain.exit
	         $07de = DemoSendPingsAndEndAfterAllStepsDone
	         $07ff = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $080c = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $0814 = DemoPollInput
	         $082c = DemoPollInput.mainBit
	         $0848 = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $084b = DemoPollInput.end
	         $0854 = UnusedClearDemoButtonsHeld
	         $085a = DemoRecordInput
	         $0884 = DemoRecordInput.incFrames
	         $088a = DemoRestorePlayerButtonsHeld
	         $0897 = GameState2a_passive
	         $089e = GameState2a_2PlayerGameMusicTypeInit
	         $08a8 = GameState2a_2PlayerGameMusicTypeInit.cont
	         $08ce = GameState2b_2PlayerGameMusicTypeMain
	         $08ea = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $08f7 = GameState2b_2PlayerGameMusicTypeMain.cont
	         $091b = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $0934 = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $093b = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $0943 = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $0947 = GameState16_passive
	         $094e = GameState16_MarioLuigiScreenInit
	         $0966 = GameState16_MarioLuigiScreenInit.loop
	         $096d = GameState16_MarioLuigiScreenInit.cont
	         $09a4 = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $09e1 = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $0a01 = CopyDEtoHL_Bbytes
	         $0a01 = CopyDEtoHL_Bbytes.loop
	         $0a08 = GameState17_MarioLuigiScreenMain
	         $0a1f = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $0a26 = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0a31 = GameState17_MarioLuigiScreenMain.isMaster
	         $0a3b = GameState17_MarioLuigiScreenMain.notPressedStart
	         $0a46 = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $0a49 = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $0a66 = GameState17_MarioLuigiScreenMain.aGameFinished
	         $0a7e = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $0a86 = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $0a88 = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $0a90 = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $0a99 = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $0ab2 = GameState17_MarioLuigiScreenMain.pressedRight
	         $0ab7 = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0abd = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $0ac4 = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0aca = GameState17_MarioLuigiScreenMain.pressedUp
	         $0ad2 = Player1HighCoords
	         $0ade = Player2HighCoords
	         $0aea = Set2PlayerHighCoords
	         $0b01 = GameState18_2PlayerInGameInit
	         $0b09 = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $0b85 = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $0ba5 = GameState18_2PlayerInGameInit.luigiFace
	         $0bb5 = GameState18_2PlayerInGameInit.marioFace
	         $0bc5 = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0bd3 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0be4 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0bf7 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0bf9 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0c06 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0c1e = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0c29 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0c2b = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0c45 = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0c4e = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0c55 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0c66 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0c76 = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0c83 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0c8b = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0c9c = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0ca7 = GameState19_commonEnd
	         $0cc5 = GameState19_commonEnd.afterPassiveCheck
	         $0cd7 = GameState19_passive
	         $0ce1 = GameState19_passive.toDecB
	         $0ce7 = GameState19_passive.waitUntilMasterPresent
	         $0cf5 = GameState19_passive.waitUntilPingToMasterHandled
	         $0d05 = GameState19_passive.nextRow
	         $0d07 = GameState19_passive.nextCol
	         $0d10 = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0d1f = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0d2d = GameState19_passive.waitUntilTransferFinished
	         $0d3d = GameState19_passive.loadNextPiece
	         $0d46 = GameState19_passive.waitUntilTransferFinished2
	         $0d51 = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0d5f = GameState19_passive.waitUntilTransferFinished3
	         $0d6d = LoadBottomRowWithBlocks
	         $0d74 = LoadBottomRowWithBlocks.nextCol
	         $0d79 = SerialTransferWaitFunc
	         $0d7c = SerialTransferWaitFunc.loop
	         $0d82 = ShuffleHiddenPieces2Player
	         $0d8b = ShuffleHiddenPieces2Player.nextRandomVal
	         $0d8e = ShuffleHiddenPieces2Player.loop1chTo0
	         $0d8f = ShuffleHiddenPieces2Player.toDecB
	         $0d9c = ShuffleHiddenPieces2Player.afterBEqu0
	         $0daa = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0db3 = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0dd2 = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0de3 = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0deb = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0dfd = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0e02 = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0e0b = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0e12 = GameState1a_2PlayerInGameMain
	         $0e54 = GameState1a_2PlayerInGameMain.notYetFinished
	         $0e64 = GameState1a_2PlayerInGameMain.afterLevelDone
	         $0e75 = GameState1a_2PlayerInGameMain.end
	         $0e7c = CheckAlmostLosingStatus
	         $0e86 = CheckAlmostLosingStatus.nextRow
	         $0e89 = CheckAlmostLosingStatus.nextCol
	         $0e96 = CheckAlmostLosingStatus.afterLoop
	         $0ea8 = CheckAlmostLosingStatus.nearTop
	         $0eb7 = MasterPausedSerialByteRead
	         $0ed1 = InGame2PlayerProcessSerialByte
	         $0efd = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $0eff = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $0f06 = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $0f08 = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $0f0f = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $0f1b = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $0f2e = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $0f31 = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $0f41 = InGame2PlayerProcessSerialByte.noLineMarkings
	         $0f45 = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $0f5d = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $0f63 = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $0f6d = CheckIfOtherPlayerCleared2PlusLines
	         $0f79 = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $0f83 = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $0f8b = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $0f94 = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $0f96 = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $0fae = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $0fb3 = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $0fcc = GameState1b_2PlayerGameEnd
	         $0fe4 = GameState1b_2PlayerGameEnd.tie
	         $0fea = GameState1b_2PlayerGameEnd.notLost
	         $0ff4 = GameState1b_2PlayerGameEnd.cont
	         $1008 = GameState1b_2PlayerGameEnd.setGameState
	         $1013 = GameState1d_2PlayerWinnerInit
	         $1021 = GameState1d_2PlayerWinnerInit.cont
	         $1030 = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $1046 = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $105f = WinnerMainIsMaster
	         $106c = WinnerMainIsMaster.notWonAll5
	         $1072 = WinnerMainIsMaster.toNextState
	         $107a = GameState20_2PlayerWinnerMain
	         $108e = GameState20_2PlayerWinnerMain.end
	         $1097 = GoPastWinnerGameStates
	         $109e = ProcessWinnerMainTimer
	         $10c6 = ProcessWinnerMainTimer.afterTimerCheck
	         $10e4 = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $10f0 = ProcessWinnerMainTimer.hideBabySprite
	         $10f4 = ProcessWinnerMainTimer.end
	         $1104 = GameState1e_2PlayerLoserInit
	         $1112 = GameState1e_2PlayerLoserInit.cont
	         $1121 = GameState1e_2PlayerLoserInit.loadSadSprites
	         $1137 = GameState1e_2PlayerLoserInit.copySadSprites
	         $1150 = LoserMainIsMaster
	         $115d = LoserMainIsMaster.notLost5
	         $1163 = LoserMainIsMaster.toNextState
	         $116b = GameState21_2PlayerLoserMain
	         $117f = GameState21_2PlayerLoserMain.end
	         $1188 = GoPastLoserGameStates
	         $118f = ProcessLoserMainTimer
	         $11b0 = ProcessLoserMainTimer.afterTimerCheck
	         $11d4 = ProcessLoserMainTimer.turnAdultToBigGas
	         $11e4 = ProcessLoserMainTimer.hideAdultSprite
	         $11e8 = ProcessLoserMainTimer.end
	         $11f8 = DisplayTextPushStart
	         $1214 = DisplayTextPushStart.loop
	         $121a = DisplayTextPushStart.done
	         $121d = DisplayTextPushStart.sprites
	         $1241 = ClearPushStartText
	         $124a = ClearPushStartText.loop
	         $1250 = LoadWinnerLoserScreen
	         $129f = LoadWinnerLoserScreen.afterBGdisplay
	         $12a7 = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $12c1 = LoadWinnerLoserScreen.drawWinnerText
	         $12c6 = LoadWinnerLoserScreen.afterWinningText
	         $12d1 = LoadWinnerLoserScreen.drawFaces
	         $12f5 = LoadWinnerLoserScreen.checkLosingGames
	         $130f = LoadWinnerLoserScreen.drawLoserText
	         $1314 = LoadWinnerLoserScreen.afterLosingText
	         $131f = LoadWinnerLoserScreen.drawFaces2
	         $1338 = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $1348 = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $1350 = DrawCfaces
	         $1350 = DrawCfaces.nextFace
	         $1358 = DrawCfaces.nextRow
	         $136b = ProcessDeuceAdvantageLogic
	         $1389 = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $1392 = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $1396 = ProcessDeuceAdvantageLogic.won4
	         $1398 = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $139b = ProcessDeuceAdvantageLogic.clearAdvantages
	         $13a1 = ProcessDeuceAdvantageLogic.wasDeuce
	         $13a8 = ProcessDeuceAdvantageLogic.clearDeuce
	         $13ac = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $13b0 = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $13b7 = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $13be = CopyAndUnderlineTextDEtoHL_Bbytes
	         $13c0 = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $13ce = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $13d3 = TextDeuce
	         $13d9 = TextMarioWins
	         $13e4 = TextLuigiWins
	         $13ef = TextAdvantage
	         $13f8 = GameState1f_Post2PlayerResults
	         $1420 = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $1425 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $143e = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $1440 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $1446 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $144d = GameState26_ShuttleSceneInit
	         $1498 = DisplayRocketScene
	         $14d1 = GameState27_ShuttleSceneShowClouds
	         $14e7 = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $14f0 = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $1507 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $1510 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $152f = GameState02_ShuttleSceneLiftoff
	         $1562 = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $1566 = GameState03_ShuttleSceneShootFire
	         $1588 = GameState03_ShuttleSceneShootFire.checkTimer2
	         $1598 = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $159e = GameState2c_ShuttleSceneShowCongratulations
	         $15e0 = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $15f0 = GameState2d_CongratsWaitingBeforeBTypeScore
	         $15f0 = GameState2c_ShuttleSceneShowCongratulations.end
	         $160b = GameState34_PreRocketSceneWait
	         $1614 = GameState2e_RocketSceneInit
	         $1641 = GameState2f_RocketSceneShowClouds
	         $1657 = GameState30_PoweringUp
	         $1660 = GameState30_PoweringUp.liftingOff
	         $166e = GameState31_RocketSceneLiftOff
	         $16a1 = GameState31_RocketSceneLiftOff.toggleVisibility
	         $16a5 = GameState32_RocketSceneShootFire
	         $16bf = GameState32_RocketSceneShootFire.checkTimer2
	         $16cf = GameState32_RocketSceneShootFire.copySpecsToOam
	         $16d5 = GameState33_RocketSceneEnd
	         $16ef = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $1701 = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $1710 = ShuttleMetalStructureLeft
	         $1717 = ShuttleMetalStructureRight
	         $171e = RocketMetalStructureLeft
	         $1725 = RocketMetalStructureRight
	         $172c = CopyDEintoHLsColumn_Bbytes
	         $172c = CopyDEintoHLsColumn_Bbytes.loop
	         $1739 = GameState08_GameMusicTypeInit
	         $1744 = GameMusicTypeInitWithoutDisablingSerialRegs
	         $1777 = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $1786 = Stub_148c
	         $1787 = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $178c = SetSpriteSpecCoordsForMusicType
	         $17a2 = SetSpriteSpecCoordsForMusicType.coords
	         $17aa = GameState0f_MusicTypeMain
	         $17c2 = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $17da = GameState0f_MusicTypeMain.setMusicType
	         $17e1 = GameState0f_MusicTypeMain.copyToShadowOam
	         $17e5 = GameState0f_MusicTypeMain.pressedUp
	         $17ed = GameState0f_MusicTypeMain.pressedRight
	         $17f8 = GameState0f_MusicTypeMain.pressedLeft
	         $1803 = GameState0f_MusicTypeMain.pressedB
	         $180c = GameState0f_MusicTypeMain.not2player
	         $1811 = PlaySongBasedOnMusicTypeChosen
	         $181b = PlaySongBasedOnMusicTypeChosen.playSong
	         $181f = GameState0e_GameTypeMain
	         $1845 = GameState0e_GameTypeMain.pressedRight
	         $184d = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $1858 = GameState0e_GameTypeMain.setSpecIdx
	         $1859 = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $185d = GameState0e_GameTypeMain.pressedStart
	         $186c = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $1871 = GameState0e_GameTypeMain.pressedA
	         $1875 = GameState10_ATypeSelectionInit
	         $18b9 = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $18bb = GameState10_ATypeSelectionInit.setGameState
	         $18be = GameState11_ATypeSelectionMain
	         $18f0 = GameState11_ATypeSelectionMain.pressedRight
	         $18f5 = GameState11_ATypeSelectionMain.setNewLevel
	         $1902 = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $1906 = GameState11_ATypeSelectionMain.pressedLeft
	         $190c = GameState11_ATypeSelectionMain.pressedUp
	         $1914 = ATypeLevelsCoords
	         $1928 = GameState12_BTypeSelectionInit
	         $1974 = GameState12_BTypeSelectionInit.setEnterHiScore
	         $1979 = GameState13_setGameStateMakeSpriteVisible
	         $197e = GameState13_BTypeSelectionMain
	         $19b2 = GameState13_BTypeSelectionMain.pressedRight
	         $19b7 = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $19c4 = GameState13_BTypeSelectionMain.sendToOam
	         $19c8 = GameState13_BTypeSelectionMain.pressedLeft
	         $19ce = GameState13_BTypeSelectionMain.pressedUp
	         $19d6 = BTypeLevelsCoords
	         $19ea = GameState14_setGameStateMakeSpriteVisible
	         $19ef = GameState14_BTypeHighMain
	         $1a21 = GameState14_BTypeHighMain.pressedRight
	         $1a26 = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1a33 = GameState14_BTypeHighMain.sendToOam
	         $1a37 = GameState14_BTypeHighMain.pressedLeft
	         $1a3d = GameState14_BTypeHighMain.pressedUp
	         $1a45 = BTypeHighsCoords
	         $1a51 = UnusedNop_174d
	         $1a52 = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1a59 = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1a6a = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $1a7a = CopyCSpriteSpecStructsFromDEtoHL
	         $1a7a = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $1a7d = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $1a8e = Clear_wOam
	         $1a94 = Clear_wOam.loop
	         $1a99 = DisplayATypeHighScoresForLevel
	         $1aa4 = DisplayATypeHighScoresForLevel.decA
	         $1aab = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1ab3 = DisplayBTypeHighScoresForLevel
	         $1abe = DisplayBTypeHighScoresForLevel.decA1
	         $1ac5 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1aca = DisplayBTypeHighScoresForLevel.decA2
	         $1ad1 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $1ad9 = CopyHighScoreValueToRamBuffer
	         $1adb = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1aeb = CopyHighScoreValueToRamBuffer.hasTens
	         $1af5 = CopyHighScoreValueToRamBuffer.storeDigits
	         $1afb = CopyHLtoDEbackwards_3bytes
	         $1afd = CopyHLtoDEbackwards_Bbytes.loop
	         $1afd = CopyHLtoDEbackwards_Bbytes
	         $1b04 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1b0c = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1b12 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1b1d = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $1b26 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $1b38 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1b40 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $1b45 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $1b5c = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $1b66 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $1b6a = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $1b84 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $1b8f = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $1bae = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $1bb1 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1bba = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1bce = DisplayHighScoresAndNamesForLevel
	         $1bda = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1bdb = DisplayHighScoresAndNamesForLevel.next6chars
	         $1bdd = DisplayHighScoresAndNamesForLevel.copyName
	         $1bfb = DisplayHighScoresAndNamesForLevel.end
	         $1c00 = DisplayDottedLinesForHighScore
	         $1c0a = DisplayDottedLinesForHighScore.nextRow
	         $1c0d = DisplayDottedLinesForHighScore.nextCol
	         $1c17 = GameState15_EnteringHighScore
	         $1c1f = GameState15_EnteringHighScore.decA
	         $1c25 = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1c45 = GameState15_EnteringHighScore.setTile
	         $1c48 = GameState15_EnteringHighScore.afterTimerCheck
	         $1c6c = GameState15_EnteringHighScore.done
	         $1c80 = GameState15_EnteringHighScore.setGameState
	         $1c83 = GameState15_EnteringHighScore.upHeld
	         $1c8b = GameState15_EnteringHighScore.upPressed
	         $1c96 = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1c9c = GameState15_EnteringHighScore.incChar
	         $1c9d = GameState15_EnteringHighScore.setChar
	         $1ca4 = GameState15_EnteringHighScore.notUpLastChar
	         $1cac = GameState15_EnteringHighScore.downHeld
	         $1cb4 = GameState15_EnteringHighScore.downPressed
	         $1cbf = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1cc6 = GameState15_EnteringHighScore.decChar
	         $1cc9 = GameState15_EnteringHighScore.notDownLastChar
	         $1cd0 = GameState15_EnteringHighScore.aPressed
	         $1ceb = GameState15_EnteringHighScore.setNextCharLoc
	         $1cf2 = GameState15_EnteringHighScore.bPressed
	         $1d02 = StoreAinHLwhenLCDFree
	         $1d03 = StoreBinHLwhenLCDFree
	         $1d03 = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1d0b = GameState0a_InGameInit
	         $1d48 = GameState0a_InGameInit.afterGameTypeCheck
	         $1d7a = GameState0a_InGameInit.afterHardModeCheck
	         $1d98 = GameState0a_InGameInit.setNumLinesCompleted
	         $1da1 = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $1daf = GameState0a_InGameInit.afterPieceHiddenCheck
	         $1ddf = GameState0a_InGameInit.notDemo
	         $1de9 = GameState0a_InGameInit.end
	         $1df1 = SetNumFramesUntilPiecesMoveDown
	         $1e02 = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $1e03 = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $1e0f = SetNumFramesUntilPiecesMoveDown.framesData
	         $1e24 = PopulateDemoBTypeScreenWithBlocks
	         $1e2c = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $1e2f = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $1e49 = PopulateDemoBTypeScreenWithBlocks.layout
	         $1e71 = PopulateGameScreenWithRandomBlocks
	         $1e72 = PopulateGameScreenWithRandomBlocks.decB
	         $1e78 = PopulateGameScreenWithRandomBlocks.mainLoop
	         $1e7b = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $1e7d = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $1e88 = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $1e94 = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $1e96 = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $1ea9 = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $1eaa = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $1eb6 = PopulateGameScreenWithRandomBlocks.from2player
	         $1ecb = PopulateGameScreenWithRandomBlocks.toNextRow
	         $1ed1 = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $1ed7 = GameState00_InGameMain
	         $1efd = InGameCheckResetAndPause.startNotPressed
	         $1efd = InGameCheckResetAndPause
	         $1f0c = InGameCheckResetAndPause.setPieceVisibility
	         $1f13 = InGameCheckResetAndPause.pieceNotHidden
	         $1f16 = InGameCheckResetAndPause.start
	         $1f48 = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $1f56 = InGameCheckResetAndPause.setNextPieceVisibility
	         $1f59 = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $1f63 = InGameCheckResetAndPause.gameUnPaused
	         $1f73 = InGameCheckResetAndPause.is2Player
	         $1f91 = InGame2PlayerCheckUnpaused
	         $1faa = InGame2PlayerCheckUnpaused.isPassive
	         $1fb3 = InGame2PlayerCheckUnpaused.gameUnpaused
	         $1fca = InGame2PlayerCheckUnpaused.loop
	         $1fd2 = InGame2PlayerCheckUnpaused.popHL
	         $1fd4 = Display2PlayerPauseText
	         $1fdc = Display2PlayerPauseText.loop
	         $1fe6 = Display2PlayerPauseText.text
	         $1feb = GameState01_GameOverInit
	         $200f = GameState04_LevelEndedMain
	         $2018 = GameState04_LevelEndedMain.aOrStartPressed
	         $202c = GameState04_LevelEndedMain.setGameState
	         $202f = GameState05_BTypeLevelFinished
	         $206b = GameState05_BTypeLevelFinished.clearScore
	         $206f = GameState05_BTypeLevelFinished.fromLevel0
	         $208d = DisplayBTypeScoreMultipliersBasedOnLevel
	         $2094 = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $209c = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $20ab = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $20ba = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $20c0 = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $20c9 = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $20d7 = GameState22_DancersInit
	         $2108 = GameState22_DancersInit.setNextDancerAnimDetails
	         $211d = GameState22_DancersInit.numDancersInB
	         $2126 = GameState22_DancersInit.loopSetVisible
	         $213f = Dancers_AnimationTimers
	         $2149 = GameState23_sendDancersToOam
	         $214f = GameState23_DancersMain
	         $215f = GameState23_DancersMain.nextDancer
	         $2178 = GameState23_DancersMain.toNextDancer
	         $2194 = GameState23_DancersMain.setGameState
	         $2197 = GameState23_DancersMain.isJumperStanding
	         $219d = GameState23_DancersMain.isJumperJumping
	         $21a3 = After4ScoreCategoriesProcessed
	         $21e5 = ProcessScoreUpdatesAfterBTypeLevelDone
	         $2220 = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $2224 = GameState0c_UnusedPreShuttleLiftOff
	         $222d = GameState0d_GameOverScreenClearing
	         $2245 = GameState0d_GameOverScreenClearing.is1player
	         $227a = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $227c = GameState0d_GameOverScreenClearing.setGameState
	         $227f = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $228b = CopyGameScreenInnerText
	         $228b = CopyGameScreenInnerText.nextRow
	         $228e = CopyGameScreenInnerText.nextCol
	         $229f = AddOnCompletedLinesScore
	         $22d1 = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $22d7 = AddOnCompletedLinesScore.loop
	         $22e5 = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $22eb = FillGameScreenBufferWithTileA
	         $22f3 = FillGameScreenBufferWithTileA.nextRow
	         $22f6 = FillGameScreenBufferWithTileA.nextCol
	         $2300 = FillBottom2RowsOfTileMapWithEmptyTile
	         $230a = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $230c = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $2315 = PlayNextPieceLoadNextAndHiddenPiece
	         $2332 = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $2341 = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $234f = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $2351 = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $2354 = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $2355 = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $2362 = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $2370 = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $2373 = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $237f = InGameHandlePieceFalling.holdingDown
	         $237f = InGameHandlePieceFalling
	         $2391 = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $23aa = InGameHandlePieceFalling.start
	         $23b2 = InGameHandlePieceFalling.afterPressedDown
	         $23bf = InGameHandlePieceFalling.sendActivePieceToOam
	         $23c3 = InGameHandlePieceFalling.currScoreEqu0
	         $23d0 = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $240e = InGameHandlePieceFalling.clearTimesHoldingDown
	         $2411 = InGameHandlePieceFalling.fromNotHoldingDown
	         $2432 = InGameHandlePieceFalling.skipGameOver
	         $2434 = InGameHandlePieceFalling.isAType
	         $2435 = InGameHandlePieceFalling.keepAdding
	         $243c = InGameHandlePieceFalling.addDropsToScore
	         $244c = InGameCheckIfAnyTetrisRowsComplete
	         $2461 = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $2464 = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $2479 = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $24a9 = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $24b8 = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $24dd = InGameCheckIfAnyTetrisRowsComplete.end
	         $24e6 = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $24e9 = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $24ee = FlashCompletedTetrisRows
	         $2504 = FlashCompletedTetrisRows.upperOuterLoop
	         $2514 = FlashCompletedTetrisRows.flashRow
	         $2516 = FlashCompletedTetrisRows.flashRowLoop
	         $251f = FlashCompletedTetrisRows.incFlashCount
	         $252d = FlashCompletedTetrisRows.flashed7times
	         $2538 = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $253c = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $2546 = FlashCompletedTetrisRows.origTileCopyLoop
	         $2556 = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $255b = ShiftEntireGameRamBufferDownARow
	         $2568 = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $2573 = ShiftEntireGameRamBufferDownARow.nextRow
	         $2576 = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $2595 = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $25a1 = ClearPointersToCompletedTetrisRows
	         $25a7 = ClearPointersToCompletedTetrisRows.loop
	         $25ac = CopyRamBufferRow17ToVram
	         $25bb = CopyRamBufferRow16ToVram
	         $25ca = CopyRamBufferRow15ToVram
	         $25d9 = CopyRamBufferRow14ToVram
	         $25e8 = CopyRamBufferRow13ToVram
	         $25f7 = CopyRamBufferRow12ToVram
	         $2606 = CopyRamBufferRow11ToVram
	         $261d = CopyRamBufferRow11ToVram.loop
	         $2623 = CopyRamBufferRow11ToVram.is2Player
	         $2631 = CopyRamBufferRow10ToVram
	         $2640 = CopyRamBufferRow9ToVram
	         $264f = CopyRamBufferRow8ToVram
	         $265e = CopyRamBufferRow7ToVram
	         $266d = CopyRamBufferRow6ToVram
	         $267c = CopyRamBufferRow5ToVram
	         $268b = CopyRamBufferRow4ToVram
	         $269a = CopyRamBufferRow3ToVram
	         $26ac = CopyRamBufferRow2ToVram
	         $26c5 = CopyRamBufferRow1ToVram
	         $26da = CopyRamBufferRow0ToVram
	         $26f7 = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $270d = CopyRamBufferRow0ToVram.displayLines
	         $272c = CopyRamBufferRow0ToVram.is1playerEnd
	         $2736 = CopyRamBufferRow0ToVram.setGameState
	         $2739 = CopyRamBufferRow0ToVram.playNextPiece
	         $273d = CopyRamBufferRow0ToVram.is2player
	         $2749 = DisplayGameATypeScoreIfInGameAndForced
	         $2759 = CheckIfATypeNextLevelReached
	         $278c = CheckIfATypeNextLevelReached.nextDigit
	         $27a2 = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $27ab = ABisBCDofValInHL
	         $27b0 = ABisBCDofValInHL.loop
	         $27b8 = ABisBCDofValInHL.copyAtoB
	         $27ba = CopyRamBufferRowToVram
	         $27bc = CopyRamBufferRowToVram.loop
	         $27c9 = InGameCheckButtonsPressed
	         $27e8 = InGameCheckButtonsPressed.pressedAAnimation0
	         $27ee = InGameCheckButtonsPressed.pressedB
	         $27f8 = InGameCheckButtonsPressed.pressedBAnimation3
	         $27fc = InGameCheckButtonsPressed.afterRotation
	         $2817 = InGameCheckButtonsPressed.afterCollisionCheck
	         $2835 = InGameCheckButtonsPressed.pressedRight
	         $2848 = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $2857 = InGameCheckButtonsPressed.notHeldLeft
	         $285a = InGameCheckButtonsPressed.notHeldRight
	         $286c = InGameCheckButtonsPressed.pressedLeft
	         $2881 = RetZIfNoCollisionForPiece
	         $2886 = RetZIfNoCollisionForPiece.nextSprite
	         $28a4 = RetZIfNoCollisionForPiece.fromXis0
	         $28a8 = RetZIfNoCollisionForPiece.notEmpty
	         $28af = InGameAddPieceToVram
	         $28b9 = InGameAddPieceToVram.nextSquareOfPiece
	         $28cb = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $28d6 = InGameAddPieceToVram.waitVRAMB
	         $28eb = InGameAddPieceToVram.nextState
	         $28f5 = ConvertFromObjectTileToBGTile
	         $2901 = ConvertFromObjectTileToBGTile.subForFxValues
	         $2903 = ConvertFromObjectTileToBGTile.getOffset
	         $2908 = PieceTileConversionLookUpTable
	         $2914 = ProcessCurrentScoreCategory
	         $2932 = ProcessCurrentScoreCategory.afterDisplaying10s
	         $2937 = ProcessCurrentScoreCategory.addCategScore
	         $2953 = ProcessCurrentScoreCategory.addToTotalScore
	         $2961 = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $2974 = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $2975 = IncScoreCategoryProcessedAfterBTypeDone
	         $298c = ClearScoreCategoryVarsAndTotalScore
	         $2992 = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $299b = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $29a0 = ConvertHexToDec
	         $29a1 = ConvertHexToDec.convertLoop
	         $29a7 = UpdateClock
	         $29ac = UpdateClock.doHours
	         $29b7 = UpdateClock.loopa
	         $29c1 = UpdateClock.waitVRAMC
	         $29d3 = UpdateClock.doMinutes
	         $29de = UpdateClock.loopb
	         $29f3 = UpdateClock.setSramBank
	         $29f9 = UpdateClock.updateSIsDay_DuskDawn_Night
	         $2a14 = UpdateClock.isDay
	         $2a1e = UpdateClock.isDuskOrDawn
	         $2a2a = UpdateClock.isNight
	         $2a36 = ColonTile
	         $2a46 = UnusedStoreBCDByteInHLInDestDE
	         $2a52 = Copy2SpriteSpecsToShadowOam
	         $2a54 = CopyASpriteSpecsToShadowOam
	         $2a64 = Copy1stSpriteSpecToSprite4
	         $2a77 = Copy2ndSpriteSpecToSprite8
	         $2a8a = DisplayBlackColumnFromHLdown
	         $2a91 = DisplayBlackColumnFromHLdown.loop
	         $2a97 = CopyDEintoHLwhileFFhNotFound
	         $2a97 = CopyDEintoHLwhileFFhNotFound.loop
	         $2a9f = StubInterruptHandler
	         $2aa0 = SpriteSpecStruct_LPieceActive
	         $2aa8 = SpriteSpecStruct_LPieceNext
	         $2ab0 = SpriteSpecStruct_GameMusicAType
	         $2abc = SpriteSpecStruct_ATypeFlashing0
	         $2ac2 = SpriteSpecStruct_BTypeLevelAndHigh
	         $2ace = SpriteSpecStruct_2PlayerHighsFlashing1
	         $2ada = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $2aec = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $2afe = SpriteSpecStruct_MariosFacingAway
	         $2b0a = SpriteSpecStruct_LuigisFacingAway
	         $2b16 = SpriteSpecStruct_Dancers
	         $2b52 = SpriteSpecStruct_ShuttleAndGas
	         $2b64 = SpriteSpecStruct_RocketAndGas
	         $2b76 = FillScreen0FromHLdownWithEmptyTile
	         $2b79 = FillScreenFromHLdownWithEmptyTile
	         $2b7c = FillScreenFromHLdownWithEmptyTile.loop
	         $2b85 = CopyHLtoDE_BCbytes
	         $2b85 = CopyHLtoDE_BCbytes.loop
	         $2b8e = LoadAsciiAndMenuScreenGfx
	         $2ba9 = CopyAsciiTileData
	         $2bb2 = CopyAsciiTileData.loop
	         $2bbd = CopyAsciiAndTitleScreenTileData
	         $2bdc = UnusedCopyHLtoVram1000hBytes
	         $2bdf = CopyHLtoVramBCbytes
	         $2be5 = Stub_27ea
	         $2be6 = CopyLayoutToScreen0
	         $2be9 = CopyLayoutToHL
	         $2beb = CopyLayoutBrowsToHL
	         $2beb = CopyLayoutBrowsToHL.loopRow
	         $2bee = CopyLayoutBrowsToHL.loopCol
	         $2bff = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $2bff = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $2c02 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $2c15 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $2c1b = TurnOffLCD
	         $2c23 = TurnOffLCD.waitUntilInVBlank
	         $2c34 = GameInnerScreenLayout_Pause
	         $2c84 = GameScreenLayout_ScoreTotals
	         $2d39 = GameInnerScreenLayout_GameOver
	         $2d71 = GameInnerScreen_TryAgain
	         $2da1 = PollInput
	         $2dde = GetScreen0AddressOfPieceSquare
	         $2df1 = GetScreen0AddressOfPieceSquare.loop
	         $2e0b = UnusedMovePieceUpAndRight
	         $2e13 = UnusedMovePieceUpAndRight.deDiv16
	         $2e31 = DisplayBCDNum6DigitsIfForced
	         $2e35 = DisplayBCDNum6Digits
	         $2e37 = DisplayBCDNum2CDigits
	         $2e3a = DisplayBCDNum2CDigits.nextByte
	         $2e4b = DisplayBCDNum2CDigits.displayTens
	         $2e61 = DisplayBCDNum2CDigits.displayOnes
	         $2e6a = DisplayBCDNum2CDigits.tensNot0
	         $2e72 = DisplayBCDNum2CDigits.onesNot0
	         $2e7a = OamDmaFunction
	         $2e80 = OamDmaFunction.wait
	         $2e84 = CopyToShadowOamBasedOnSpriteSpec
	         $2e89 = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $2e97 = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $2ea9 = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $2eae = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $2eb0 = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $2eb5 = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $2ed8 = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $2ef3 = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $2ef7 = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $2efb = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $2f0e = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $2f18 = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $2f2d = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $2f37 = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $2f49 = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $2f4b = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	         $2f67 = ConvertFromBgTileToObjectTile
	         $2f7c = ConvertFromBgTileToObjectTile.pastGarbageBlock
	         $2f83 = ConvertFromBgTileToObjectTile.pastGarbageBlock2
	         $2f8a = ConvertFromBgTileToObjectTile.isHorIPieceEnd
	SECTION: $2f8d-$38d7 ($094b bytes) ["Sound Engine"]
	         $2f8d = SquareSoundEffectTable_Init
	         $2f9d = SquareSoundEffectTable_Update
	         $2fad = NoiseSoundEffect_Init
	         $2fb5 = NoiseSoundEffect_Update
	         $2fbd = SongsSoundChannelsData
	         $2fdf = Stub
	         $2fe0 = UpdateSound
	         $2ff5 = UpdateSound.endPath
	         $3007 = UpdateSound.dontUnset
	         $301c = UpdateSound.done
	         $3031 = UpdateSound.gameJustPaused
	         $305d = UpdateSound.setAud2RegsToPause1
	         $3060 = UpdateSound.copyIntoAud2Regs
	         $3065 = UpdateSound.setAud2RegsToPause2
	         $306a = UpdateSound.gameJustUnpaused
	         $3070 = UpdateSound.processPausedCounter
	         $3088 = Aud2RegVals_Pause1
	         $308c = Aud2RegVals_Pause2
	         $3090 = IsSoundEffect_MovingSelection
	         $3096 = IsSoundEffect_TetrisRowsFell
	         $309c = IsSoundEffect_4LinesCleared
	         $30a2 = IsSoundEffect_ReachedNextLevel
	         $30a8 = Aud1RegValsInit_MovingSelection
	         $30ad = Aud1RegValsUpdate_MovingSelection
	         $30b2 = Aud1RegValsInit_ConfirmOrLetterTyped
	         $30b7 = SquareEffectInit_MovingSelection
	         $30bf = SquareEffectUpdate_MovingSelection
	         $30d3 = SquareEffectInit_ConfirmOrLetterTyped
	         $30db = SquareEffectUpdate_Common
	         $30e0 = ClearAud1RegsAndVars
	         $30f4 = Aud1RegVals_4LinesCleared_1
	         $30f9 = Aud1RegVals_4LinesCleared_2
	         $30fe = SquareEffectInit_4LinesCleared
	         $3104 = SquareEffectUpdate_4LinesCleared
	         $311b = SquareEffectUpdate_4LinesCleared.finalWav
	         $3124 = SquareEffectUpdate_4LinesCleared.sound2
	         $312a = SquareEffectUpdate_4LinesCleared.sound1
	         $3130 = Aud1RegValsInit_PieceMovedHoriz
	         $3135 = SquareEffectInit_PieceMovedHoriz
	         $314d = Aud1RegVals_ReachedNextLevel_0and4
	         $3152 = Aud1RegVals_ReachedNextLevel_1
	         $3157 = Aud1RegVals_ReachedNextLevel_2
	         $315c = Aud1RegVals_ReachedNextLevel_3
	         $3161 = SquareEffectInit_ReachedNextLevel
	         $316d = SquareEffectUpdate_ReachedNextLevel
	         $318d = SquareEffectUpdate_ReachedNextLevel.sound1
	         $3192 = SquareEffectUpdate_ReachedNextLevel.sound2
	         $3197 = SquareEffectUpdate_ReachedNextLevel.sound3
	         $319c = SquareEffectUpdate_ReachedNextLevel.sound4
	         $319f = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $31a2 = Aud1RegValsInit_Non4LinesCleared
	         $31a7 = Aud1EnvData_Non4LinesCleared
	         $31b2 = Aud1FreqLoData_Non4LinesCleared
	         $31bc = SquareEffectInit_Non4LinesCleared
	         $31d0 = SquareEffectUpdate_Non4LinesCleared
	         $31ee = SetAud1EnvLowHighToEDB
	         $31f9 = Aud1RegValsInit_PieceRotated
	         $31fe = Aud1EnvData_PieceRotated
	         $3204 = Aud1FreqLoData_PieceRotated
	         $3209 = SquareEffectInit_PieceRotated
	         $3221 = SquareEffectUpdate_PieceRotated
	         $3241 = SquareEffectInit_TetrisRowsFell
	         $324d = Aud1RegValsInit_TetrisRowsFell
	         $3252 = Aud4RegValsInit_PieceHitFloor
	         $3256 = Aud4RegValsInit_TetrisRowsFell
	         $325a = Aud4RegValsInit_RocketGas
	         $325e = Aud4RegValsInit_RocketFire
	         $3262 = Aud4RegValsUpdate_RocketFire_Poly
	         $3286 = Aud4RegValsUpdate_RocketFire_Env
	         $32aa = NoiseEffectInit_RocketGas
	         $32b2 = NoiseEffectInit_RocketFire
	         $32ba = NoiseEffectUpdate_RocketFire
	         $32e1 = NoiseEffectInit_TetrisRowsFell
	         $32e9 = NoiseEffectInit_PieceHitFloor
	         $32f1 = NoiseEffectUpdate_Common
	         $32f6 = NoiseEffectUpdate_ClearNoise
	         $3308 = Aud3RegValsInit_GameOver
	         $330d = WavEffectInit_GameOver
	         $3324 = WavEffectUpdate_GameOver
	         $3337 = WavEffectUpdate_GameOver.setAud3Low
	         $333f = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $3349 = UpdateWavEffects
	         $3364 = Aud3RegValsInit_After4LinesCleared
	         $3369 = Aud3RegValsUpdate_After4LinesCleared_1
	         $336e = Aud3RegValsUpdate_After4LinesCleared_2
	         $3373 = Aud3RegValsUpdate_After4LinesCleared_3
	         $3378 = WavEffectInit_After4LinesCleared
	         $338d = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $3390 = WavEffectUpdate_sound1
	         $33a1 = WavEffectUpdate_sound2
	         $33b2 = WavEffectUpdate_sound3
	         $33c3 = WavEffectUpdate_After4LinesCleared
	         $33e5 = WavEffectUpdate_After4LinesCleared.incLowVal
	         $33e9 = WavEffectUpdate_After4LinesCleared.decLowVal
	         $33eb = WavEffectUpdate_After4LinesCleared.setLowVal
	         $33ef = ClearWavVarsAndRegs_ResumeMusic
	         $3415 = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $341a = InitWavEffect_pauseOtherChannels
	         $343f = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $3443 = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $3463 = CopyDefaultValsInHLIntoAud1Regs
	         $346a = CopyDefaultValsInHLIntoAud2Regs
	         $3471 = CopyDefaultValsInHLIntoAud3Regs
	         $3478 = CopyDefaultValsInHLIntoAud4Regs
	         $347d = CopyDefaultValsInHLIntoAudCRegs
	         $347d = CopyDefaultValsInHLIntoAudCRegs.loop
	         $3485 = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $3489 = HLequAddressForSongData_tableHL_incE
	         $3498 = IncCounterInDE_retZifHitsThreshold
	         $34a3 = IncCounterInDE_retZifHitsThreshold.done
	         $34a5 = CopyFromHLintoWav3Ram
	         $34a8 = CopyFromHLintoWav3Ram.loop
	         $34b2 = InitSound
	         $34d4 = ResetSoundHwRegs
	         $34ea = UpdateSquareEffects
	         $34fd = UpdateSquareEffects.noSquareEffectToPlay
	         $3509 = UpdateSquareEffects.done
	         $350a = UpdateNoiseEffects
	         $351d = UpdateNoiseEffects.noNoiseEffectToPlay
	         $3529 = UpdateNoiseEffects.done
	         $352a = MuteSound
	         $352e = InitSong
	         $3549 = SetSongsAudTermVars
	         $3551 = SetSongsAudTermVars.nextSong
	         $355a = SetSongsAudTermVars.setSongVars
	         $3572 = SetSongsAudTermRegs
	         $359c = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $35a7 = SetSongsAudTermRegs.afterDecidingWavOutput
	         $35b1 = SetSongsAudTermRegs.setAudTermToB
	         $35b2 = SetSongsAudTermRegs.setAudTerm
	         $35b5 = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $35b9 = SetSongsAudTermRegs.use1stOutputValue
	         $35be = SetSongsAudTermRegs.notTimeToSwapOutput
	         $35cb = SongAudTermData
	         $360f = StoreWordInWordInHLintoDE
	         $361a = StoreWordInHLIintoDE
	         $3620 = SetSongsInitialSoundChannelVars
	         $3677 = SetSongsInitialSoundChannelVars.loop
	         $368a = ProcessSoundByte9dh_SetParams.aud3
	         $368a = ProcessSoundByte9dh_SetParams
	         $3696 = ProcessSoundByte9dh_SetParams.start
	         $36c0 = ProcessSoundByte9dh_SetParams.end
	         $36c6 = IncWordInHL
	         $36cc = IncWordInHL.store
	         $36d2 = IncWordTwiceInHL
	         $36db = GetABInWordStoredInHL
	         $36e2 = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $36e2 = UpdateMusic
	         $36e5 = UpdateMusic.processCurrSoundByteEnvelope
	         $36fc = UpdateMusic.passedWaveEnvelope
	         $3711 = UpdateMusic.toNextSndChannelFromStructIdx2
	         $3716 = UpdateMusic.setNextAddrInCurrSndChannelData
	         $371d = UpdateMusic.afterSpecialSoundByteAddress
	         $3731 = UpdateMusic.sndChannelAddrEquFFFFh
	         $3748 = UpdateMusic.stopCurrSong
	         $3751 = UpdateMusic.start
	         $375f = UpdateMusic.nextSoundChannel
	         $3769 = UpdateMusic.afterSettingSoundDataAddress
	         $376b = UpdateMusic.processNextSoundByte
	         $3798 = UpdateMusic.contSoundByte
	         $37c4 = UpdateMusic.soundByte01
	         $37c9 = UpdateMusic.getNoiseDataToWrite
	         $37d1 = UpdateMusic.noiseLoop
	         $37e0 = UpdateMusic.getNonNoiseDataToWrite
	         $37fa = UpdateMusic.contWave
	         $3805 = UpdateMusic.startWritingToSq2
	         $3809 = UpdateMusic.startWritingToSq1
	         $380e = UpdateMusic.afterChoosingSndChannelBaseReg
	         $3817 = UpdateMusic.after_hasWavRam
	         $381a = UpdateMusic.fromWav
	         $3823 = UpdateMusic.afterDisabledEnvelopeCheck
	         $3841 = UpdateMusic.skippingHwRegWrites
	         $3846 = UpdateMusic.toNextSndChannel
	         $3857 = UpdateMusic.done
	         $3864 = UpdateMusic.hasWavRam
	         $386b = GetEinDEplusBdiv2
	         $3874 = WriteToFrequencyRegsAdjustedWithEnvelope
	         $3896 = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $3898 = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $38ae = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $38b3 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $38bf = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $38cc = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $38ce = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $38cf = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $38d8-$3fef ($0718 bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $074b bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7f27 ($384d bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Layout_ATypeInGame
	         $56db = Gfx_MenuScreens.end
	         $5843 = Layout_BTypeInGame
	         $59ab = Gfx_Ascii
	         $5ae3 = Gfx_Ascii.end
	         $5ae3 = Gfx_TitleScreen
	         $6293 = Layout_Copyright
	         $6293 = Gfx_TitleScreen.end
	         $63fb = Layout_TitleScreen
	         $6653 = Layout_GameMusicTypeScreen
	         $67bb = Layout_ATypeSelectionScreen
	         $6923 = Layout_BTypeSelectionScreen
	         $6a8b = GameScreenLayout_Dancers
	         $6b40 = Layout_RocketScene
	         $6b90 = Layout_MarioLuigiScreen
	         $6cf8 = Layout_2PlayerInGame
	         $6e60 = Layout_MarioScore
	         $6eb0 = Layout_BricksAndLuigiScore
	         $6f28 = Gfx_RocketScene
	         $7f28 = Gfx_RocketScene.end
	EMPTY: $7f28-$7fff ($00d8 bytes)
	TOTAL EMPTY: $00d8 bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$55bf ($03c0 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $5458 = Layout_RocketScene_Sunrise_Sunset
	         $55c0 = Layout_RocketScene_Sunrise_Sunset.end
	EMPTY: $55c0-$7fff ($2a40 bytes)
	TOTAL EMPTY: $2a45 bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4674 ($0475 bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $4458 = Layout_RocketScene_Night
	         $45c0 = GameScreenLayout_Dancers_Night
	         $4675 = GameScreenLayout_Dancers_Night.end
	EMPTY: $4675-$7fff ($398b bytes)
	TOTAL EMPTY: $39db bytes

SRAM bank #0:
	SECTION: $a000-$a003 ($0004 bytes) ["SRAM"]
	         $a000 = sCurrMonth
	         $a001 = sCurrYear
	         $a003 = sIsDay_DuskDawn_Night
	         $a003 = sCurrYear.end
	         $a004 = sIsDay_DuskDawn_Night.end
	EMPTY: $a004-$bfff ($1ffc bytes)
	TOTAL EMPTY: $1ffc bytes

WRAM0 bank #0:
	SECTION: $c000-$dfff ($2000 bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wBTypeHighScores
	         $d654 = wATypeHighScores
	         $d762 = wd762
	         $df70 = wCurrSoundChannelBeingProcessed
	         $df71 = wOrigSoundEffectIdx
	         $df71 = wUnusedShadowAudLen
	         $df72 = wdf72
	         $df75 = wAudTermCounterUntilChangingOutput
	         $df76 = wAudTermCounterValueToHitToChangeOutput
	         $df77 = wAudTermSelectedOutputVal
	         $df78 = wAudTermSongsSpec
	         $df79 = wAudTermOutputValue1
	         $df7a = wAudTermOutputValue2
	         $df7b = wdf7b
	         $df7e = wGamePausedSoundTimer
	         $df7f = wGamePausedActivity
	         $df80 = wUnused_df80
	         $df81 = wSongTempoAddr
	         $df83 = wdf83
	         $df90 = wAudStructs
	         $df90 = wAud1Struct
	         $dfa0 = wAud2Struct
	         $dfb0 = wAud3Struct
	         $dfc0 = wAud4Struct
	         $dfd0 = wdfd0
	         $dfe0 = wSquareSoundToPlay
	         $dfe1 = wSquareEffectBeingPlayed
	         $dfe2 = wSquareEffectFrameCounter
	         $dfe3 = wSquareEffectFrameCounterThreshold
	         $dfe4 = wSquareEffectMiscCounter
	         $dfe5 = wdfe5
	         $dfe8 = wSongToStart
	         $dfe9 = wSongBeingPlayed
	         $dfea = wdfea
	         $dff0 = wWavSoundToPlay
	         $dff1 = wWavEffectBeingPlayed
	         $dff2 = wWavEffectFrameCounter
	         $dff3 = wWavEffectFrameCounterThreshold
	         $dff4 = wWavEffectMiscCounter
	         $dff5 = wWavEffectRandomVal
	         $dff5 = wWavEffectShouldIncOrDec
	         $dff6 = wWavEffectCurrLoVal
	         $dff7 = wdff7
	         $dff8 = wNoiseSoundToPlay
	         $dff9 = wNoiseEffectBeingPlayed
	         $dffa = wNoiseEffectFrameCounter
	         $dffb = wNoiseEffectFrameCounterThreshold
	         $dffc = wNoiseEffectMiscCounter
	         $dffd = wOptionLights
	         $dffe = wOptionColors
	         $dfff = wOptionDayNightCycle
	         $e000 = wOptionDayNightCycle.end
	TOTAL EMPTY: $0000 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 14517 bytes used / 1867 free
	ROMX: 23304 bytes used / 25848 free in 3 banks
	SRAM: 4 bytes used / 8188 free in 1 bank
	WRAM0: 8192 bytes used / 0 free
	HRAM: 127 bytes used / 0 free
