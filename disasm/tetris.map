ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$364e ($34ff bytes) ["Begin"]
	         $0150 = Begin
	         $0167 = UnusedGetScreenTileInHLWhileOamFree
	         $016a = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $0171 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $017a = AddScoreValueDEontoBaseScoreHL
	         $0192 = VBlankInterruptHandler
	         $01ad = VBlankInterruptHandler.afterMasterTransfer
	         $021a = VBlankInterruptHandler.end
	         $0226 = Begin2
	         $0233 = Begin2.clear2ndWram
	         $023a = Reset
	         $0252 = Reset.waitUntilVBlank
	         $0279 = Reset.initializeSram
	         $0288 = Reset.clearSram
	         $0294 = Reset.sramInitialized
	         $029a = Reset.clearLastPage
	         $02a5 = Reset.clear1stWram
	         $02b4 = Reset.clearVram
	         $02c0 = Reset.clearOam
	         $02c9 = Reset.clearHram
	         $02d4 = Reset.copyOamDmaFunc
	         $02fe = MainLoop
	         $0315 = MainLoop.nextTimer
	         $0321 = MainLoop.toNextTimer
	         $032e = MainLoop.waitUntilVBlankIntDone
	         $0339 = ProcessGameState
	         $03aa = GameState24_CopyrightDisplay
	         $03d6 = GameState24_CopyrightDisplay.adjLoopA
	         $03dc = GameState24_CopyrightDisplay.noPalAdjA
	         $0402 = GameState24_CopyrightDisplay.adjLoopB
	         $0408 = GameState24_CopyrightDisplay.noPalAdjB
	         $042b = GameState24_CopyrightDisplay.copyLoop
	         $0440 = GameState25_CopyrightWaiting
	         $0457 = GameState35_CopyrightCanContinue
	         $0465 = GameState35_CopyrightCanContinue.setNewState
	         $046a = GameState06_TitleScreenInit
	         $048f = GameState06_TitleScreenInit.clearScreenBuffer
	         $04aa = GameState06_TitleScreenInit.displayBlackRow
	         $04c2 = GameState06_TitleScreenInit.sunriseOrSunset
	         $04c7 = GameState06_TitleScreenInit.night
	         $04ca = GameState06_TitleScreenInit.copy
	         $04ee = GameState06_TitleScreenInit.adjLoopA
	         $04f4 = GameState06_TitleScreenInit.noPalAdjA
	         $051a = GameState06_TitleScreenInit.adjLoopB
	         $0520 = GameState06_TitleScreenInit.noPalAdjB
	         $0566 = PlayDemo
	         $05a6 = PlayDemo.setDemoPlayed
	         $05c0 = UnusedSetRecordingDemo
	         $05c5 = GameState07_TitleScreenMain
	         $05d4 = GameState07_TitleScreenMain.afterTimerCheck
	         $05f0 = GameState07_TitleScreenMain.checkButtonsPressed
	         $0629 = !0
	         $062d = GameState07_TitleScreenMain.scrollLoop
	         $0634 = !1
	         $0643 = GameState07_TitleScreenMain.playerChecks
	         $065a = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $0664 = GameState07_TitleScreenMain.setGameStateTo2ah
	         $0666 = GameState07_TitleScreenMain.setGameState
	         $0674 = GameState07_TitleScreenMain.is1Player
	         $067d = GameState07_TitleScreenMain.afterUpCheck
	         $0680 = GameState07_TitleScreenMain.flipNumPlayersOption
	         $0682 = GameState07_TitleScreenMain.setNumPlayersOpt
	         $069a = !2
	         $06a7 = !3
	         $06ae = GameState07_TitleScreenMain.setCursorX
	         $06b2 = GameState07_TitleScreenMain.pressedRight
	         $06b8 = GameState07_TitleScreenMain.pressedLeft
	         $06bc = GameState07_TitleScreenMain.pressedDown
	         $06c5 = GameState07_TitleScreenMain.pressedUp
	         $06c8 = GameState07_TitleScreenMain.multiplayerInvalid
	         $06cb = GameState07_TitleScreenMain.optionMenu
	         $06e0 = !4
	         $06e8 = !5
	         $06f0 = !6
	         $06f2 = GameState07_TitleScreenMain.setCursorY
	         $0703 = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $0718 = GameState07_TitleScreenMain.updateClock
	         $072e = GameState07_TitleScreenMain.loopa
	         $0750 = GameState07_TitleScreenMain.loopb
	         $0761 = GameState07_TitleScreenMain.updateToggledOptions
	         $0764 = GameState07_TitleScreenMain.updateLoop
	         $077d = GameState07_TitleScreenMain.pressedDownOptions
	         $0786 = GameState07_TitleScreenMain.pressedUpOptions
	         $0790 = GameState07_TitleScreenMain.pressedBOptions
	         $0790 = GameState07_TitleScreenMain.scrollLoopBack
	         $0797 = !7
	         $07a6 = GameState07_TitleScreenMain.doneScrolling
	         $07b7 = GameState07_TitleScreenMain.pressedAOptions
	         $07d3 = GameState07_TitleScreenMain.setTime
	         $07db = GameState07_TitleScreenMain.hours
	         $081c = GameState07_TitleScreenMain.decreaseHours
	         $0824 = GameState07_TitleScreenMain.updateDecH
	         $083a = GameState07_TitleScreenMain.increaseHours
	         $0842 = GameState07_TitleScreenMain.updateIncH
	         $0858 = GameState07_TitleScreenMain.minutes
	         $08a1 = GameState07_TitleScreenMain.decreaseMinutes
	         $08a9 = GameState07_TitleScreenMain.updateDecM
	         $08c7 = GameState07_TitleScreenMain.increaseMinutes
	         $08cf = GameState07_TitleScreenMain.updateIncM
	         $08ed = GameState07_TitleScreenMain.exit
	         $08fb = SeparateTens
	         $08fd = SeparateTens.loop
	         $0905 = ChangeToggleTile
	         $090e = !8
	         $0914 = !9
	         $091e = WaitVRAM
	         $091f = WaitVRAM.loop
	         $0927 = DemoSendPingsAndEndAfterAllStepsDone
	         $0948 = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $0955 = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $095d = DemoPollInput
	         $0975 = DemoPollInput.mainBit
	         $0991 = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $0994 = DemoPollInput.end
	         $099d = UnusedClearDemoButtonsHeld
	         $09a3 = DemoRecordInput
	         $09cd = DemoRecordInput.incFrames
	         $09d3 = DemoRestorePlayerButtonsHeld
	         $09e0 = GameState2a_passive
	         $09e7 = GameState2a_2PlayerGameMusicTypeInit
	         $09f1 = GameState2a_2PlayerGameMusicTypeInit.cont
	         $0a17 = GameState2b_2PlayerGameMusicTypeMain
	         $0a33 = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $0a40 = GameState2b_2PlayerGameMusicTypeMain.cont
	         $0a64 = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $0a7d = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $0a84 = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $0a8c = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $0a90 = GameState16_passive
	         $0a97 = GameState16_MarioLuigiScreenInit
	         $0aaf = GameState16_MarioLuigiScreenInit.loop
	         $0ab6 = GameState16_MarioLuigiScreenInit.cont
	         $0aed = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $0b2a = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $0b4a = CopyDEtoHL_Bbytes
	         $0b4a = CopyDEtoHL_Bbytes.loop
	         $0b51 = GameState17_MarioLuigiScreenMain
	         $0b68 = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $0b6f = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0b7a = GameState17_MarioLuigiScreenMain.isMaster
	         $0b84 = GameState17_MarioLuigiScreenMain.notPressedStart
	         $0b8f = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $0b92 = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $0baf = GameState17_MarioLuigiScreenMain.aGameFinished
	         $0bc7 = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $0bcf = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $0bd1 = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $0bd9 = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $0be2 = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $0bfb = GameState17_MarioLuigiScreenMain.pressedRight
	         $0c00 = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0c06 = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $0c0d = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0c13 = GameState17_MarioLuigiScreenMain.pressedUp
	         $0c1b = Player1HighCoords
	         $0c27 = Player2HighCoords
	         $0c33 = Set2PlayerHighCoords
	         $0c4a = GameState18_2PlayerInGameInit
	         $0c52 = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $0ca1 = GameState18_2PlayerInGameInit.adjLoopA
	         $0ca7 = GameState18_2PlayerInGameInit.noPalAdjA
	         $0cc4 = GameState18_2PlayerInGameInit.adjLoopB
	         $0cca = GameState18_2PlayerInGameInit.noPalAdjB
	         $0d1e = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $0d3e = GameState18_2PlayerInGameInit.luigiFace
	         $0d4e = GameState18_2PlayerInGameInit.marioFace
	         $0d5e = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0d6c = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0d7d = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0d90 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0d92 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0d9f = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0db7 = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0dc2 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0dc4 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0dde = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0de7 = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0dee = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0dff = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0e0f = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0e1c = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0e24 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0e35 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0e40 = GameState19_commonEnd
	         $0e5e = GameState19_commonEnd.afterPassiveCheck
	         $0e70 = GameState19_passive
	         $0e7a = GameState19_passive.toDecB
	         $0e80 = GameState19_passive.waitUntilMasterPresent
	         $0e8e = GameState19_passive.waitUntilPingToMasterHandled
	         $0e9e = GameState19_passive.nextRow
	         $0ea0 = GameState19_passive.nextCol
	         $0ea9 = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0eb8 = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0ec6 = GameState19_passive.waitUntilTransferFinished
	         $0ed6 = GameState19_passive.loadNextPiece
	         $0edf = GameState19_passive.waitUntilTransferFinished2
	         $0eea = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0ef8 = GameState19_passive.waitUntilTransferFinished3
	         $0f06 = LoadBottomRowWithBlocks
	         $0f0d = LoadBottomRowWithBlocks.nextCol
	         $0f12 = SerialTransferWaitFunc
	         $0f15 = SerialTransferWaitFunc.loop
	         $0f1b = ShuffleHiddenPieces2Player
	         $0f24 = ShuffleHiddenPieces2Player.nextRandomVal
	         $0f27 = ShuffleHiddenPieces2Player.loop1chTo0
	         $0f28 = ShuffleHiddenPieces2Player.toDecB
	         $0f35 = ShuffleHiddenPieces2Player.afterBEqu0
	         $0f43 = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0f4c = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0f6b = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0f7c = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0f84 = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0f96 = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0f9b = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0fa4 = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0fab = GameState1a_2PlayerInGameMain
	         $0ff0 = GameState1a_2PlayerInGameMain.notYetFinished
	         $1000 = GameState1a_2PlayerInGameMain.afterLevelDone
	         $1011 = GameState1a_2PlayerInGameMain.end
	         $1018 = CheckAlmostLosingStatus
	         $1022 = CheckAlmostLosingStatus.nextRow
	         $1025 = CheckAlmostLosingStatus.nextCol
	         $1032 = CheckAlmostLosingStatus.afterLoop
	         $1044 = CheckAlmostLosingStatus.nearTop
	         $1053 = MasterPausedSerialByteRead
	         $106d = InGame2PlayerProcessSerialByte
	         $1099 = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $109b = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $10a2 = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $10a4 = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $10ab = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $10b7 = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $10ca = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $10cd = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $10dd = InGame2PlayerProcessSerialByte.noLineMarkings
	         $10e1 = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $10f9 = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $10ff = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $1109 = CheckIfOtherPlayerCleared2PlusLines
	         $1115 = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $111f = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $1127 = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $1130 = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $1132 = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $114a = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $114f = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $1168 = GameState1b_2PlayerGameEnd
	         $1180 = GameState1b_2PlayerGameEnd.tie
	         $1186 = GameState1b_2PlayerGameEnd.notLost
	         $1190 = GameState1b_2PlayerGameEnd.cont
	         $11a4 = GameState1b_2PlayerGameEnd.setGameState
	         $11af = GameState1d_2PlayerWinnerInit
	         $11bd = GameState1d_2PlayerWinnerInit.cont
	         $11cc = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $11e2 = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $11fb = WinnerMainIsMaster
	         $1208 = WinnerMainIsMaster.notWonAll5
	         $120e = WinnerMainIsMaster.toNextState
	         $1216 = GameState20_2PlayerWinnerMain
	         $122a = GameState20_2PlayerWinnerMain.end
	         $1233 = GoPastWinnerGameStates
	         $123a = ProcessWinnerMainTimer
	         $1262 = ProcessWinnerMainTimer.afterTimerCheck
	         $1280 = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $128c = ProcessWinnerMainTimer.hideBabySprite
	         $1290 = ProcessWinnerMainTimer.end
	         $12a0 = GameState1e_2PlayerLoserInit
	         $12ae = GameState1e_2PlayerLoserInit.cont
	         $12bd = GameState1e_2PlayerLoserInit.loadSadSprites
	         $12d3 = GameState1e_2PlayerLoserInit.copySadSprites
	         $12ec = LoserMainIsMaster
	         $12f9 = LoserMainIsMaster.notLost5
	         $12ff = LoserMainIsMaster.toNextState
	         $1307 = GameState21_2PlayerLoserMain
	         $131b = GameState21_2PlayerLoserMain.end
	         $1324 = GoPastLoserGameStates
	         $132b = ProcessLoserMainTimer
	         $134c = ProcessLoserMainTimer.afterTimerCheck
	         $1370 = ProcessLoserMainTimer.turnAdultToBigGas
	         $1380 = ProcessLoserMainTimer.hideAdultSprite
	         $1384 = ProcessLoserMainTimer.end
	         $1394 = DisplayTextPushStart
	         $13b0 = DisplayTextPushStart.loop
	         $13b6 = DisplayTextPushStart.done
	         $13b9 = DisplayTextPushStart.sprites
	         $13dd = ClearPushStartText
	         $13e6 = ClearPushStartText.loop
	         $13ec = LoadWinnerLoserScreen
	         $143b = LoadWinnerLoserScreen.afterBGdisplay
	         $1443 = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $145d = LoadWinnerLoserScreen.drawWinnerText
	         $1462 = LoadWinnerLoserScreen.afterWinningText
	         $146d = LoadWinnerLoserScreen.drawFaces
	         $1491 = LoadWinnerLoserScreen.checkLosingGames
	         $14ab = LoadWinnerLoserScreen.drawLoserText
	         $14b0 = LoadWinnerLoserScreen.afterLosingText
	         $14bb = LoadWinnerLoserScreen.drawFaces2
	         $14d4 = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $14e4 = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $14ec = DrawCfaces
	         $14ec = DrawCfaces.nextFace
	         $14f4 = DrawCfaces.nextRow
	         $1507 = ProcessDeuceAdvantageLogic
	         $1525 = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $152e = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $1532 = ProcessDeuceAdvantageLogic.won4
	         $1534 = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $1537 = ProcessDeuceAdvantageLogic.clearAdvantages
	         $153d = ProcessDeuceAdvantageLogic.wasDeuce
	         $1544 = ProcessDeuceAdvantageLogic.clearDeuce
	         $1548 = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $154c = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $1553 = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $155a = CopyAndUnderlineTextDEtoHL_Bbytes
	         $155c = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $156a = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $156f = TextDeuce
	         $1575 = TextMarioWins
	         $1580 = TextLuigiWins
	         $158b = TextAdvantage
	         $1594 = GameState1f_Post2PlayerResults
	         $15bc = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $15c1 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $15da = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $15dc = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $15e2 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $15e9 = GameState26_ShuttleSceneInit
	         $1639 = DisplayRocketScene
	         $1672 = GameState27_ShuttleSceneShowClouds
	         $1688 = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $1691 = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $16a8 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $16b1 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $16d0 = GameState02_ShuttleSceneLiftoff
	         $1703 = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $1707 = GameState03_ShuttleSceneShootFire
	         $1729 = GameState03_ShuttleSceneShootFire.checkTimer2
	         $1739 = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $173f = GameState2c_ShuttleSceneShowCongratulations
	         $1781 = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $1791 = GameState2d_CongratsWaitingBeforeBTypeScore
	         $1791 = GameState2c_ShuttleSceneShowCongratulations.end
	         $17b0 = GameState34_PreRocketSceneWait
	         $17b9 = GameState2e_RocketSceneInit
	         $17eb = GameState2f_RocketSceneShowClouds
	         $1801 = GameState30_PoweringUp
	         $180a = GameState30_PoweringUp.liftingOff
	         $1818 = GameState31_RocketSceneLiftOff
	         $184b = GameState31_RocketSceneLiftOff.toggleVisibility
	         $184f = GameState32_RocketSceneShootFire
	         $1869 = GameState32_RocketSceneShootFire.checkTimer2
	         $1879 = GameState32_RocketSceneShootFire.copySpecsToOam
	         $187f = GameState33_RocketSceneEnd
	         $189d = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $18af = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $18be = ShuttleMetalStructureLeft
	         $18c5 = ShuttleMetalStructureRight
	         $18cc = RocketMetalStructureLeft
	         $18d3 = RocketMetalStructureRight
	         $18da = CopyDEintoHLsColumn_Bbytes
	         $18da = CopyDEintoHLsColumn_Bbytes.loop
	         $18e7 = GameState08_GameMusicTypeInit
	         $18f2 = GameMusicTypeInitWithoutDisablingSerialRegs
	         $192f = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $193e = Stub_148c
	         $193f = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $1944 = SetSpriteSpecCoordsForMusicType
	         $195a = SetSpriteSpecCoordsForMusicType.coords
	         $1962 = GameState0f_MusicTypeMain
	         $197a = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $1992 = GameState0f_MusicTypeMain.setMusicType
	         $1999 = GameState0f_MusicTypeMain.copyToShadowOam
	         $199d = GameState0f_MusicTypeMain.pressedUp
	         $19a5 = GameState0f_MusicTypeMain.pressedRight
	         $19b0 = GameState0f_MusicTypeMain.pressedLeft
	         $19bb = GameState0f_MusicTypeMain.pressedB
	         $19c4 = GameState0f_MusicTypeMain.not2player
	         $19c9 = PlaySongBasedOnMusicTypeChosen
	         $19d3 = PlaySongBasedOnMusicTypeChosen.playSong
	         $19d7 = GameState0e_GameTypeMain
	         $1a01 = GameState0e_GameTypeMain.pressedRight
	         $1a09 = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $1a14 = GameState0e_GameTypeMain.setSpecIdx
	         $1a15 = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $1a19 = GameState0e_GameTypeMain.pressedStart
	         $1a28 = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $1a2d = GameState0e_GameTypeMain.pressedA
	         $1a31 = GameState0e_GameTypeMain.pressedB
	         $1a34 = GameState10_ATypeSelectionInit
	         $1a5d = GameState10_ATypeSelectionInit.adjLoopA
	         $1a63 = GameState10_ATypeSelectionInit.noPalAdjA
	         $1a89 = GameState10_ATypeSelectionInit.adjLoopB
	         $1a8f = GameState10_ATypeSelectionInit.noPalAdjB
	         $1ada = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $1adc = GameState10_ATypeSelectionInit.setGameState
	         $1adf = GameState11_ATypeSelectionMain
	         $1b11 = GameState11_ATypeSelectionMain.pressedRight
	         $1b16 = GameState11_ATypeSelectionMain.setNewLevel
	         $1b23 = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $1b27 = GameState11_ATypeSelectionMain.pressedLeft
	         $1b2d = GameState11_ATypeSelectionMain.pressedUp
	         $1b35 = ATypeLevelsCoords
	         $1b49 = GameState12_BTypeSelectionInit
	         $1b69 = GameState12_BTypeSelectionInit.adjLoopA
	         $1b6f = GameState12_BTypeSelectionInit.noPalAdjA
	         $1b8c = GameState12_BTypeSelectionInit.adjLoopB
	         $1b92 = GameState12_BTypeSelectionInit.noPalAdjB
	         $1be5 = GameState12_BTypeSelectionInit.setEnterHiScore
	         $1bea = GameState13_setGameStateMakeSpriteVisible
	         $1bef = GameState13_BTypeSelectionMain
	         $1c23 = GameState13_BTypeSelectionMain.pressedRight
	         $1c28 = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $1c35 = GameState13_BTypeSelectionMain.sendToOam
	         $1c39 = GameState13_BTypeSelectionMain.pressedLeft
	         $1c3f = GameState13_BTypeSelectionMain.pressedUp
	         $1c47 = BTypeLevelsCoords
	         $1c5b = GameState14_setGameStateMakeSpriteVisible
	         $1c60 = GameState14_BTypeHighMain
	         $1c92 = GameState14_BTypeHighMain.pressedRight
	         $1c97 = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1ca4 = GameState14_BTypeHighMain.sendToOam
	         $1ca8 = GameState14_BTypeHighMain.pressedLeft
	         $1cae = GameState14_BTypeHighMain.pressedUp
	         $1cb6 = BTypeHighsCoords
	         $1cc2 = UnusedNop_174d
	         $1cc3 = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1cca = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1cdb = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $1ceb = CopyCSpriteSpecStructsFromDEtoHL
	         $1ceb = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $1cee = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $1cff = Clear_wOam
	         $1d05 = Clear_wOam.loop
	         $1d0a = DisplayATypeHighScoresForLevel
	         $1d15 = DisplayATypeHighScoresForLevel.decA
	         $1d1c = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1d24 = DisplayBTypeHighScoresForLevel
	         $1d2f = DisplayBTypeHighScoresForLevel.decA1
	         $1d36 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1d3b = DisplayBTypeHighScoresForLevel.decA2
	         $1d42 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $1d4a = CopyHighScoreValueToRamBuffer
	         $1d4c = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1d5c = CopyHighScoreValueToRamBuffer.hasTens
	         $1d66 = CopyHighScoreValueToRamBuffer.storeDigits
	         $1d6c = CopyHLtoDEbackwards_3bytes
	         $1d6e = CopyHLtoDEbackwards_Bbytes.loop
	         $1d6e = CopyHLtoDEbackwards_Bbytes
	         $1d75 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1d7d = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1d83 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1d8e = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $1d97 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $1da9 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1db1 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $1db6 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $1dcd = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $1dd7 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $1ddb = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $1df5 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $1e00 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $1e1f = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $1e22 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1e2b = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1e3f = DisplayHighScoresAndNamesForLevel
	         $1e4b = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1e4c = DisplayHighScoresAndNamesForLevel.next6chars
	         $1e4e = DisplayHighScoresAndNamesForLevel.copyName
	         $1e6c = DisplayHighScoresAndNamesForLevel.end
	         $1e71 = DisplayDottedLinesForHighScore
	         $1e7b = DisplayDottedLinesForHighScore.nextRow
	         $1e7e = DisplayDottedLinesForHighScore.nextCol
	         $1e88 = GameState15_EnteringHighScore
	         $1e90 = GameState15_EnteringHighScore.decA
	         $1e96 = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1eb6 = GameState15_EnteringHighScore.setTile
	         $1eb9 = GameState15_EnteringHighScore.afterTimerCheck
	         $1edd = GameState15_EnteringHighScore.done
	         $1ef1 = GameState15_EnteringHighScore.setGameState
	         $1ef4 = GameState15_EnteringHighScore.upHeld
	         $1efc = GameState15_EnteringHighScore.upPressed
	         $1f07 = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1f0d = GameState15_EnteringHighScore.incChar
	         $1f0e = GameState15_EnteringHighScore.setChar
	         $1f15 = GameState15_EnteringHighScore.notUpLastChar
	         $1f1d = GameState15_EnteringHighScore.downHeld
	         $1f25 = GameState15_EnteringHighScore.downPressed
	         $1f30 = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1f37 = GameState15_EnteringHighScore.decChar
	         $1f3a = GameState15_EnteringHighScore.notDownLastChar
	         $1f41 = GameState15_EnteringHighScore.aPressed
	         $1f5c = GameState15_EnteringHighScore.setNextCharLoc
	         $1f63 = GameState15_EnteringHighScore.bPressed
	         $1f73 = StoreAinHLwhenLCDFree
	         $1f74 = StoreBinHLwhenLCDFree
	         $1f74 = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1f7c = GameState0a_InGameInit
	         $1fbe = GameState0a_InGameInit.afterGameTypeCheck
	         $1ff8 = GameState0a_InGameInit.adjLoopA
	         $1ffe = GameState0a_InGameInit.noPalAdjA
	         $200a = GameState0a_InGameInit.segaColors
	         $200d = GameState0a_InGameInit.loadPalettes
	         $2030 = GameState0a_InGameInit.adjLoopB
	         $2036 = GameState0a_InGameInit.noPalAdjB
	         $2042 = GameState0a_InGameInit.segaColorsObj
	         $2045 = GameState0a_InGameInit.loadObjPalettes
	         $2060 = GameState0a_InGameInit.color1A
	         $2073 = GameState0a_InGameInit.color2A
	         $2086 = GameState0a_InGameInit.bType
	         $208d = GameState0a_InGameInit.color1B
	         $20a0 = GameState0a_InGameInit.color2B
	         $20b3 = GameState0a_InGameInit.copy
	         $20d9 = GameState0a_InGameInit.afterHardModeCheck
	         $20f7 = GameState0a_InGameInit.setNumLinesCompleted
	         $2100 = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $210e = GameState0a_InGameInit.afterPieceHiddenCheck
	         $213e = GameState0a_InGameInit.notDemo
	         $2148 = GameState0a_InGameInit.end
	         $2150 = SetNumFramesUntilPiecesMoveDown
	         $2161 = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $2162 = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $216e = SetNumFramesUntilPiecesMoveDown.framesData
	         $2183 = PopulateDemoBTypeScreenWithBlocks
	         $218b = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $218e = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $21a8 = PopulateDemoBTypeScreenWithBlocks.layout
	         $21d0 = PopulateGameScreenWithRandomBlocks
	         $21d1 = PopulateGameScreenWithRandomBlocks.decB
	         $21d7 = PopulateGameScreenWithRandomBlocks.mainLoop
	         $21da = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $21dc = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $21e7 = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $21f3 = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $21f5 = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $2208 = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $2209 = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $2215 = PopulateGameScreenWithRandomBlocks.from2player
	         $222a = PopulateGameScreenWithRandomBlocks.toNextRow
	         $2230 = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $2236 = GameState00_InGameMain
	         $225f = InGameCheckResetAndPause.startNotPressed
	         $225f = InGameCheckResetAndPause
	         $226e = InGameCheckResetAndPause.setPieceVisibility
	         $2275 = InGameCheckResetAndPause.pieceNotHidden
	         $2278 = InGameCheckResetAndPause.start
	         $22aa = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $22b8 = InGameCheckResetAndPause.setNextPieceVisibility
	         $22bb = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $22c5 = InGameCheckResetAndPause.gameUnPaused
	         $22d5 = InGameCheckResetAndPause.is2Player
	         $22f3 = InGame2PlayerCheckUnpaused
	         $230c = InGame2PlayerCheckUnpaused.isPassive
	         $2315 = InGame2PlayerCheckUnpaused.gameUnpaused
	         $232c = InGame2PlayerCheckUnpaused.loop
	         $2334 = InGame2PlayerCheckUnpaused.popHL
	         $2336 = Display2PlayerPauseText
	         $233e = Display2PlayerPauseText.loop
	         $2348 = Display2PlayerPauseText.text
	         $234d = GameState01_GameOverInit
	         $2376 = GameState04_LevelEndedMain
	         $237f = GameState04_LevelEndedMain.aOrStartPressed
	         $2393 = GameState04_LevelEndedMain.setGameState
	         $2396 = GameState05_BTypeLevelFinished
	         $23d2 = GameState05_BTypeLevelFinished.clearScore
	         $23d6 = GameState05_BTypeLevelFinished.fromLevel0
	         $23f4 = DisplayBTypeScoreMultipliersBasedOnLevel
	         $23fb = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $2403 = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $2412 = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $2421 = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $2427 = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $2430 = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $243e = GameState22_DancersInit
	         $246f = GameState22_DancersInit.setNextDancerAnimDetails
	         $2484 = GameState22_DancersInit.numDancersInB
	         $248d = GameState22_DancersInit.loopSetVisible
	         $24a6 = Dancers_AnimationTimers
	         $24b0 = GameState23_sendDancersToOam
	         $24b6 = GameState23_DancersMain
	         $24c6 = GameState23_DancersMain.nextDancer
	         $24df = GameState23_DancersMain.toNextDancer
	         $24fb = GameState23_DancersMain.setGameState
	         $24fe = GameState23_DancersMain.isJumperStanding
	         $2504 = GameState23_DancersMain.isJumperJumping
	         $250a = After4ScoreCategoriesProcessed
	         $254c = ProcessScoreUpdatesAfterBTypeLevelDone
	         $2587 = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $258b = GameState0c_UnusedPreShuttleLiftOff
	         $2594 = GameState0d_GameOverScreenClearing
	         $25ac = GameState0d_GameOverScreenClearing.is1player
	         $25e1 = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $25e3 = GameState0d_GameOverScreenClearing.setGameState
	         $25e6 = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $25f2 = CopyGameScreenInnerText
	         $25f2 = CopyGameScreenInnerText.nextRow
	         $25f5 = CopyGameScreenInnerText.nextCol
	         $2606 = AddOnCompletedLinesScore
	         $2638 = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $263e = AddOnCompletedLinesScore.loop
	         $264c = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $2652 = FillGameScreenBufferWithTileA
	         $265a = FillGameScreenBufferWithTileA.nextRow
	         $265d = FillGameScreenBufferWithTileA.nextCol
	         $2667 = FillGameScreenBuffer2WithPaletteAandSetToVramTransfer
	         $266d = FillGameScreenBuffer2WithPaletteA
	         $2675 = FillGameScreenBuffer2WithPaletteA.nextRow
	         $2678 = FillGameScreenBuffer2WithPaletteA.nextCol
	         $2682 = FillBottom2RowsOfTileMapWithEmptyTile
	         $268c = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $268e = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $2697 = PlayNextPieceLoadNextAndHiddenPiece
	         $26c9 = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $26d8 = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $26e6 = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $26e8 = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $26eb = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $26ec = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $26f9 = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $2707 = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $270a = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $2725 = InGameHandlePieceFalling.holdingDown
	         $2725 = InGameHandlePieceFalling
	         $2737 = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $2750 = InGameHandlePieceFalling.start
	         $2758 = InGameHandlePieceFalling.afterPressedDown
	         $2765 = InGameHandlePieceFalling.sendActivePieceToOam
	         $2769 = InGameHandlePieceFalling.currScoreEqu0
	         $2776 = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $27b4 = InGameHandlePieceFalling.clearTimesHoldingDown
	         $27b7 = InGameHandlePieceFalling.fromNotHoldingDown
	         $27d8 = InGameHandlePieceFalling.skipGameOver
	         $27da = InGameHandlePieceFalling.isAType
	         $27db = InGameHandlePieceFalling.keepAdding
	         $27e2 = InGameHandlePieceFalling.addDropsToScore
	         $27f2 = InGameCheckIfAnyTetrisRowsComplete
	         $2807 = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $280a = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $281f = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $284f = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $285e = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $2883 = InGameCheckIfAnyTetrisRowsComplete.end
	         $288c = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $288f = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $2894 = FlashCompletedTetrisRows
	         $28aa = FlashCompletedTetrisRows.upperOuterLoop
	         $28ba = FlashCompletedTetrisRows.flashRow
	         $28bc = FlashCompletedTetrisRows.flashRowLoop
	         $28c5 = FlashCompletedTetrisRows.incFlashCount
	         $28d3 = FlashCompletedTetrisRows.flashed5times
	         $28de = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $28e2 = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $28ec = FlashCompletedTetrisRows.origTileCopyLoop
	         $28fc = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $2901 = ShiftEntireGameRamBufferDownARow
	         $290e = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $2919 = ShiftEntireGameRamBufferDownARow.nextRow
	         $291c = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $293b = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $293f = ShiftEntireGameRamBufferDownARow2
	         $2955 = ShiftEntireGameRamBufferDownARow2.nextCompletedRow
	         $2960 = ShiftEntireGameRamBufferDownARow2.nextRow
	         $2963 = ShiftEntireGameRamBufferDownARow2.rowShiftCopy
	         $298a = ShiftEntireGameRamBufferDownARow2.clearTopRow
	         $299a = ClearPointersToCompletedTetrisRows
	         $29a0 = ClearPointersToCompletedTetrisRows.loop
	         $29a9 = CopyRamBufferRow17ToVram
	         $29cf = CopyRamBufferRow16ToVram
	         $29f5 = CopyRamBufferRow15ToVram
	         $2a1b = CopyRamBufferRow14ToVram
	         $2a41 = CopyRamBufferRow13ToVram
	         $2a67 = CopyRamBufferRow12ToVram
	         $2a8d = CopyRamBufferRow11ToVram
	         $2abb = CopyRamBufferRow11ToVram.loop
	         $2ac1 = CopyRamBufferRow11ToVram.is2Player
	         $2acf = CopyRamBufferRow10ToVram
	         $2af5 = CopyRamBufferRow9ToVram
	         $2b1b = CopyRamBufferRow8ToVram
	         $2b41 = CopyRamBufferRow7ToVram
	         $2b67 = CopyRamBufferRow6ToVram
	         $2b8d = CopyRamBufferRow5ToVram
	         $2bb3 = CopyRamBufferRow4ToVram
	         $2bd9 = CopyRamBufferRow3ToVram
	         $2c02 = CopyRamBufferRow2ToVram
	         $2c32 = CopyRamBufferRow1ToVram
	         $2c5e = CopyRamBufferRow0ToVram
	         $2c92 = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $2ca8 = CopyRamBufferRow0ToVram.displayLines
	         $2cc7 = CopyRamBufferRow0ToVram.is1playerEnd
	         $2cd1 = CopyRamBufferRow0ToVram.setGameState
	         $2cd4 = CopyRamBufferRow0ToVram.playNextPiece
	         $2cd8 = CopyRamBufferRow0ToVram.is2player
	         $2ce4 = DisplayGameATypeScoreIfInGameAndForced
	         $2cf4 = CheckIfATypeNextLevelReached
	         $2d1f = CheckIfATypeNextLevelReached.lv5
	         $2d2a = CheckIfATypeNextLevelReached.lv10
	         $2d35 = CheckIfATypeNextLevelReached.lv15
	         $2d40 = CheckIfATypeNextLevelReached.lv20
	         $2d4b = CheckIfATypeNextLevelReached.continue
	         $2d54 = CheckIfATypeNextLevelReached.nextDigit
	         $2d6a = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $2d73 = ABisBCDofValInHL
	         $2d78 = ABisBCDofValInHL.loop
	         $2d80 = ABisBCDofValInHL.copyAtoB
	         $2d82 = CopyRamBufferRowToVram
	         $2d84 = CopyRamBufferRowToVram.loop
	         $2d91 = InGameCheckButtonsPressed
	         $2db0 = InGameCheckButtonsPressed.pressedAAnimation0
	         $2db6 = InGameCheckButtonsPressed.pressedB
	         $2dc0 = InGameCheckButtonsPressed.pressedBAnimation3
	         $2dc4 = InGameCheckButtonsPressed.afterRotation
	         $2ddf = InGameCheckButtonsPressed.afterCollisionCheck
	         $2dfd = InGameCheckButtonsPressed.pressedRight
	         $2e10 = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $2e1f = InGameCheckButtonsPressed.notHeldLeft
	         $2e22 = InGameCheckButtonsPressed.notHeldRight
	         $2e34 = InGameCheckButtonsPressed.pressedLeft
	         $2e49 = RetZIfNoCollisionForPiece
	         $2e4e = RetZIfNoCollisionForPiece.nextSprite
	         $2e69 = RetZIfNoCollisionForPiece.empty
	         $2e70 = RetZIfNoCollisionForPiece.fromXis0
	         $2e74 = RetZIfNoCollisionForPiece.notEmpty
	         $2e7b = InGameAddPieceToVram
	         $2e85 = InGameAddPieceToVram.nextSquareOfPiece
	         $2e97 = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $2eb2 = InGameAddPieceToVram.nextState
	         $2ebc = ConvertFromObjectTileToBGTile
	         $2ec8 = ConvertFromObjectTileToBGTile.subForFxValues
	         $2eca = ConvertFromObjectTileToBGTile.getOffset
	         $2ecf = InGameAddPieceToVram1
	         $2ede = InGameAddPieceToVram1.nextSquareOfPiece
	         $2ef0 = InGameAddPieceToVram1.waitUntilVramAndOamFree
	         $2f10 = InGameAddPieceToVram1.nextState
	         $2f1e = PieceTileConversionLookUpTable
	         $2f2a = PieceBGColorLookUpTable
	         $2f31 = ProcessCurrentScoreCategory
	         $2f4f = ProcessCurrentScoreCategory.afterDisplaying10s
	         $2f54 = ProcessCurrentScoreCategory.addCategScore
	         $2f70 = ProcessCurrentScoreCategory.addToTotalScore
	         $2f7e = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $2f91 = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $2f92 = IncScoreCategoryProcessedAfterBTypeDone
	         $2fa9 = ClearScoreCategoryVarsAndTotalScore
	         $2faf = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $2fb8 = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $2fbd = ConvertHexToDec
	         $2fbe = ConvertHexToDec.convertLoop
	         $2fc4 = UpdateClock
	         $2fdb = UpdateClock.doHours
	         $2fee = UpdateClock.loopa
	         $3005 = UpdateClock.doMinutes
	         $3018 = UpdateClock.loopb
	         $3034 = UpdateClock.setSramBank
	         $303a = UpdateClock.updateSIsDay_DuskDawn_Night
	         $3055 = UpdateClock.isDay
	         $305f = UpdateClock.isDuskOrDawn
	         $306b = UpdateClock.isNight
	         $3077 = ColonTile
	         $3087 = IsDMGSwitch
	         $308f = UnusedStoreBCDByteInHLInDestDE
	         $309b = Copy2SpriteSpecsToShadowOam
	         $309d = CopyASpriteSpecsToShadowOam
	         $30ad = Copy1stSpriteSpecToSprite4
	         $30c0 = Copy2ndSpriteSpecToSprite8
	         $30d3 = DisplayBlackColumnFromHLdown
	         $30da = DisplayBlackColumnFromHLdown.loop
	         $30e0 = CopyDEintoHLwhileFFhNotFound
	         $30e0 = CopyDEintoHLwhileFFhNotFound.loop
	         $30e8 = StubInterruptHandler
	         $30e9 = SpriteSpecStruct_LPieceActive
	         $30f1 = SpriteSpecStruct_LPieceNext
	         $30f9 = SpriteSpecStruct_GameMusicAType
	         $3105 = SpriteSpecStruct_ATypeFlashing0
	         $310b = SpriteSpecStruct_BTypeLevelAndHigh
	         $3117 = SpriteSpecStruct_2PlayerHighsFlashing1
	         $3123 = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $3135 = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $3147 = SpriteSpecStruct_MariosFacingAway
	         $3153 = SpriteSpecStruct_LuigisFacingAway
	         $315f = SpriteSpecStruct_Dancers
	         $319b = SpriteSpecStruct_ShuttleAndGas
	         $31ad = SpriteSpecStruct_RocketAndGas
	         $31bf = FillScreen0FromHLdownWithEmptyTile
	         $31c2 = FillScreenFromHLdownWithEmptyTile
	         $31c5 = FillScreenFromHLdownWithEmptyTile.loop
	         $31ce = CopyHLtoDE_BCbytes
	         $31ce = CopyHLtoDE_BCbytes.loop
	         $31d7 = LoadAsciiAndMenuScreenGfx
	         $31f2 = CopyAsciiTileData
	         $31fb = CopyAsciiTileData.loop
	         $3206 = CopyAsciiAndTitleScreenTileData
	         $3225 = UnusedCopyHLtoVram1000hBytes
	         $3228 = CopyHLtoVramBCbytes
	         $322e = Stub_27ea
	         $322f = CopyLayoutToScreen0
	         $3232 = CopyLayoutToHL
	         $3234 = CopyLayoutBrowsToHL
	         $3234 = CopyLayoutBrowsToHL.loopRow
	         $3237 = CopyLayoutBrowsToHL.loopCol
	         $3248 = CopyAttrToScreen0
	         $3250 = CopyAttrToHL
	         $3252 = CopyAttrBrowsToHL.loopRow
	         $3252 = CopyAttrBrowsToHL
	         $3256 = CopyAttrBrowsToHL.loopCol
	         $326d = CopyLayoutAndAttrToScreen0
	         $3270 = CopyLayoutAndAttrToHL
	         $3272 = CopyLayoutAndAttrBrowsToHL
	         $3272 = CopyLayoutAndAttrBrowsToHL.loopRow
	         $3275 = CopyLayoutAndAttrBrowsToHL.loopCol
	         $3292 = CopyPalettesToCram
	         $3294 = CopyPalettesToCram.loadPaletteLoop
	         $329b = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $329b = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $329e = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $32b1 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $32b7 = TurnOffLCD
	         $32bf = TurnOffLCD.waitUntilInVBlank
	         $32d0 = GameInnerScreenLayout_Pause
	         $3320 = GameScreenLayout_ScoreTotals
	         $33d5 = GameInnerScreenLayout_GameOver
	         $340d = GameInnerScreen_TryAgain
	         $343d = PollInput
	         $347a = GetScreen0AddressOfPieceSquare
	         $348d = GetScreen0AddressOfPieceSquare.loop
	         $34a7 = UnusedMovePieceUpAndRight
	         $34af = UnusedMovePieceUpAndRight.deDiv16
	         $34cd = DisplayBCDNum6DigitsIfForced
	         $34d1 = DisplayBCDNum6Digits
	         $34d3 = DisplayBCDNum2CDigits
	         $34d6 = DisplayBCDNum2CDigits.nextByte
	         $34e7 = DisplayBCDNum2CDigits.displayTens
	         $34fd = DisplayBCDNum2CDigits.displayOnes
	         $3506 = DisplayBCDNum2CDigits.tensNot0
	         $350e = DisplayBCDNum2CDigits.onesNot0
	         $3516 = OamDmaFunction
	         $351c = OamDmaFunction.wait
	         $3520 = CopyToShadowOamBasedOnSpriteSpec
	         $3525 = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $3533 = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $3545 = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $354a = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $354c = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $3551 = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $3574 = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $358f = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $3593 = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $3597 = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $35aa = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $35b4 = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $35c9 = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $35d3 = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $35e5 = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $35e7 = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	         $3603 = ConvertFromBgTileToObjectTile
	         $3615 = ConvertFromBgTileToObjectTile.isInGame
	         $361d = ConvertFromBgTileToObjectTile.pastGarbageBlock
	         $3624 = ConvertFromBgTileToObjectTile.pastGarbageBlock2
	         $362b = ConvertFromBgTileToObjectTile.isHorIPieceEnd
	         $362e = InvertPalettes
	         $3635 = !10
	         $3645 = !11
	SECTION: $364f-$3f99 ($094b bytes) ["Sound Engine"]
	         $364f = SquareSoundEffectTable_Init
	         $365f = SquareSoundEffectTable_Update
	         $366f = NoiseSoundEffect_Init
	         $3677 = NoiseSoundEffect_Update
	         $367f = SongsSoundChannelsData
	         $36a1 = Stub
	         $36a2 = UpdateSound
	         $36b7 = UpdateSound.endPath
	         $36c9 = UpdateSound.dontUnset
	         $36de = UpdateSound.done
	         $36f3 = UpdateSound.gameJustPaused
	         $371f = UpdateSound.setAud2RegsToPause1
	         $3722 = UpdateSound.copyIntoAud2Regs
	         $3727 = UpdateSound.setAud2RegsToPause2
	         $372c = UpdateSound.gameJustUnpaused
	         $3732 = UpdateSound.processPausedCounter
	         $374a = Aud2RegVals_Pause1
	         $374e = Aud2RegVals_Pause2
	         $3752 = IsSoundEffect_MovingSelection
	         $3758 = IsSoundEffect_TetrisRowsFell
	         $375e = IsSoundEffect_4LinesCleared
	         $3764 = IsSoundEffect_ReachedNextLevel
	         $376a = Aud1RegValsInit_MovingSelection
	         $376f = Aud1RegValsUpdate_MovingSelection
	         $3774 = Aud1RegValsInit_ConfirmOrLetterTyped
	         $3779 = SquareEffectInit_MovingSelection
	         $3781 = SquareEffectUpdate_MovingSelection
	         $3795 = SquareEffectInit_ConfirmOrLetterTyped
	         $379d = SquareEffectUpdate_Common
	         $37a2 = ClearAud1RegsAndVars
	         $37b6 = Aud1RegVals_4LinesCleared_1
	         $37bb = Aud1RegVals_4LinesCleared_2
	         $37c0 = SquareEffectInit_4LinesCleared
	         $37c6 = SquareEffectUpdate_4LinesCleared
	         $37dd = SquareEffectUpdate_4LinesCleared.finalWav
	         $37e6 = SquareEffectUpdate_4LinesCleared.sound2
	         $37ec = SquareEffectUpdate_4LinesCleared.sound1
	         $37f2 = Aud1RegValsInit_PieceMovedHoriz
	         $37f7 = SquareEffectInit_PieceMovedHoriz
	         $380f = Aud1RegVals_ReachedNextLevel_0and4
	         $3814 = Aud1RegVals_ReachedNextLevel_1
	         $3819 = Aud1RegVals_ReachedNextLevel_2
	         $381e = Aud1RegVals_ReachedNextLevel_3
	         $3823 = SquareEffectInit_ReachedNextLevel
	         $382f = SquareEffectUpdate_ReachedNextLevel
	         $384f = SquareEffectUpdate_ReachedNextLevel.sound1
	         $3854 = SquareEffectUpdate_ReachedNextLevel.sound2
	         $3859 = SquareEffectUpdate_ReachedNextLevel.sound3
	         $385e = SquareEffectUpdate_ReachedNextLevel.sound4
	         $3861 = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $3864 = Aud1RegValsInit_Non4LinesCleared
	         $3869 = Aud1EnvData_Non4LinesCleared
	         $3874 = Aud1FreqLoData_Non4LinesCleared
	         $387e = SquareEffectInit_Non4LinesCleared
	         $3892 = SquareEffectUpdate_Non4LinesCleared
	         $38b0 = SetAud1EnvLowHighToEDB
	         $38bb = Aud1RegValsInit_PieceRotated
	         $38c0 = Aud1EnvData_PieceRotated
	         $38c6 = Aud1FreqLoData_PieceRotated
	         $38cb = SquareEffectInit_PieceRotated
	         $38e3 = SquareEffectUpdate_PieceRotated
	         $3903 = SquareEffectInit_TetrisRowsFell
	         $390f = Aud1RegValsInit_TetrisRowsFell
	         $3914 = Aud4RegValsInit_PieceHitFloor
	         $3918 = Aud4RegValsInit_TetrisRowsFell
	         $391c = Aud4RegValsInit_RocketGas
	         $3920 = Aud4RegValsInit_RocketFire
	         $3924 = Aud4RegValsUpdate_RocketFire_Poly
	         $3948 = Aud4RegValsUpdate_RocketFire_Env
	         $396c = NoiseEffectInit_RocketGas
	         $3974 = NoiseEffectInit_RocketFire
	         $397c = NoiseEffectUpdate_RocketFire
	         $39a3 = NoiseEffectInit_TetrisRowsFell
	         $39ab = NoiseEffectInit_PieceHitFloor
	         $39b3 = NoiseEffectUpdate_Common
	         $39b8 = NoiseEffectUpdate_ClearNoise
	         $39ca = Aud3RegValsInit_GameOver
	         $39cf = WavEffectInit_GameOver
	         $39e6 = WavEffectUpdate_GameOver
	         $39f9 = WavEffectUpdate_GameOver.setAud3Low
	         $3a01 = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $3a0b = UpdateWavEffects
	         $3a26 = Aud3RegValsInit_After4LinesCleared
	         $3a2b = Aud3RegValsUpdate_After4LinesCleared_1
	         $3a30 = Aud3RegValsUpdate_After4LinesCleared_2
	         $3a35 = Aud3RegValsUpdate_After4LinesCleared_3
	         $3a3a = WavEffectInit_After4LinesCleared
	         $3a4f = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $3a52 = WavEffectUpdate_sound1
	         $3a63 = WavEffectUpdate_sound2
	         $3a74 = WavEffectUpdate_sound3
	         $3a85 = WavEffectUpdate_After4LinesCleared
	         $3aa7 = WavEffectUpdate_After4LinesCleared.incLowVal
	         $3aab = WavEffectUpdate_After4LinesCleared.decLowVal
	         $3aad = WavEffectUpdate_After4LinesCleared.setLowVal
	         $3ab1 = ClearWavVarsAndRegs_ResumeMusic
	         $3ad7 = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $3adc = InitWavEffect_pauseOtherChannels
	         $3b01 = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $3b05 = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $3b25 = CopyDefaultValsInHLIntoAud1Regs
	         $3b2c = CopyDefaultValsInHLIntoAud2Regs
	         $3b33 = CopyDefaultValsInHLIntoAud3Regs
	         $3b3a = CopyDefaultValsInHLIntoAud4Regs
	         $3b3f = CopyDefaultValsInHLIntoAudCRegs
	         $3b3f = CopyDefaultValsInHLIntoAudCRegs.loop
	         $3b47 = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $3b4b = HLequAddressForSongData_tableHL_incE
	         $3b5a = IncCounterInDE_retZifHitsThreshold
	         $3b65 = IncCounterInDE_retZifHitsThreshold.done
	         $3b67 = CopyFromHLintoWav3Ram
	         $3b6a = CopyFromHLintoWav3Ram.loop
	         $3b74 = InitSound
	         $3b96 = ResetSoundHwRegs
	         $3bac = UpdateSquareEffects
	         $3bbf = UpdateSquareEffects.noSquareEffectToPlay
	         $3bcb = UpdateSquareEffects.done
	         $3bcc = UpdateNoiseEffects
	         $3bdf = UpdateNoiseEffects.noNoiseEffectToPlay
	         $3beb = UpdateNoiseEffects.done
	         $3bec = MuteSound
	         $3bf0 = InitSong
	         $3c0b = SetSongsAudTermVars
	         $3c13 = SetSongsAudTermVars.nextSong
	         $3c1c = SetSongsAudTermVars.setSongVars
	         $3c34 = SetSongsAudTermRegs
	         $3c5e = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $3c69 = SetSongsAudTermRegs.afterDecidingWavOutput
	         $3c73 = SetSongsAudTermRegs.setAudTermToB
	         $3c74 = SetSongsAudTermRegs.setAudTerm
	         $3c77 = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $3c7b = SetSongsAudTermRegs.use1stOutputValue
	         $3c80 = SetSongsAudTermRegs.notTimeToSwapOutput
	         $3c8d = SongAudTermData
	         $3cd1 = StoreWordInWordInHLintoDE
	         $3cdc = StoreWordInHLIintoDE
	         $3ce2 = SetSongsInitialSoundChannelVars
	         $3d39 = SetSongsInitialSoundChannelVars.loop
	         $3d4c = ProcessSoundByte9dh_SetParams.aud3
	         $3d4c = ProcessSoundByte9dh_SetParams
	         $3d58 = ProcessSoundByte9dh_SetParams.start
	         $3d82 = ProcessSoundByte9dh_SetParams.end
	         $3d88 = IncWordInHL
	         $3d8e = IncWordInHL.store
	         $3d94 = IncWordTwiceInHL
	         $3d9d = GetABInWordStoredInHL
	         $3da4 = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $3da4 = UpdateMusic
	         $3da7 = UpdateMusic.processCurrSoundByteEnvelope
	         $3dbe = UpdateMusic.passedWaveEnvelope
	         $3dd3 = UpdateMusic.toNextSndChannelFromStructIdx2
	         $3dd8 = UpdateMusic.setNextAddrInCurrSndChannelData
	         $3ddf = UpdateMusic.afterSpecialSoundByteAddress
	         $3df3 = UpdateMusic.sndChannelAddrEquFFFFh
	         $3e0a = UpdateMusic.stopCurrSong
	         $3e13 = UpdateMusic.start
	         $3e21 = UpdateMusic.nextSoundChannel
	         $3e2b = UpdateMusic.afterSettingSoundDataAddress
	         $3e2d = UpdateMusic.processNextSoundByte
	         $3e5a = UpdateMusic.contSoundByte
	         $3e86 = UpdateMusic.soundByte01
	         $3e8b = UpdateMusic.getNoiseDataToWrite
	         $3e93 = UpdateMusic.noiseLoop
	         $3ea2 = UpdateMusic.getNonNoiseDataToWrite
	         $3ebc = UpdateMusic.contWave
	         $3ec7 = UpdateMusic.startWritingToSq2
	         $3ecb = UpdateMusic.startWritingToSq1
	         $3ed0 = UpdateMusic.afterChoosingSndChannelBaseReg
	         $3ed9 = UpdateMusic.after_hasWavRam
	         $3edc = UpdateMusic.fromWav
	         $3ee5 = UpdateMusic.afterDisabledEnvelopeCheck
	         $3f03 = UpdateMusic.skippingHwRegWrites
	         $3f08 = UpdateMusic.toNextSndChannel
	         $3f19 = UpdateMusic.done
	         $3f26 = UpdateMusic.hasWavRam
	         $3f2d = GetEinDEplusBdiv2
	         $3f36 = WriteToFrequencyRegsAdjustedWithEnvelope
	         $3f58 = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $3f5a = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $3f70 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $3f75 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $3f81 = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $3f8e = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $3f90 = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $3f91 = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $3f9a-$3fef ($0056 bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $0089 bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7f27 ($384d bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Gfx_MenuScreens.end
	         $56db = Layout_ATypeInGame
	         $5843 = Layout_BTypeInGame
	         $59ab = Gfx_Ascii
	         $5ae3 = Gfx_Ascii.end
	         $5ae3 = Gfx_TitleScreen
	         $6293 = Layout_Copyright
	         $6293 = Gfx_TitleScreen.end
	         $63fb = Layout_TitleScreen
	         $6653 = Layout_GameMusicTypeScreen
	         $67bb = Layout_ATypeSelectionScreen
	         $6923 = Layout_BTypeSelectionScreen
	         $6a8b = GameScreenLayout_Dancers
	         $6b40 = Layout_RocketScene
	         $6b90 = Layout_MarioLuigiScreen
	         $6cf8 = Layout_2PlayerInGame
	         $6e60 = Layout_MarioScore
	         $6eb0 = Layout_BricksAndLuigiScore
	         $6f28 = Gfx_RocketScene
	         $7f28 = Gfx_RocketScene.end
	EMPTY: $7f28-$7fff ($00d8 bytes)
	TOTAL EMPTY: $00d8 bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$55c6 ($03c7 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $5458 = Layout_RocketScene_Sunrise_Sunset
	         $55c0 = PieceColorLookUpTable
	         $55c0 = Layout_RocketScene_Sunrise_Sunset.end
	         $55c7 = PieceColorLookUpTable.end
	EMPTY: $55c7-$7fff ($2a39 bytes)
	TOTAL EMPTY: $2a3e bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4674 ($0475 bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $4458 = Layout_RocketScene_Night
	         $45c0 = GameScreenLayout_Dancers_Night
	         $4675 = GameScreenLayout_Dancers_Night.end
	SECTION: $4675-$6845 ($21d1 bytes) ["Palettes and Attribute Maps"]
	         $4675 = Palettes_TitleScreen
	         $47f5 = Palettes_InGameGuideline
	         $4975 = Palettes_InGameSega
	         $4af5 = Palettes_BoardBackgroundStart
	         $4c75 = Palettes_BoardBackgroundTransition
	         $4df5 = Attributes_TitleScreen
	         $52a5 = Attributes_GameMusicTypeScreen
	         $5575 = Attributes_ATypeSelectionScreen
	         $5845 = Attributes_BTypeSelectionScreen
	         $5b15 = Attributes_ATypeInGame
	         $5de5 = Attributes_BTypeInGame
	         $60b5 = Layout_ATypePaused
	         $6385 = Layout_BTypePaused
	         $6655 = Layout_DMG
	         $6655 = Layout_BTypePaused.end
	         $67bd = IsDMG
	         $67d7 = BoardBackgroundColorTransition
	         $67d7 = IsDMG.end
	         $67eb = BoardBackgroundColorTransition.skipTimerSet
	         $680c = BoardBackgroundColorTransition.updateColor
	         $6829 = BoardBackgroundColorTransition.doneWaiting
	         $683b = BoardBackgroundColorTransition.doneTransition
	EMPTY: $6846-$7fff ($17ba bytes)
	TOTAL EMPTY: $180a bytes

ROMX bank #4:
	SECTION: $4000 (0 bytes) ["Rosy Retrospection Data"]
	EMPTY

SRAM bank #0:
	SECTION: $a000-$ab73 ($0b74 bytes) ["SRAM"]
	         $a000 = sGameScreenBufferAttr
	         $a400 = sCurrMonth
	         $a400 = sGameScreenBufferAttr.end
	         $a401 = sCurrYear
	         $a403 = sIsDay_DuskDawn_Night
	         $a403 = sCurrYear.end
	         $a404 = sIsRocketScene
	         $a404 = sIsDay_DuskDawn_Night.end
	         $a405 = sOptionLights
	         $a405 = sIsRocketScene.end
	         $a406 = sOptionColors
	         $a407 = sOptionDayNightCycle
	         $a408 = sOptionDayNightCycle.end
	         $a408 = sBTypeHighScores
	         $aa5c = sATypeHighScores
	         $ab6a = sATypeHighScores.end
	         $ab6a = sSramBufferAddressesForCompletedRows
	         $ab73 = sSramBufferAddressesForCompletedRows.end
	         $ab73 = sIsSRAMInitialized
	         $ab74 = sIsSRAMInitialized.end
	EMPTY: $ab74-$bfff ($148c bytes)
	TOTAL EMPTY: $148c bytes

WRAM0 bank #0:
	SECTION: $c000-$d89d ($189e bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wd762
	         $d80e = wCurrSoundChannelBeingProcessed
	         $d80f = wOrigSoundEffectIdx
	         $d80f = wUnusedShadowAudLen
	         $d810 = wdf72
	         $d813 = wAudTermCounterUntilChangingOutput
	         $d814 = wAudTermCounterValueToHitToChangeOutput
	         $d815 = wAudTermSelectedOutputVal
	         $d816 = wAudTermSongsSpec
	         $d817 = wAudTermOutputValue1
	         $d818 = wAudTermOutputValue2
	         $d819 = wdf7b
	         $d81c = wGamePausedSoundTimer
	         $d81d = wGamePausedActivity
	         $d81e = wUnused_df80
	         $d81f = wSongTempoAddr
	         $d821 = wdf83
	         $d82e = wAudStructs
	         $d82e = wAud1Struct
	         $d83e = wAud2Struct
	         $d84e = wAud3Struct
	         $d85e = wAud4Struct
	         $d86e = wdfd0
	         $d87e = wSquareSoundToPlay
	         $d87f = wSquareEffectBeingPlayed
	         $d880 = wSquareEffectFrameCounter
	         $d881 = wSquareEffectFrameCounterThreshold
	         $d882 = wSquareEffectMiscCounter
	         $d883 = wdfe5
	         $d886 = wSongToStart
	         $d887 = wSongBeingPlayed
	         $d888 = wdfea
	         $d88e = wWavSoundToPlay
	         $d88f = wWavEffectBeingPlayed
	         $d890 = wWavEffectFrameCounter
	         $d891 = wWavEffectFrameCounterThreshold
	         $d892 = wWavEffectMiscCounter
	         $d893 = wWavEffectRandomVal
	         $d893 = wWavEffectShouldIncOrDec
	         $d894 = wWavEffectCurrLoVal
	         $d895 = wdff7
	         $d896 = wNoiseSoundToPlay
	         $d897 = wNoiseEffectBeingPlayed
	         $d898 = wNoiseEffectFrameCounter
	         $d899 = wNoiseEffectFrameCounterThreshold
	         $d89a = wNoiseEffectMiscCounter
	         $d89b = wBoardBackgroundColorTransitionState
	         $d89c = wTransitionTimer
	EMPTY: $d89e-$dfff ($0762 bytes)
	TOTAL EMPTY: $0762 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 16247 bytes used / 137 free
	ROMX: 31968 bytes used / 33568 free in 4 banks
	SRAM: 2932 bytes used / 5260 free in 1 bank
	WRAM0: 6302 bytes used / 1890 free
	HRAM: 127 bytes used / 0 free
