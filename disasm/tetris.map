ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$360b ($34bc bytes) ["Begin"]
	         $0150 = Begin
	         $0167 = UnusedGetScreenTileInHLWhileOamFree
	         $016a = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $0171 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $017a = AddScoreValueDEontoBaseScoreHL
	         $0192 = VBlankInterruptHandler
	         $01ad = VBlankInterruptHandler.afterMasterTransfer
	         $021a = VBlankInterruptHandler.end
	         $0226 = Begin2
	         $0233 = Begin2.clear2ndWram
	         $023a = Reset
	         $0252 = Reset.waitUntilVBlank
	         $0279 = Reset.initializeSram
	         $0288 = Reset.clearSram
	         $0294 = Reset.sramInitialized
	         $029a = Reset.clearLastPage
	         $02a5 = Reset.clear1stWram
	         $02b4 = Reset.clearVram
	         $02c0 = Reset.clearOam
	         $02c9 = Reset.clearHram
	         $02d4 = Reset.copyOamDmaFunc
	         $02fe = MainLoop
	         $0315 = MainLoop.nextTimer
	         $0321 = MainLoop.toNextTimer
	         $032e = MainLoop.waitUntilVBlankIntDone
	         $0339 = ProcessGameState
	         $03aa = GameState24_CopyrightDisplay
	         $03dd = GameState24_CopyrightDisplay.copyLoop
	         $03f2 = GameState25_CopyrightWaiting
	         $0409 = GameState35_CopyrightCanContinue
	         $0417 = GameState35_CopyrightCanContinue.setNewState
	         $041c = GameState06_TitleScreenInit
	         $0441 = GameState06_TitleScreenInit.clearScreenBuffer
	         $045c = GameState06_TitleScreenInit.displayBlackRow
	         $0474 = GameState06_TitleScreenInit.sunriseOrSunset
	         $0479 = GameState06_TitleScreenInit.night
	         $047c = GameState06_TitleScreenInit.copy
	         $04c4 = PlayDemo
	         $0504 = PlayDemo.setDemoPlayed
	         $051e = UnusedSetRecordingDemo
	         $0523 = GameState07_TitleScreenMain
	         $0532 = GameState07_TitleScreenMain.afterTimerCheck
	         $054e = GameState07_TitleScreenMain.checkButtonsPressed
	         $0587 = !0
	         $058b = GameState07_TitleScreenMain.scrollLoop
	         $0592 = !1
	         $05a1 = GameState07_TitleScreenMain.playerChecks
	         $05b8 = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $05c2 = GameState07_TitleScreenMain.setGameStateTo2ah
	         $05c4 = GameState07_TitleScreenMain.setGameState
	         $05d2 = GameState07_TitleScreenMain.is1Player
	         $05db = GameState07_TitleScreenMain.afterUpCheck
	         $05de = GameState07_TitleScreenMain.flipNumPlayersOption
	         $05e0 = GameState07_TitleScreenMain.setNumPlayersOpt
	         $05f8 = !2
	         $0605 = !3
	         $060c = GameState07_TitleScreenMain.setCursorX
	         $0610 = GameState07_TitleScreenMain.pressedRight
	         $0616 = GameState07_TitleScreenMain.pressedLeft
	         $061a = GameState07_TitleScreenMain.pressedDown
	         $0623 = GameState07_TitleScreenMain.pressedUp
	         $0626 = GameState07_TitleScreenMain.multiplayerInvalid
	         $0629 = GameState07_TitleScreenMain.optionMenu
	         $063e = !4
	         $0646 = !5
	         $064e = !6
	         $0650 = GameState07_TitleScreenMain.setCursorY
	         $0661 = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $0676 = GameState07_TitleScreenMain.updateClock
	         $068c = GameState07_TitleScreenMain.loopa
	         $06ae = GameState07_TitleScreenMain.loopb
	         $06bf = GameState07_TitleScreenMain.updateToggledOptions
	         $06c2 = GameState07_TitleScreenMain.updateLoop
	         $06db = GameState07_TitleScreenMain.pressedDownOptions
	         $06e4 = GameState07_TitleScreenMain.pressedUpOptions
	         $06ee = GameState07_TitleScreenMain.pressedBOptions
	         $06ee = GameState07_TitleScreenMain.scrollLoopBack
	         $06f5 = !7
	         $0704 = GameState07_TitleScreenMain.doneScrolling
	         $0715 = GameState07_TitleScreenMain.pressedAOptions
	         $0731 = GameState07_TitleScreenMain.setTime
	         $0739 = GameState07_TitleScreenMain.hours
	         $077a = GameState07_TitleScreenMain.decreaseHours
	         $0782 = GameState07_TitleScreenMain.updateDecH
	         $0798 = GameState07_TitleScreenMain.increaseHours
	         $07a0 = GameState07_TitleScreenMain.updateIncH
	         $07b6 = GameState07_TitleScreenMain.minutes
	         $07ff = GameState07_TitleScreenMain.decreaseMinutes
	         $0807 = GameState07_TitleScreenMain.updateDecM
	         $0825 = GameState07_TitleScreenMain.increaseMinutes
	         $082d = GameState07_TitleScreenMain.updateIncM
	         $084b = GameState07_TitleScreenMain.exit
	         $0859 = SeparateTens
	         $085b = SeparateTens.loop
	         $0863 = ChangeToggleTile
	         $086c = !8
	         $0872 = !9
	         $087c = WaitVRAM
	         $087d = WaitVRAM.loop
	         $0885 = DemoSendPingsAndEndAfterAllStepsDone
	         $08a6 = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $08b3 = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $08bb = DemoPollInput
	         $08d3 = DemoPollInput.mainBit
	         $08ef = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $08f2 = DemoPollInput.end
	         $08fb = UnusedClearDemoButtonsHeld
	         $0901 = DemoRecordInput
	         $092b = DemoRecordInput.incFrames
	         $0931 = DemoRestorePlayerButtonsHeld
	         $093e = GameState2a_passive
	         $0945 = GameState2a_2PlayerGameMusicTypeInit
	         $094f = GameState2a_2PlayerGameMusicTypeInit.cont
	         $0975 = GameState2b_2PlayerGameMusicTypeMain
	         $0991 = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $099e = GameState2b_2PlayerGameMusicTypeMain.cont
	         $09c2 = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $09db = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $09e2 = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $09ea = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $09ee = GameState16_passive
	         $09f5 = GameState16_MarioLuigiScreenInit
	         $0a0d = GameState16_MarioLuigiScreenInit.loop
	         $0a14 = GameState16_MarioLuigiScreenInit.cont
	         $0a4b = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $0a88 = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $0aa8 = CopyDEtoHL_Bbytes
	         $0aa8 = CopyDEtoHL_Bbytes.loop
	         $0aaf = GameState17_MarioLuigiScreenMain
	         $0ac6 = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $0acd = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0ad8 = GameState17_MarioLuigiScreenMain.isMaster
	         $0ae2 = GameState17_MarioLuigiScreenMain.notPressedStart
	         $0aed = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $0af0 = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $0b0d = GameState17_MarioLuigiScreenMain.aGameFinished
	         $0b25 = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $0b2d = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $0b2f = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $0b37 = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $0b40 = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $0b59 = GameState17_MarioLuigiScreenMain.pressedRight
	         $0b5e = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0b64 = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $0b6b = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0b71 = GameState17_MarioLuigiScreenMain.pressedUp
	         $0b79 = Player1HighCoords
	         $0b85 = Player2HighCoords
	         $0b91 = Set2PlayerHighCoords
	         $0ba8 = GameState18_2PlayerInGameInit
	         $0bb0 = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $0bff = GameState18_2PlayerInGameInit.adjLoopA
	         $0c05 = GameState18_2PlayerInGameInit.noPalAdjA
	         $0c22 = GameState18_2PlayerInGameInit.adjLoopB
	         $0c28 = GameState18_2PlayerInGameInit.noPalAdjB
	         $0c7c = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $0c9c = GameState18_2PlayerInGameInit.luigiFace
	         $0cac = GameState18_2PlayerInGameInit.marioFace
	         $0cbc = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0cca = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0cdb = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0cee = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0cf0 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0cfd = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0d15 = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0d20 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0d22 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0d3c = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0d45 = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0d4c = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0d5d = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0d6d = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0d7a = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0d82 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0d93 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0d9e = GameState19_commonEnd
	         $0dbc = GameState19_commonEnd.afterPassiveCheck
	         $0dce = GameState19_passive
	         $0dd8 = GameState19_passive.toDecB
	         $0dde = GameState19_passive.waitUntilMasterPresent
	         $0dec = GameState19_passive.waitUntilPingToMasterHandled
	         $0dfc = GameState19_passive.nextRow
	         $0dfe = GameState19_passive.nextCol
	         $0e07 = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0e16 = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0e24 = GameState19_passive.waitUntilTransferFinished
	         $0e34 = GameState19_passive.loadNextPiece
	         $0e3d = GameState19_passive.waitUntilTransferFinished2
	         $0e48 = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0e56 = GameState19_passive.waitUntilTransferFinished3
	         $0e64 = LoadBottomRowWithBlocks
	         $0e6b = LoadBottomRowWithBlocks.nextCol
	         $0e70 = SerialTransferWaitFunc
	         $0e73 = SerialTransferWaitFunc.loop
	         $0e79 = ShuffleHiddenPieces2Player
	         $0e82 = ShuffleHiddenPieces2Player.nextRandomVal
	         $0e85 = ShuffleHiddenPieces2Player.loop1chTo0
	         $0e86 = ShuffleHiddenPieces2Player.toDecB
	         $0e93 = ShuffleHiddenPieces2Player.afterBEqu0
	         $0ea1 = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0eaa = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0ec9 = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0eda = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0ee2 = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0ef4 = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0ef9 = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0f02 = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0f09 = GameState1a_2PlayerInGameMain
	         $0f4e = GameState1a_2PlayerInGameMain.notYetFinished
	         $0f5e = GameState1a_2PlayerInGameMain.afterLevelDone
	         $0f6f = GameState1a_2PlayerInGameMain.end
	         $0f76 = CheckAlmostLosingStatus
	         $0f80 = CheckAlmostLosingStatus.nextRow
	         $0f83 = CheckAlmostLosingStatus.nextCol
	         $0f90 = CheckAlmostLosingStatus.afterLoop
	         $0fa2 = CheckAlmostLosingStatus.nearTop
	         $0fb1 = MasterPausedSerialByteRead
	         $0fcb = InGame2PlayerProcessSerialByte
	         $0ff7 = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $0ff9 = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $1000 = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $1002 = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $1009 = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $1015 = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $1028 = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $102b = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $103b = InGame2PlayerProcessSerialByte.noLineMarkings
	         $103f = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $1057 = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $105d = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $1067 = CheckIfOtherPlayerCleared2PlusLines
	         $1073 = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $107d = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $1085 = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $108e = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $1090 = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $10a8 = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $10ad = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $10c6 = GameState1b_2PlayerGameEnd
	         $10de = GameState1b_2PlayerGameEnd.tie
	         $10e4 = GameState1b_2PlayerGameEnd.notLost
	         $10ee = GameState1b_2PlayerGameEnd.cont
	         $1102 = GameState1b_2PlayerGameEnd.setGameState
	         $110d = GameState1d_2PlayerWinnerInit
	         $111b = GameState1d_2PlayerWinnerInit.cont
	         $112a = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $1140 = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $1159 = WinnerMainIsMaster
	         $1166 = WinnerMainIsMaster.notWonAll5
	         $116c = WinnerMainIsMaster.toNextState
	         $1174 = GameState20_2PlayerWinnerMain
	         $1188 = GameState20_2PlayerWinnerMain.end
	         $1191 = GoPastWinnerGameStates
	         $1198 = ProcessWinnerMainTimer
	         $11c0 = ProcessWinnerMainTimer.afterTimerCheck
	         $11de = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $11ea = ProcessWinnerMainTimer.hideBabySprite
	         $11ee = ProcessWinnerMainTimer.end
	         $11fe = GameState1e_2PlayerLoserInit
	         $120c = GameState1e_2PlayerLoserInit.cont
	         $121b = GameState1e_2PlayerLoserInit.loadSadSprites
	         $1231 = GameState1e_2PlayerLoserInit.copySadSprites
	         $124a = LoserMainIsMaster
	         $1257 = LoserMainIsMaster.notLost5
	         $125d = LoserMainIsMaster.toNextState
	         $1265 = GameState21_2PlayerLoserMain
	         $1279 = GameState21_2PlayerLoserMain.end
	         $1282 = GoPastLoserGameStates
	         $1289 = ProcessLoserMainTimer
	         $12aa = ProcessLoserMainTimer.afterTimerCheck
	         $12ce = ProcessLoserMainTimer.turnAdultToBigGas
	         $12de = ProcessLoserMainTimer.hideAdultSprite
	         $12e2 = ProcessLoserMainTimer.end
	         $12f2 = DisplayTextPushStart
	         $130e = DisplayTextPushStart.loop
	         $1314 = DisplayTextPushStart.done
	         $1317 = DisplayTextPushStart.sprites
	         $133b = ClearPushStartText
	         $1344 = ClearPushStartText.loop
	         $134a = LoadWinnerLoserScreen
	         $1399 = LoadWinnerLoserScreen.afterBGdisplay
	         $13a1 = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $13bb = LoadWinnerLoserScreen.drawWinnerText
	         $13c0 = LoadWinnerLoserScreen.afterWinningText
	         $13cb = LoadWinnerLoserScreen.drawFaces
	         $13ef = LoadWinnerLoserScreen.checkLosingGames
	         $1409 = LoadWinnerLoserScreen.drawLoserText
	         $140e = LoadWinnerLoserScreen.afterLosingText
	         $1419 = LoadWinnerLoserScreen.drawFaces2
	         $1432 = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $1442 = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $144a = DrawCfaces
	         $144a = DrawCfaces.nextFace
	         $1452 = DrawCfaces.nextRow
	         $1465 = ProcessDeuceAdvantageLogic
	         $1483 = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $148c = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $1490 = ProcessDeuceAdvantageLogic.won4
	         $1492 = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $1495 = ProcessDeuceAdvantageLogic.clearAdvantages
	         $149b = ProcessDeuceAdvantageLogic.wasDeuce
	         $14a2 = ProcessDeuceAdvantageLogic.clearDeuce
	         $14a6 = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $14aa = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $14b1 = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $14b8 = CopyAndUnderlineTextDEtoHL_Bbytes
	         $14ba = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $14c8 = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $14cd = TextDeuce
	         $14d3 = TextMarioWins
	         $14de = TextLuigiWins
	         $14e9 = TextAdvantage
	         $14f2 = GameState1f_Post2PlayerResults
	         $151a = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $151f = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $1538 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $153a = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $1540 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $1547 = GameState26_ShuttleSceneInit
	         $1597 = DisplayRocketScene
	         $15d9 = DisplayRocketScene.sunriseOrSunset
	         $15de = DisplayRocketScene.night
	         $15e1 = DisplayRocketScene.copy
	         $15fb = GameState27_ShuttleSceneShowClouds
	         $1611 = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $161a = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $1631 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $163a = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $1659 = GameState02_ShuttleSceneLiftoff
	         $168c = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $1690 = GameState03_ShuttleSceneShootFire
	         $16b2 = GameState03_ShuttleSceneShootFire.checkTimer2
	         $16c2 = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $16c8 = GameState2c_ShuttleSceneShowCongratulations
	         $170a = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $171a = GameState2d_CongratsWaitingBeforeBTypeScore
	         $171a = GameState2c_ShuttleSceneShowCongratulations.end
	         $1739 = GameState34_PreRocketSceneWait
	         $1742 = GameState2e_RocketSceneInit
	         $1774 = GameState2f_RocketSceneShowClouds
	         $178a = GameState30_PoweringUp
	         $1793 = GameState30_PoweringUp.liftingOff
	         $17a1 = GameState31_RocketSceneLiftOff
	         $17d4 = GameState31_RocketSceneLiftOff.toggleVisibility
	         $17d8 = GameState32_RocketSceneShootFire
	         $17f2 = GameState32_RocketSceneShootFire.checkTimer2
	         $1802 = GameState32_RocketSceneShootFire.copySpecsToOam
	         $1808 = GameState33_RocketSceneEnd
	         $1826 = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $1838 = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $1847 = ShuttleMetalStructureLeft
	         $184e = ShuttleMetalStructureRight
	         $1855 = RocketMetalStructureLeft
	         $185c = RocketMetalStructureRight
	         $1863 = CopyDEintoHLsColumn_Bbytes
	         $1863 = CopyDEintoHLsColumn_Bbytes.loop
	         $1870 = GameState08_GameMusicTypeInit
	         $187b = GameMusicTypeInitWithoutDisablingSerialRegs
	         $18b8 = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $18c7 = Stub_148c
	         $18c8 = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $18cd = SetSpriteSpecCoordsForMusicType
	         $18e3 = SetSpriteSpecCoordsForMusicType.coords
	         $18eb = GameState0f_MusicTypeMain
	         $1903 = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $191b = GameState0f_MusicTypeMain.setMusicType
	         $1922 = GameState0f_MusicTypeMain.copyToShadowOam
	         $1926 = GameState0f_MusicTypeMain.pressedUp
	         $192e = GameState0f_MusicTypeMain.pressedRight
	         $1939 = GameState0f_MusicTypeMain.pressedLeft
	         $1944 = GameState0f_MusicTypeMain.pressedB
	         $194d = GameState0f_MusicTypeMain.not2player
	         $1952 = PlaySongBasedOnMusicTypeChosen
	         $195c = PlaySongBasedOnMusicTypeChosen.playSong
	         $1960 = GameState0e_GameTypeMain
	         $198a = GameState0e_GameTypeMain.pressedRight
	         $1992 = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $199d = GameState0e_GameTypeMain.setSpecIdx
	         $199e = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $19a2 = GameState0e_GameTypeMain.pressedStart
	         $19b1 = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $19b6 = GameState0e_GameTypeMain.pressedA
	         $19ba = GameState0e_GameTypeMain.pressedB
	         $19bd = GameState10_ATypeSelectionInit
	         $1a15 = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $1a17 = GameState10_ATypeSelectionInit.setGameState
	         $1a1a = GameState11_ATypeSelectionMain
	         $1a4c = GameState11_ATypeSelectionMain.pressedRight
	         $1a51 = GameState11_ATypeSelectionMain.setNewLevel
	         $1a5e = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $1a62 = GameState11_ATypeSelectionMain.pressedLeft
	         $1a68 = GameState11_ATypeSelectionMain.pressedUp
	         $1a70 = ATypeLevelsCoords
	         $1a84 = GameState12_BTypeSelectionInit
	         $1ae4 = GameState12_BTypeSelectionInit.setEnterHiScore
	         $1ae9 = GameState13_setGameStateMakeSpriteVisible
	         $1aee = GameState13_BTypeSelectionMain
	         $1b22 = GameState13_BTypeSelectionMain.pressedRight
	         $1b27 = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $1b34 = GameState13_BTypeSelectionMain.sendToOam
	         $1b38 = GameState13_BTypeSelectionMain.pressedLeft
	         $1b3e = GameState13_BTypeSelectionMain.pressedUp
	         $1b46 = BTypeLevelsCoords
	         $1b5a = GameState14_setGameStateMakeSpriteVisible
	         $1b5f = GameState14_BTypeHighMain
	         $1b91 = GameState14_BTypeHighMain.pressedRight
	         $1b96 = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1ba3 = GameState14_BTypeHighMain.sendToOam
	         $1ba7 = GameState14_BTypeHighMain.pressedLeft
	         $1bad = GameState14_BTypeHighMain.pressedUp
	         $1bb5 = BTypeHighsCoords
	         $1bc1 = UnusedNop_174d
	         $1bc2 = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1bc9 = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1bda = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $1bea = CopyCSpriteSpecStructsFromDEtoHL
	         $1bea = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $1bed = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $1bfe = Clear_wOam
	         $1c04 = Clear_wOam.loop
	         $1c09 = DisplayATypeHighScoresForLevel
	         $1c14 = DisplayATypeHighScoresForLevel.decA
	         $1c1b = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1c23 = DisplayBTypeHighScoresForLevel
	         $1c2e = DisplayBTypeHighScoresForLevel.decA1
	         $1c35 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1c3a = DisplayBTypeHighScoresForLevel.decA2
	         $1c41 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $1c49 = CopyHighScoreValueToRamBuffer
	         $1c4b = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1c5b = CopyHighScoreValueToRamBuffer.hasTens
	         $1c65 = CopyHighScoreValueToRamBuffer.storeDigits
	         $1c6b = CopyHLtoDEbackwards_3bytes
	         $1c6d = CopyHLtoDEbackwards_Bbytes.loop
	         $1c6d = CopyHLtoDEbackwards_Bbytes
	         $1c74 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1c7c = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1c82 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1c8d = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $1c96 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $1ca8 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1cb0 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $1cb5 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $1ccc = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $1cd6 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $1cda = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $1cf4 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $1cff = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $1d1e = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $1d21 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1d2a = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1d3e = DisplayHighScoresAndNamesForLevel
	         $1d4a = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1d4b = DisplayHighScoresAndNamesForLevel.next6chars
	         $1d4d = DisplayHighScoresAndNamesForLevel.copyName
	         $1d6b = DisplayHighScoresAndNamesForLevel.end
	         $1d70 = DisplayDottedLinesForHighScore
	         $1d7a = DisplayDottedLinesForHighScore.nextRow
	         $1d7d = DisplayDottedLinesForHighScore.nextCol
	         $1d87 = GameState15_EnteringHighScore
	         $1d8f = GameState15_EnteringHighScore.decA
	         $1d95 = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1db5 = GameState15_EnteringHighScore.setTile
	         $1db8 = GameState15_EnteringHighScore.afterTimerCheck
	         $1ddc = GameState15_EnteringHighScore.done
	         $1df0 = GameState15_EnteringHighScore.setGameState
	         $1df3 = GameState15_EnteringHighScore.upHeld
	         $1dfb = GameState15_EnteringHighScore.upPressed
	         $1e06 = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1e0c = GameState15_EnteringHighScore.incChar
	         $1e0d = GameState15_EnteringHighScore.setChar
	         $1e14 = GameState15_EnteringHighScore.notUpLastChar
	         $1e1c = GameState15_EnteringHighScore.downHeld
	         $1e24 = GameState15_EnteringHighScore.downPressed
	         $1e2f = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1e36 = GameState15_EnteringHighScore.decChar
	         $1e39 = GameState15_EnteringHighScore.notDownLastChar
	         $1e40 = GameState15_EnteringHighScore.aPressed
	         $1e5b = GameState15_EnteringHighScore.setNextCharLoc
	         $1e62 = GameState15_EnteringHighScore.bPressed
	         $1e72 = StoreAinHLwhenLCDFree
	         $1e73 = StoreBinHLwhenLCDFree
	         $1e73 = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1e7b = GameState0a_InGameInit
	         $1ebd = GameState0a_InGameInit.afterGameTypeCheck
	         $1eee = GameState0a_InGameInit.segaColors
	         $1ef1 = GameState0a_InGameInit.loadPalettes
	         $1f06 = GameState0a_InGameInit.color1A
	         $1f19 = GameState0a_InGameInit.color2A
	         $1f2c = GameState0a_InGameInit.bType
	         $1f33 = GameState0a_InGameInit.color1B
	         $1f46 = GameState0a_InGameInit.color2B
	         $1f59 = GameState0a_InGameInit.copy
	         $1f7f = GameState0a_InGameInit.afterHardModeCheck
	         $1f9d = GameState0a_InGameInit.setNumLinesCompleted
	         $1fa6 = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $1fb4 = GameState0a_InGameInit.afterPieceHiddenCheck
	         $1fe4 = GameState0a_InGameInit.notDemo
	         $1fee = GameState0a_InGameInit.end
	         $1ff6 = SetNumFramesUntilPiecesMoveDown
	         $2007 = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $2008 = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $2014 = SetNumFramesUntilPiecesMoveDown.framesData
	         $2029 = PopulateDemoBTypeScreenWithBlocks
	         $2031 = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $2034 = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $204e = PopulateDemoBTypeScreenWithBlocks.layout
	         $2076 = PopulateGameScreenWithRandomBlocks
	         $2077 = PopulateGameScreenWithRandomBlocks.decB
	         $207d = PopulateGameScreenWithRandomBlocks.mainLoop
	         $2080 = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $2082 = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $208d = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $2099 = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $209b = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $20ae = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $20af = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $20bb = PopulateGameScreenWithRandomBlocks.from2player
	         $20d0 = PopulateGameScreenWithRandomBlocks.toNextRow
	         $20d6 = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $20dc = GameState00_InGameMain
	         $2105 = InGameCheckResetAndPause.startNotPressed
	         $2105 = InGameCheckResetAndPause
	         $2114 = InGameCheckResetAndPause.setPieceVisibility
	         $211b = InGameCheckResetAndPause.pieceNotHidden
	         $211e = InGameCheckResetAndPause.start
	         $2150 = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $215e = InGameCheckResetAndPause.setNextPieceVisibility
	         $2161 = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $216b = InGameCheckResetAndPause.gameUnPaused
	         $217b = InGameCheckResetAndPause.is2Player
	         $2199 = InGame2PlayerCheckUnpaused
	         $21b2 = InGame2PlayerCheckUnpaused.isPassive
	         $21bb = InGame2PlayerCheckUnpaused.gameUnpaused
	         $21d2 = InGame2PlayerCheckUnpaused.loop
	         $21da = InGame2PlayerCheckUnpaused.popHL
	         $21dc = Display2PlayerPauseText
	         $21e4 = Display2PlayerPauseText.loop
	         $21ee = Display2PlayerPauseText.text
	         $21f3 = GameState01_GameOverInit
	         $221c = GameState04_LevelEndedMain
	         $2225 = GameState04_LevelEndedMain.aOrStartPressed
	         $2239 = GameState04_LevelEndedMain.setGameState
	         $223c = GameState05_BTypeLevelFinished
	         $2281 = GameState05_BTypeLevelFinished.clearScore
	         $2285 = GameState05_BTypeLevelFinished.fromLevel0
	         $22a3 = DisplayBTypeScoreMultipliersBasedOnLevel
	         $22aa = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $22b2 = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $22c1 = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $22d0 = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $22d6 = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $22df = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $22ed = GameState22_DancersInit
	         $233c = GameState22_DancersInit.setNextDancerAnimDetails
	         $2351 = GameState22_DancersInit.numDancersInB
	         $235a = GameState22_DancersInit.loopSetVisible
	         $2373 = Dancers_AnimationTimers
	         $237d = GameState23_sendDancersToOam
	         $2383 = GameState23_DancersMain
	         $2393 = GameState23_DancersMain.nextDancer
	         $23ac = GameState23_DancersMain.toNextDancer
	         $23c8 = GameState23_DancersMain.setGameState
	         $23cb = GameState23_DancersMain.isJumperStanding
	         $23d1 = GameState23_DancersMain.isJumperJumping
	         $23d7 = After4ScoreCategoriesProcessed
	         $2419 = ProcessScoreUpdatesAfterBTypeLevelDone
	         $2454 = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $2458 = GameState0c_UnusedPreShuttleLiftOff
	         $2461 = GameState0d_GameOverScreenClearing
	         $2479 = GameState0d_GameOverScreenClearing.is1player
	         $24ae = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $24b0 = GameState0d_GameOverScreenClearing.setGameState
	         $24b3 = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $24bf = CopyGameScreenInnerText
	         $24bf = CopyGameScreenInnerText.nextRow
	         $24c2 = CopyGameScreenInnerText.nextCol
	         $24d3 = AddOnCompletedLinesScore
	         $2505 = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $250b = AddOnCompletedLinesScore.loop
	         $2519 = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $251f = FillGameScreenBufferWithTileA
	         $2527 = FillGameScreenBufferWithTileA.nextRow
	         $252a = FillGameScreenBufferWithTileA.nextCol
	         $2534 = FillGameScreenBuffer2WithPaletteAandSetToVramTransfer
	         $253a = FillGameScreenBuffer2WithPaletteA
	         $2542 = FillGameScreenBuffer2WithPaletteA.nextRow
	         $2545 = FillGameScreenBuffer2WithPaletteA.nextCol
	         $254f = FillBottom2RowsOfTileMapWithEmptyTile
	         $2559 = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $255b = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $2564 = PlayNextPieceLoadNextAndHiddenPiece
	         $2596 = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $25a5 = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $25b3 = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $25b5 = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $25b8 = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $25b9 = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $25c6 = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $25d4 = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $25d7 = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $25f2 = InGameHandlePieceFalling.holdingDown
	         $25f2 = InGameHandlePieceFalling
	         $2604 = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $261d = InGameHandlePieceFalling.start
	         $2625 = InGameHandlePieceFalling.afterPressedDown
	         $2632 = InGameHandlePieceFalling.sendActivePieceToOam
	         $2636 = InGameHandlePieceFalling.currScoreEqu0
	         $2643 = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $2681 = InGameHandlePieceFalling.clearTimesHoldingDown
	         $2684 = InGameHandlePieceFalling.fromNotHoldingDown
	         $26a5 = InGameHandlePieceFalling.skipGameOver
	         $26a7 = InGameHandlePieceFalling.isAType
	         $26a8 = InGameHandlePieceFalling.keepAdding
	         $26af = InGameHandlePieceFalling.addDropsToScore
	         $26bf = InGameCheckIfAnyTetrisRowsComplete
	         $26d4 = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $26d7 = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $26ec = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $271c = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $272b = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $2750 = InGameCheckIfAnyTetrisRowsComplete.end
	         $2759 = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $275c = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $2761 = FlashCompletedTetrisRows
	         $2777 = FlashCompletedTetrisRows.upperOuterLoop
	         $2787 = FlashCompletedTetrisRows.flashRow
	         $2789 = FlashCompletedTetrisRows.flashRowLoop
	         $2792 = FlashCompletedTetrisRows.incFlashCount
	         $27a0 = FlashCompletedTetrisRows.flashed5times
	         $27ab = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $27af = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $27b9 = FlashCompletedTetrisRows.origTileCopyLoop
	         $27c9 = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $27ce = ShiftEntireGameRamBufferDownARow
	         $27db = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $27e6 = ShiftEntireGameRamBufferDownARow.nextRow
	         $27e9 = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $2808 = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $280c = ShiftEntireGameRamBufferDownARow2
	         $2822 = ShiftEntireGameRamBufferDownARow2.nextCompletedRow
	         $282d = ShiftEntireGameRamBufferDownARow2.nextRow
	         $2830 = ShiftEntireGameRamBufferDownARow2.rowShiftCopy
	         $2857 = ShiftEntireGameRamBufferDownARow2.clearTopRow
	         $2867 = ClearPointersToCompletedTetrisRows
	         $286d = ClearPointersToCompletedTetrisRows.loop
	         $2876 = CopyRamBufferRow17ToVram
	         $289c = CopyRamBufferRow16ToVram
	         $28c2 = CopyRamBufferRow15ToVram
	         $28e8 = CopyRamBufferRow14ToVram
	         $290e = CopyRamBufferRow13ToVram
	         $2934 = CopyRamBufferRow12ToVram
	         $295a = CopyRamBufferRow11ToVram
	         $2988 = CopyRamBufferRow11ToVram.loop
	         $298e = CopyRamBufferRow11ToVram.is2Player
	         $299c = CopyRamBufferRow10ToVram
	         $29c2 = CopyRamBufferRow9ToVram
	         $29e8 = CopyRamBufferRow8ToVram
	         $2a0e = CopyRamBufferRow7ToVram
	         $2a34 = CopyRamBufferRow6ToVram
	         $2a5a = CopyRamBufferRow5ToVram
	         $2a80 = CopyRamBufferRow4ToVram
	         $2aa6 = CopyRamBufferRow3ToVram
	         $2acf = CopyRamBufferRow2ToVram
	         $2aff = CopyRamBufferRow1ToVram
	         $2b2b = CopyRamBufferRow0ToVram
	         $2b5f = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $2b75 = CopyRamBufferRow0ToVram.displayLines
	         $2b94 = CopyRamBufferRow0ToVram.is1playerEnd
	         $2b9e = CopyRamBufferRow0ToVram.setGameState
	         $2ba1 = CopyRamBufferRow0ToVram.playNextPiece
	         $2ba5 = CopyRamBufferRow0ToVram.is2player
	         $2bb1 = DisplayGameATypeScoreIfInGameAndForced
	         $2bc1 = CheckIfATypeNextLevelReached
	         $2bec = CheckIfATypeNextLevelReached.lv5
	         $2bf7 = CheckIfATypeNextLevelReached.lv10
	         $2c02 = CheckIfATypeNextLevelReached.lv15
	         $2c0d = CheckIfATypeNextLevelReached.lv20
	         $2c18 = CheckIfATypeNextLevelReached.continue
	         $2c21 = CheckIfATypeNextLevelReached.nextDigit
	         $2c37 = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $2c40 = ABisBCDofValInHL
	         $2c45 = ABisBCDofValInHL.loop
	         $2c4d = ABisBCDofValInHL.copyAtoB
	         $2c4f = CopyRamBufferRowToVram
	         $2c51 = CopyRamBufferRowToVram.loop
	         $2c5e = InGameCheckButtonsPressed
	         $2c7d = InGameCheckButtonsPressed.pressedAAnimation0
	         $2c83 = InGameCheckButtonsPressed.pressedB
	         $2c8d = InGameCheckButtonsPressed.pressedBAnimation3
	         $2c91 = InGameCheckButtonsPressed.afterRotation
	         $2cac = InGameCheckButtonsPressed.afterCollisionCheck
	         $2cca = InGameCheckButtonsPressed.pressedRight
	         $2cdd = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $2cec = InGameCheckButtonsPressed.notHeldLeft
	         $2cef = InGameCheckButtonsPressed.notHeldRight
	         $2d01 = InGameCheckButtonsPressed.pressedLeft
	         $2d16 = RetZIfNoCollisionForPiece
	         $2d1b = RetZIfNoCollisionForPiece.nextSprite
	         $2d36 = RetZIfNoCollisionForPiece.empty
	         $2d3d = RetZIfNoCollisionForPiece.fromXis0
	         $2d41 = RetZIfNoCollisionForPiece.notEmpty
	         $2d48 = InGameAddPieceToVram
	         $2d52 = InGameAddPieceToVram.nextSquareOfPiece
	         $2d64 = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $2d7f = InGameAddPieceToVram.nextState
	         $2d89 = ConvertFromObjectTileToBGTile
	         $2d95 = ConvertFromObjectTileToBGTile.subForFxValues
	         $2d97 = ConvertFromObjectTileToBGTile.getOffset
	         $2d9c = InGameAddPieceToVram1
	         $2dab = InGameAddPieceToVram1.nextSquareOfPiece
	         $2dbd = InGameAddPieceToVram1.waitUntilVramAndOamFree
	         $2ddd = InGameAddPieceToVram1.nextState
	         $2deb = PieceTileConversionLookUpTable
	         $2df7 = PieceBGColorLookUpTable
	         $2dfe = ProcessCurrentScoreCategory
	         $2e1c = ProcessCurrentScoreCategory.afterDisplaying10s
	         $2e21 = ProcessCurrentScoreCategory.addCategScore
	         $2e3d = ProcessCurrentScoreCategory.addToTotalScore
	         $2e4b = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $2e5e = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $2e5f = IncScoreCategoryProcessedAfterBTypeDone
	         $2e76 = ClearScoreCategoryVarsAndTotalScore
	         $2e7c = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $2e85 = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $2e8a = ConvertHexToDec
	         $2e8b = ConvertHexToDec.convertLoop
	         $2e91 = UpdateClock
	         $2ea8 = UpdateClock.doHours
	         $2ebb = UpdateClock.loopa
	         $2ed2 = UpdateClock.doMinutes
	         $2ee5 = UpdateClock.loopb
	         $2f01 = UpdateClock.setSramBank
	         $2f07 = UpdateClock.updateSIsDay_DuskDawn_Night
	         $2f22 = UpdateClock.isDay
	         $2f2c = UpdateClock.isDuskOrDawn
	         $2f38 = UpdateClock.isNight
	         $2f44 = ColonTile
	         $2f54 = IsDMGSwitch
	         $2f5c = UnusedStoreBCDByteInHLInDestDE
	         $2f68 = Copy2SpriteSpecsToShadowOam
	         $2f6a = CopyASpriteSpecsToShadowOam
	         $2f7a = Copy1stSpriteSpecToSprite4
	         $2f8d = Copy2ndSpriteSpecToSprite8
	         $2fa0 = DisplayBlackColumnFromHLdown
	         $2fa7 = DisplayBlackColumnFromHLdown.loop
	         $2fad = CopyDEintoHLwhileFFhNotFound
	         $2fad = CopyDEintoHLwhileFFhNotFound.loop
	         $2fb5 = StubInterruptHandler
	         $2fb6 = SpriteSpecStruct_LPieceActive
	         $2fbe = SpriteSpecStruct_LPieceNext
	         $2fc6 = SpriteSpecStruct_GameMusicAType
	         $2fd2 = SpriteSpecStruct_ATypeFlashing0
	         $2fd8 = SpriteSpecStruct_BTypeLevelAndHigh
	         $2fe4 = SpriteSpecStruct_2PlayerHighsFlashing1
	         $2ff0 = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $3002 = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $3014 = SpriteSpecStruct_MariosFacingAway
	         $3020 = SpriteSpecStruct_LuigisFacingAway
	         $302c = SpriteSpecStruct_Dancers
	         $3068 = SpriteSpecStruct_ShuttleAndGas
	         $307a = SpriteSpecStruct_RocketAndGas
	         $308c = FillScreen0FromHLdownWithEmptyTile
	         $308f = FillScreenFromHLdownWithEmptyTile
	         $3092 = FillScreenFromHLdownWithEmptyTile.loop
	         $309b = CopyHLtoDE_BCbytes
	         $309b = CopyHLtoDE_BCbytes.loop
	         $30a4 = LoadAsciiAndMenuScreenGfx
	         $30bf = CopyAsciiTileData
	         $30c8 = CopyAsciiTileData.loop
	         $30d3 = CopyAsciiAndTitleScreenTileData
	         $30f2 = UnusedCopyHLtoVram1000hBytes
	         $30f5 = CopyHLtoVramBCbytes
	         $30fb = Stub_27ea
	         $30fc = CopyLayoutToScreen0
	         $30ff = CopyLayoutToHL
	         $3101 = CopyLayoutBrowsToHL
	         $3101 = CopyLayoutBrowsToHL.loopRow
	         $3104 = CopyLayoutBrowsToHL.loopCol
	         $3115 = CopyAttrToScreen0
	         $311d = CopyAttrToHL
	         $311f = CopyAttrBrowsToHL.loopRow
	         $311f = CopyAttrBrowsToHL
	         $3123 = CopyAttrBrowsToHL.loopCol
	         $313a = CopyLayoutAndAttrToScreen0
	         $313d = CopyLayoutAndAttrToHL
	         $313f = CopyLayoutAndAttrBrowsToHL
	         $313f = CopyLayoutAndAttrBrowsToHL.loopRow
	         $3142 = CopyLayoutAndAttrBrowsToHL.loopCol
	         $315f = CopyPalettesToCram
	         $3161 = CopyPalettesToCram.loadPaletteLoop
	         $3168 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $3168 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $316b = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $317f = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $3185 = TurnOffLCD
	         $318d = TurnOffLCD.waitUntilInVBlank
	         $319e = GameInnerScreenLayout_Pause
	         $31ee = GameScreenLayout_ScoreTotals
	         $3358 = GameInnerScreenLayout_GameOver
	         $3390 = GameInnerScreen_TryAgain
	         $33c0 = PollInput
	         $33fd = GetScreen0AddressOfPieceSquare
	         $3410 = GetScreen0AddressOfPieceSquare.loop
	         $342a = UnusedMovePieceUpAndRight
	         $3432 = UnusedMovePieceUpAndRight.deDiv16
	         $3450 = DisplayBCDNum6DigitsIfForced
	         $3454 = DisplayBCDNum6Digits
	         $3456 = DisplayBCDNum2CDigits
	         $3459 = DisplayBCDNum2CDigits.nextByte
	         $346a = DisplayBCDNum2CDigits.displayTens
	         $3480 = DisplayBCDNum2CDigits.displayOnes
	         $3489 = DisplayBCDNum2CDigits.tensNot0
	         $3491 = DisplayBCDNum2CDigits.onesNot0
	         $3499 = OamDmaFunction
	         $349f = OamDmaFunction.wait
	         $34a3 = CopyToShadowOamBasedOnSpriteSpec
	         $34a8 = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $34b6 = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $34c8 = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $34cd = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $34cf = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $34d4 = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $34f7 = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $3512 = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $3516 = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $351a = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $352d = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $3537 = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $354c = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $3556 = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $3568 = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $356a = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	         $3586 = ConvertFromBgTileToObjectTile
	         $3598 = ConvertFromBgTileToObjectTile.isInGame
	         $35a0 = ConvertFromBgTileToObjectTile.pastGarbageBlock
	         $35a7 = ConvertFromBgTileToObjectTile.pastGarbageBlock2
	         $35ae = ConvertFromBgTileToObjectTile.isHorIPieceEnd
	         $35b1 = InvertPalettes
	         $35b8 = !10
	         $35c8 = !11
	         $35d2 = LoadTimeBasedPalettes
	         $35e8 = LoadTimeBasedPalettes.adjLoopA
	         $35ee = LoadTimeBasedPalettes.noPalAdjA
	         $3601 = LoadTimeBasedPalettes.skipBg
	EMPTY: $360c-$3fef ($09e4 bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $0a17 bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7dec ($3712 bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Gfx_MenuScreens.end
	         $56db = Gfx_Ascii
	         $5813 = Gfx_Ascii.end
	         $5813 = Gfx_TitleScreen
	         $6003 = Layout_Copyright
	         $6003 = Gfx_TitleScreen.end
	         $616b = Layout_TitleScreen
	         $661b = GameScreenLayout_Dancers
	         $6785 = Layout_RocketScene
	         $6a55 = Layout_MarioLuigiScreen
	         $6bbd = Layout_2PlayerInGame
	         $6d25 = Layout_MarioScore
	         $6d75 = Layout_BricksAndLuigiScore
	         $6ded = Gfx_RocketScene
	         $7ded = Gfx_RocketScene.end
	EMPTY: $7ded-$7fff ($0213 bytes)
	TOTAL EMPTY: $0213 bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$5986 ($0787 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $56b0 = Layout_RocketScene_Sunrise_Sunset
	         $5980 = PieceColorLookUpTable
	         $5980 = Layout_RocketScene_Sunrise_Sunset.end
	         $5987 = PieceColorLookUpTable.end
	SECTION: $5987-$62d1 ($094b bytes) ["Sound Engine"]
	         $5987 = SquareSoundEffectTable_Init
	         $5997 = SquareSoundEffectTable_Update
	         $59a7 = NoiseSoundEffect_Init
	         $59af = NoiseSoundEffect_Update
	         $59b7 = SongsSoundChannelsData
	         $59d9 = Stub
	         $59da = UpdateSound
	         $59ef = UpdateSound.endPath
	         $5a01 = UpdateSound.dontUnset
	         $5a16 = UpdateSound.done
	         $5a2b = UpdateSound.gameJustPaused
	         $5a57 = UpdateSound.setAud2RegsToPause1
	         $5a5a = UpdateSound.copyIntoAud2Regs
	         $5a5f = UpdateSound.setAud2RegsToPause2
	         $5a64 = UpdateSound.gameJustUnpaused
	         $5a6a = UpdateSound.processPausedCounter
	         $5a82 = Aud2RegVals_Pause1
	         $5a86 = Aud2RegVals_Pause2
	         $5a8a = IsSoundEffect_MovingSelection
	         $5a90 = IsSoundEffect_TetrisRowsFell
	         $5a96 = IsSoundEffect_4LinesCleared
	         $5a9c = IsSoundEffect_ReachedNextLevel
	         $5aa2 = Aud1RegValsInit_MovingSelection
	         $5aa7 = Aud1RegValsUpdate_MovingSelection
	         $5aac = Aud1RegValsInit_ConfirmOrLetterTyped
	         $5ab1 = SquareEffectInit_MovingSelection
	         $5ab9 = SquareEffectUpdate_MovingSelection
	         $5acd = SquareEffectInit_ConfirmOrLetterTyped
	         $5ad5 = SquareEffectUpdate_Common
	         $5ada = ClearAud1RegsAndVars
	         $5aee = Aud1RegVals_4LinesCleared_1
	         $5af3 = Aud1RegVals_4LinesCleared_2
	         $5af8 = SquareEffectInit_4LinesCleared
	         $5afe = SquareEffectUpdate_4LinesCleared
	         $5b15 = SquareEffectUpdate_4LinesCleared.finalWav
	         $5b1e = SquareEffectUpdate_4LinesCleared.sound2
	         $5b24 = SquareEffectUpdate_4LinesCleared.sound1
	         $5b2a = Aud1RegValsInit_PieceMovedHoriz
	         $5b2f = SquareEffectInit_PieceMovedHoriz
	         $5b47 = Aud1RegVals_ReachedNextLevel_0and4
	         $5b4c = Aud1RegVals_ReachedNextLevel_1
	         $5b51 = Aud1RegVals_ReachedNextLevel_2
	         $5b56 = Aud1RegVals_ReachedNextLevel_3
	         $5b5b = SquareEffectInit_ReachedNextLevel
	         $5b67 = SquareEffectUpdate_ReachedNextLevel
	         $5b87 = SquareEffectUpdate_ReachedNextLevel.sound1
	         $5b8c = SquareEffectUpdate_ReachedNextLevel.sound2
	         $5b91 = SquareEffectUpdate_ReachedNextLevel.sound3
	         $5b96 = SquareEffectUpdate_ReachedNextLevel.sound4
	         $5b99 = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $5b9c = Aud1RegValsInit_Non4LinesCleared
	         $5ba1 = Aud1EnvData_Non4LinesCleared
	         $5bac = Aud1FreqLoData_Non4LinesCleared
	         $5bb6 = SquareEffectInit_Non4LinesCleared
	         $5bca = SquareEffectUpdate_Non4LinesCleared
	         $5be8 = SetAud1EnvLowHighToEDB
	         $5bf3 = Aud1RegValsInit_PieceRotated
	         $5bf8 = Aud1EnvData_PieceRotated
	         $5bfe = Aud1FreqLoData_PieceRotated
	         $5c03 = SquareEffectInit_PieceRotated
	         $5c1b = SquareEffectUpdate_PieceRotated
	         $5c3b = SquareEffectInit_TetrisRowsFell
	         $5c47 = Aud1RegValsInit_TetrisRowsFell
	         $5c4c = Aud4RegValsInit_PieceHitFloor
	         $5c50 = Aud4RegValsInit_TetrisRowsFell
	         $5c54 = Aud4RegValsInit_RocketGas
	         $5c58 = Aud4RegValsInit_RocketFire
	         $5c5c = Aud4RegValsUpdate_RocketFire_Poly
	         $5c80 = Aud4RegValsUpdate_RocketFire_Env
	         $5ca4 = NoiseEffectInit_RocketGas
	         $5cac = NoiseEffectInit_RocketFire
	         $5cb4 = NoiseEffectUpdate_RocketFire
	         $5cdb = NoiseEffectInit_TetrisRowsFell
	         $5ce3 = NoiseEffectInit_PieceHitFloor
	         $5ceb = NoiseEffectUpdate_Common
	         $5cf0 = NoiseEffectUpdate_ClearNoise
	         $5d02 = Aud3RegValsInit_GameOver
	         $5d07 = WavEffectInit_GameOver
	         $5d1e = WavEffectUpdate_GameOver
	         $5d31 = WavEffectUpdate_GameOver.setAud3Low
	         $5d39 = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $5d43 = UpdateWavEffects
	         $5d5e = Aud3RegValsInit_After4LinesCleared
	         $5d63 = Aud3RegValsUpdate_After4LinesCleared_1
	         $5d68 = Aud3RegValsUpdate_After4LinesCleared_2
	         $5d6d = Aud3RegValsUpdate_After4LinesCleared_3
	         $5d72 = WavEffectInit_After4LinesCleared
	         $5d87 = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $5d8a = WavEffectUpdate_sound1
	         $5d9b = WavEffectUpdate_sound2
	         $5dac = WavEffectUpdate_sound3
	         $5dbd = WavEffectUpdate_After4LinesCleared
	         $5ddf = WavEffectUpdate_After4LinesCleared.incLowVal
	         $5de3 = WavEffectUpdate_After4LinesCleared.decLowVal
	         $5de5 = WavEffectUpdate_After4LinesCleared.setLowVal
	         $5de9 = ClearWavVarsAndRegs_ResumeMusic
	         $5e0f = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $5e14 = InitWavEffect_pauseOtherChannels
	         $5e39 = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $5e3d = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $5e5d = CopyDefaultValsInHLIntoAud1Regs
	         $5e64 = CopyDefaultValsInHLIntoAud2Regs
	         $5e6b = CopyDefaultValsInHLIntoAud3Regs
	         $5e72 = CopyDefaultValsInHLIntoAud4Regs
	         $5e77 = CopyDefaultValsInHLIntoAudCRegs
	         $5e77 = CopyDefaultValsInHLIntoAudCRegs.loop
	         $5e7f = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $5e83 = HLequAddressForSongData_tableHL_incE
	         $5e92 = IncCounterInDE_retZifHitsThreshold
	         $5e9d = IncCounterInDE_retZifHitsThreshold.done
	         $5e9f = CopyFromHLintoWav3Ram
	         $5ea2 = CopyFromHLintoWav3Ram.loop
	         $5eac = InitSound
	         $5ece = ResetSoundHwRegs
	         $5ee4 = UpdateSquareEffects
	         $5ef7 = UpdateSquareEffects.noSquareEffectToPlay
	         $5f03 = UpdateSquareEffects.done
	         $5f04 = UpdateNoiseEffects
	         $5f17 = UpdateNoiseEffects.noNoiseEffectToPlay
	         $5f23 = UpdateNoiseEffects.done
	         $5f24 = MuteSound
	         $5f28 = InitSong
	         $5f43 = SetSongsAudTermVars
	         $5f4b = SetSongsAudTermVars.nextSong
	         $5f54 = SetSongsAudTermVars.setSongVars
	         $5f6c = SetSongsAudTermRegs
	         $5f96 = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $5fa1 = SetSongsAudTermRegs.afterDecidingWavOutput
	         $5fab = SetSongsAudTermRegs.setAudTermToB
	         $5fac = SetSongsAudTermRegs.setAudTerm
	         $5faf = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $5fb3 = SetSongsAudTermRegs.use1stOutputValue
	         $5fb8 = SetSongsAudTermRegs.notTimeToSwapOutput
	         $5fc5 = SongAudTermData
	         $6009 = StoreWordInWordInHLintoDE
	         $6014 = StoreWordInHLIintoDE
	         $601a = SetSongsInitialSoundChannelVars
	         $6071 = SetSongsInitialSoundChannelVars.loop
	         $6084 = ProcessSoundByte9dh_SetParams.aud3
	         $6084 = ProcessSoundByte9dh_SetParams
	         $6090 = ProcessSoundByte9dh_SetParams.start
	         $60ba = ProcessSoundByte9dh_SetParams.end
	         $60c0 = IncWordInHL
	         $60c6 = IncWordInHL.store
	         $60cc = IncWordTwiceInHL
	         $60d5 = GetABInWordStoredInHL
	         $60dc = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $60dc = UpdateMusic
	         $60df = UpdateMusic.processCurrSoundByteEnvelope
	         $60f6 = UpdateMusic.passedWaveEnvelope
	         $610b = UpdateMusic.toNextSndChannelFromStructIdx2
	         $6110 = UpdateMusic.setNextAddrInCurrSndChannelData
	         $6117 = UpdateMusic.afterSpecialSoundByteAddress
	         $612b = UpdateMusic.sndChannelAddrEquFFFFh
	         $6142 = UpdateMusic.stopCurrSong
	         $614b = UpdateMusic.start
	         $6159 = UpdateMusic.nextSoundChannel
	         $6163 = UpdateMusic.afterSettingSoundDataAddress
	         $6165 = UpdateMusic.processNextSoundByte
	         $6192 = UpdateMusic.contSoundByte
	         $61be = UpdateMusic.soundByte01
	         $61c3 = UpdateMusic.getNoiseDataToWrite
	         $61cb = UpdateMusic.noiseLoop
	         $61da = UpdateMusic.getNonNoiseDataToWrite
	         $61f4 = UpdateMusic.contWave
	         $61ff = UpdateMusic.startWritingToSq2
	         $6203 = UpdateMusic.startWritingToSq1
	         $6208 = UpdateMusic.afterChoosingSndChannelBaseReg
	         $6211 = UpdateMusic.after_hasWavRam
	         $6214 = UpdateMusic.fromWav
	         $621d = UpdateMusic.afterDisabledEnvelopeCheck
	         $623b = UpdateMusic.skippingHwRegWrites
	         $6240 = UpdateMusic.toNextSndChannel
	         $6251 = UpdateMusic.done
	         $625e = UpdateMusic.hasWavRam
	         $6265 = GetEinDEplusBdiv2
	         $626e = WriteToFrequencyRegsAdjustedWithEnvelope
	         $6290 = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $6292 = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $62a8 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $62ad = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $62b9 = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $62c6 = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $62c8 = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $62c9 = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $62d2-$7fff ($1d2e bytes)
	TOTAL EMPTY: $1d33 bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4ae9 ($08ea bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $46b0 = Layout_RocketScene_Night
	         $4980 = GameScreenLayout_Dancers_Night
	         $4aea = GameScreenLayout_Dancers_Night.end
	SECTION: $4aea-$6e3a ($2351 bytes) ["Palettes and Attribute Maps"]
	         $4aea = Palettes_TitleScreen
	         $4c6a = Palettes_InGameGuideline
	         $4dea = Palettes_InGameSega
	         $4f6a = Palettes_BoardBackgroundStart
	         $50ea = Palettes_BoardBackgroundTransition
	         $526a = Attributes_TitleScreen
	         $571a = Attributes_GameMusicTypeScreen
	         $59ea = Attributes_ATypeSelectionScreen
	         $5cba = Attributes_BTypeSelectionScreen
	         $5f8a = Attributes_ATypeInGame
	         $625a = Attributes_BTypeInGame
	         $652a = Layout_ATypePaused
	         $67fa = Layout_BTypePaused
	         $6aca = Layout_DMG
	         $6aca = Layout_BTypePaused.end
	         $6c32 = Palettes_BType
	         $6db2 = IsDMG
	         $6dcc = BoardBackgroundColorTransition
	         $6dcc = IsDMG.end
	         $6de0 = BoardBackgroundColorTransition.skipTimerSet
	         $6e01 = BoardBackgroundColorTransition.updateColor
	         $6e1e = BoardBackgroundColorTransition.doneWaiting
	         $6e30 = BoardBackgroundColorTransition.doneTransition
	EMPTY: $6e3b-$7fff ($11c5 bytes)
	TOTAL EMPTY: $1215 bytes

ROMX bank #4:
	SECTION: $4000 (0 bytes) ["Rosy Retrospection Data"]
	EMPTY

SRAM bank #0:
	SECTION: $a000-$ab74 ($0b75 bytes) ["SRAM"]
	         $a000 = sGameScreenBufferAttr
	         $a400 = sCurrMonth
	         $a400 = sGameScreenBufferAttr.end
	         $a401 = sCurrYear
	         $a403 = sIsDay_DuskDawn_Night
	         $a403 = sCurrYear.end
	         $a404 = sIsRocketScene
	         $a404 = sIsDay_DuskDawn_Night.end
	         $a405 = sOptionLights
	         $a405 = sIsRocketScene.end
	         $a406 = sOptionColors
	         $a407 = sOptionDayNightCycle
	         $a408 = sOptionDayNightCycle.end
	         $a408 = sBTypeHighScores
	         $aa5c = sATypeHighScores
	         $ab6a = sATypeHighScores.end
	         $ab6a = sSramBufferAddressesForCompletedRows
	         $ab73 = sSramBufferAddressesForCompletedRows.end
	         $ab73 = sIsSRAMInitialized
	         $ab74 = sIsSRAMInitialized.end
	         $ab74 = sSkipBg
	         $ab75 = sSkipBg.end
	EMPTY: $ab75-$bfff ($148b bytes)
	TOTAL EMPTY: $148b bytes

WRAM0 bank #0:
	SECTION: $c000-$d89d ($189e bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wd762
	         $d80e = wCurrSoundChannelBeingProcessed
	         $d80f = wOrigSoundEffectIdx
	         $d80f = wUnusedShadowAudLen
	         $d810 = wdf72
	         $d813 = wAudTermCounterUntilChangingOutput
	         $d814 = wAudTermCounterValueToHitToChangeOutput
	         $d815 = wAudTermSelectedOutputVal
	         $d816 = wAudTermSongsSpec
	         $d817 = wAudTermOutputValue1
	         $d818 = wAudTermOutputValue2
	         $d819 = wdf7b
	         $d81c = wGamePausedSoundTimer
	         $d81d = wGamePausedActivity
	         $d81e = wUnused_df80
	         $d81f = wSongTempoAddr
	         $d821 = wdf83
	         $d82e = wAudStructs
	         $d82e = wAud1Struct
	         $d83e = wAud2Struct
	         $d84e = wAud3Struct
	         $d85e = wAud4Struct
	         $d86e = wdfd0
	         $d87e = wSquareSoundToPlay
	         $d87f = wSquareEffectBeingPlayed
	         $d880 = wSquareEffectFrameCounter
	         $d881 = wSquareEffectFrameCounterThreshold
	         $d882 = wSquareEffectMiscCounter
	         $d883 = wdfe5
	         $d886 = wSongToStart
	         $d887 = wSongBeingPlayed
	         $d888 = wdfea
	         $d88e = wWavSoundToPlay
	         $d88f = wWavEffectBeingPlayed
	         $d890 = wWavEffectFrameCounter
	         $d891 = wWavEffectFrameCounterThreshold
	         $d892 = wWavEffectMiscCounter
	         $d893 = wWavEffectRandomVal
	         $d893 = wWavEffectShouldIncOrDec
	         $d894 = wWavEffectCurrLoVal
	         $d895 = wdff7
	         $d896 = wNoiseSoundToPlay
	         $d897 = wNoiseEffectBeingPlayed
	         $d898 = wNoiseEffectFrameCounter
	         $d899 = wNoiseEffectFrameCounterThreshold
	         $d89a = wNoiseEffectMiscCounter
	         $d89b = wBoardBackgroundColorTransitionState
	         $d89c = wTransitionTimer
	EMPTY: $d89e-$dfff ($0762 bytes)
	TOTAL EMPTY: $0762 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 13801 bytes used / 2583 free
	ROMX: 36517 bytes used / 29019 free in 4 banks
	SRAM: 2933 bytes used / 5259 free in 1 bank
	WRAM0: 6302 bytes used / 1890 free
	HRAM: 127 bytes used / 0 free
