ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$2f0b ($2dbc bytes) ["Begin"]
	         $0150 = Begin
	         $0153 = UnusedGetScreenTileInHLWhileOamFree
	         $0156 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $015d = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $0166 = AddScoreValueDEontoBaseScoreHL
	         $017e = VBlankInterruptHandler
	         $0199 = VBlankInterruptHandler.afterMasterTransfer
	         $01fe = VBlankInterruptHandler.end
	         $020a = Begin2
	         $0217 = Begin2.clear2ndWram
	         $021e = Reset
	         $0236 = Reset.waitUntilVBlank
	         $0263 = Reset.clearLastPage
	         $026e = Reset.clear1stWram
	         $027d = Reset.clearVram
	         $0289 = Reset.clearOam
	         $0292 = Reset.clearHram
	         $029d = Reset.copyOamDmaFunc
	         $02c7 = MainLoop
	         $02de = MainLoop.nextTimer
	         $02ea = MainLoop.toNextTimer
	         $02f7 = MainLoop.waitUntilVBlankIntDone
	         $0302 = ProcessGameState
	         $0373 = GameState24_CopyrightDisplay
	         $0392 = GameState24_CopyrightDisplay.copyLoop
	         $03a7 = GameState25_CopyrightWaiting
	         $03b4 = GameState35_CopyrightCanContinue
	         $03c2 = GameState35_CopyrightCanContinue.setNewState
	         $03c7 = GameState06_TitleScreenInit
	         $03ec = GameState06_TitleScreenInit.clearScreenBuffer
	         $0407 = GameState06_TitleScreenInit.displayBlackRow
	         $043d = PlayDemo
	         $047d = PlayDemo.setDemoPlayed
	         $0497 = UnusedSetRecordingDemo
	         $049c = GameState07_TitleScreenMain
	         $04ab = GameState07_TitleScreenMain.afterTimerCheck
	         $04c7 = GameState07_TitleScreenMain.checkButtonsPressed
	         $0500 = !0
	         $0504 = GameState07_TitleScreenMain.scrollLoop
	         $050b = !1
	         $051a = GameState07_TitleScreenMain.playerChecks
	         $0531 = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $053b = GameState07_TitleScreenMain.setGameStateTo2ah
	         $053d = GameState07_TitleScreenMain.setGameState
	         $054b = GameState07_TitleScreenMain.is1Player
	         $0554 = GameState07_TitleScreenMain.afterUpCheck
	         $0557 = GameState07_TitleScreenMain.flipNumPlayersOption
	         $0559 = GameState07_TitleScreenMain.setNumPlayersOpt
	         $0571 = !2
	         $057e = !3
	         $0585 = GameState07_TitleScreenMain.setCursorX
	         $0589 = GameState07_TitleScreenMain.pressedRight
	         $058f = GameState07_TitleScreenMain.pressedLeft
	         $0593 = GameState07_TitleScreenMain.pressedDown
	         $059c = GameState07_TitleScreenMain.pressedUp
	         $059f = GameState07_TitleScreenMain.multiplayerInvalid
	         $05a2 = GameState07_TitleScreenMain.optionMenu
	         $05b7 = !4
	         $05bf = !5
	         $05c7 = !6
	         $05c9 = GameState07_TitleScreenMain.setCursorY
	         $05cc = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $05e1 = GameState07_TitleScreenMain.updateClock
	         $05ef = GameState07_TitleScreenMain.loopa
	         $0609 = GameState07_TitleScreenMain.loopb
	         $0619 = GameState07_TitleScreenMain.pressedDownOptions
	         $0622 = GameState07_TitleScreenMain.pressedUpOptions
	         $062c = GameState07_TitleScreenMain.pressedBOptions
	         $062c = GameState07_TitleScreenMain.scrollLoopBack
	         $0633 = !7
	         $0642 = GameState07_TitleScreenMain.doneScrolling
	         $0653 = GameState07_TitleScreenMain.pressedAOptions
	         $0674 = !8
	         $067a = !9
	         $0680 = GameState07_TitleScreenMain.waitVRAMA
	         $0689 = GameState07_TitleScreenMain.setTime
	         $0696 = GameState07_TitleScreenMain.hours
	         $06cb = GameState07_TitleScreenMain.decreaseHours
	         $06d2 = GameState07_TitleScreenMain.updateDecH
	         $06d7 = GameState07_TitleScreenMain.separateTensDecH
	         $06e2 = GameState07_TitleScreenMain.waitVRAM1
	         $06f0 = GameState07_TitleScreenMain.increaseHours
	         $06f7 = GameState07_TitleScreenMain.updateIncH
	         $06fc = GameState07_TitleScreenMain.separateTensIncH
	         $0707 = GameState07_TitleScreenMain.waitVRAM2
	         $0715 = GameState07_TitleScreenMain.minutes
	         $074b = GameState07_TitleScreenMain.decreaseMinutes
	         $0752 = GameState07_TitleScreenMain.updateDecM
	         $0757 = GameState07_TitleScreenMain.separateTensDecM
	         $0762 = GameState07_TitleScreenMain.waitVRAM3
	         $0779 = GameState07_TitleScreenMain.increaseMinutes
	         $0780 = GameState07_TitleScreenMain.updateIncM
	         $0785 = GameState07_TitleScreenMain.separateTensIncM
	         $0790 = GameState07_TitleScreenMain.waitVRAM4
	         $07a8 = GameState07_TitleScreenMain.exit
	         $07b6 = DemoSendPingsAndEndAfterAllStepsDone
	         $07d7 = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $07e4 = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $07ec = DemoPollInput
	         $0804 = DemoPollInput.mainBit
	         $0820 = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $0823 = DemoPollInput.end
	         $082c = UnusedClearDemoButtonsHeld
	         $0832 = DemoRecordInput
	         $085c = DemoRecordInput.incFrames
	         $0862 = DemoRestorePlayerButtonsHeld
	         $086f = GameState2a_passive
	         $0876 = GameState2a_2PlayerGameMusicTypeInit
	         $0880 = GameState2a_2PlayerGameMusicTypeInit.cont
	         $08a6 = GameState2b_2PlayerGameMusicTypeMain
	         $08c2 = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $08cf = GameState2b_2PlayerGameMusicTypeMain.cont
	         $08f3 = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $090c = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $0913 = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $091b = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $091f = GameState16_passive
	         $0926 = GameState16_MarioLuigiScreenInit
	         $093e = GameState16_MarioLuigiScreenInit.loop
	         $0945 = GameState16_MarioLuigiScreenInit.cont
	         $097c = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $09b9 = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $09d9 = CopyDEtoHL_Bbytes
	         $09d9 = CopyDEtoHL_Bbytes.loop
	         $09e0 = GameState17_MarioLuigiScreenMain
	         $09f7 = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $09fe = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0a09 = GameState17_MarioLuigiScreenMain.isMaster
	         $0a13 = GameState17_MarioLuigiScreenMain.notPressedStart
	         $0a1e = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $0a21 = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $0a3e = GameState17_MarioLuigiScreenMain.aGameFinished
	         $0a56 = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $0a5e = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $0a60 = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $0a68 = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $0a71 = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $0a8a = GameState17_MarioLuigiScreenMain.pressedRight
	         $0a8f = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0a95 = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $0a9c = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0aa2 = GameState17_MarioLuigiScreenMain.pressedUp
	         $0aaa = Player1HighCoords
	         $0ab6 = Player2HighCoords
	         $0ac2 = Set2PlayerHighCoords
	         $0ad9 = GameState18_2PlayerInGameInit
	         $0ae1 = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $0b5d = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $0b7d = GameState18_2PlayerInGameInit.luigiFace
	         $0b8d = GameState18_2PlayerInGameInit.marioFace
	         $0b9d = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0bab = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0bbc = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0bcf = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0bd1 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0bde = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0bf6 = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0c01 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0c03 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0c1d = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0c26 = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0c2d = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0c3e = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0c4e = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0c5b = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0c63 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0c74 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0c7f = GameState19_commonEnd
	         $0c9d = GameState19_commonEnd.afterPassiveCheck
	         $0caf = GameState19_passive
	         $0cb9 = GameState19_passive.toDecB
	         $0cbf = GameState19_passive.waitUntilMasterPresent
	         $0ccd = GameState19_passive.waitUntilPingToMasterHandled
	         $0cdd = GameState19_passive.nextRow
	         $0cdf = GameState19_passive.nextCol
	         $0ce8 = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0cf7 = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0d05 = GameState19_passive.waitUntilTransferFinished
	         $0d15 = GameState19_passive.loadNextPiece
	         $0d1e = GameState19_passive.waitUntilTransferFinished2
	         $0d29 = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0d37 = GameState19_passive.waitUntilTransferFinished3
	         $0d45 = LoadBottomRowWithBlocks
	         $0d4c = LoadBottomRowWithBlocks.nextCol
	         $0d51 = SerialTransferWaitFunc
	         $0d54 = SerialTransferWaitFunc.loop
	         $0d5a = ShuffleHiddenPieces2Player
	         $0d63 = ShuffleHiddenPieces2Player.nextRandomVal
	         $0d66 = ShuffleHiddenPieces2Player.loop1chTo0
	         $0d67 = ShuffleHiddenPieces2Player.toDecB
	         $0d74 = ShuffleHiddenPieces2Player.afterBEqu0
	         $0d82 = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0d8b = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0daa = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0dbb = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0dc3 = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0dd5 = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0dda = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0de3 = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0dea = GameState1a_2PlayerInGameMain
	         $0e2c = GameState1a_2PlayerInGameMain.notYetFinished
	         $0e3c = GameState1a_2PlayerInGameMain.afterLevelDone
	         $0e4d = GameState1a_2PlayerInGameMain.end
	         $0e54 = CheckAlmostLosingStatus
	         $0e5e = CheckAlmostLosingStatus.nextRow
	         $0e61 = CheckAlmostLosingStatus.nextCol
	         $0e6e = CheckAlmostLosingStatus.afterLoop
	         $0e80 = CheckAlmostLosingStatus.nearTop
	         $0e8f = MasterPausedSerialByteRead
	         $0ea9 = InGame2PlayerProcessSerialByte
	         $0ed5 = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $0ed7 = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $0ede = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $0ee0 = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $0ee7 = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $0ef3 = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $0f06 = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $0f09 = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $0f19 = InGame2PlayerProcessSerialByte.noLineMarkings
	         $0f1d = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $0f35 = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $0f3b = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $0f45 = CheckIfOtherPlayerCleared2PlusLines
	         $0f51 = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $0f5b = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $0f63 = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $0f6c = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $0f6e = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $0f86 = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $0f8b = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $0fa4 = GameState1b_2PlayerGameEnd
	         $0fbc = GameState1b_2PlayerGameEnd.tie
	         $0fc2 = GameState1b_2PlayerGameEnd.notLost
	         $0fcc = GameState1b_2PlayerGameEnd.cont
	         $0fe0 = GameState1b_2PlayerGameEnd.setGameState
	         $0feb = GameState1d_2PlayerWinnerInit
	         $0ff9 = GameState1d_2PlayerWinnerInit.cont
	         $1008 = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $101e = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $1037 = WinnerMainIsMaster
	         $1044 = WinnerMainIsMaster.notWonAll5
	         $104a = WinnerMainIsMaster.toNextState
	         $1052 = GameState20_2PlayerWinnerMain
	         $1066 = GameState20_2PlayerWinnerMain.end
	         $106f = GoPastWinnerGameStates
	         $1076 = ProcessWinnerMainTimer
	         $109e = ProcessWinnerMainTimer.afterTimerCheck
	         $10bc = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $10c8 = ProcessWinnerMainTimer.hideBabySprite
	         $10cc = ProcessWinnerMainTimer.end
	         $10dc = GameState1e_2PlayerLoserInit
	         $10ea = GameState1e_2PlayerLoserInit.cont
	         $10f9 = GameState1e_2PlayerLoserInit.loadSadSprites
	         $110f = GameState1e_2PlayerLoserInit.copySadSprites
	         $1128 = LoserMainIsMaster
	         $1135 = LoserMainIsMaster.notLost5
	         $113b = LoserMainIsMaster.toNextState
	         $1143 = GameState21_2PlayerLoserMain
	         $1157 = GameState21_2PlayerLoserMain.end
	         $1160 = GoPastLoserGameStates
	         $1167 = ProcessLoserMainTimer
	         $1188 = ProcessLoserMainTimer.afterTimerCheck
	         $11ac = ProcessLoserMainTimer.turnAdultToBigGas
	         $11bc = ProcessLoserMainTimer.hideAdultSprite
	         $11c0 = ProcessLoserMainTimer.end
	         $11d0 = DisplayTextPushStart
	         $11ec = DisplayTextPushStart.loop
	         $11f2 = DisplayTextPushStart.done
	         $11f5 = DisplayTextPushStart.sprites
	         $1219 = ClearPushStartText
	         $1222 = ClearPushStartText.loop
	         $1228 = LoadWinnerLoserScreen
	         $1277 = LoadWinnerLoserScreen.afterBGdisplay
	         $127f = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $1299 = LoadWinnerLoserScreen.drawWinnerText
	         $129e = LoadWinnerLoserScreen.afterWinningText
	         $12a9 = LoadWinnerLoserScreen.drawFaces
	         $12cd = LoadWinnerLoserScreen.checkLosingGames
	         $12e7 = LoadWinnerLoserScreen.drawLoserText
	         $12ec = LoadWinnerLoserScreen.afterLosingText
	         $12f7 = LoadWinnerLoserScreen.drawFaces2
	         $1310 = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $1320 = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $1328 = DrawCfaces
	         $1328 = DrawCfaces.nextFace
	         $1330 = DrawCfaces.nextRow
	         $1343 = ProcessDeuceAdvantageLogic
	         $1361 = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $136a = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $136e = ProcessDeuceAdvantageLogic.won4
	         $1370 = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $1373 = ProcessDeuceAdvantageLogic.clearAdvantages
	         $1379 = ProcessDeuceAdvantageLogic.wasDeuce
	         $1380 = ProcessDeuceAdvantageLogic.clearDeuce
	         $1384 = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $1388 = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $138f = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $1396 = CopyAndUnderlineTextDEtoHL_Bbytes
	         $1398 = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $13a6 = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $13ab = TextDeuce
	         $13b1 = TextMarioWins
	         $13bc = TextLuigiWins
	         $13c7 = TextAdvantage
	         $13d0 = GameState1f_Post2PlayerResults
	         $13f8 = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $13fd = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $1416 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $1418 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $141e = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $1425 = GameState26_ShuttleSceneInit
	         $1470 = DisplayRocketScene
	         $14a9 = GameState27_ShuttleSceneShowClouds
	         $14bf = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $14c8 = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $14df = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $14e8 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $1507 = GameState02_ShuttleSceneLiftoff
	         $153a = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $153e = GameState03_ShuttleSceneShootFire
	         $1560 = GameState03_ShuttleSceneShootFire.checkTimer2
	         $1570 = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $1576 = GameState2c_ShuttleSceneShowCongratulations
	         $15b8 = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $15c8 = GameState2d_CongratsWaitingBeforeBTypeScore
	         $15c8 = GameState2c_ShuttleSceneShowCongratulations.end
	         $15e3 = GameState34_PreRocketSceneWait
	         $15ec = GameState2e_RocketSceneInit
	         $1619 = GameState2f_RocketSceneShowClouds
	         $162f = GameState30_PoweringUp
	         $1638 = GameState30_PoweringUp.liftingOff
	         $1646 = GameState31_RocketSceneLiftOff
	         $1679 = GameState31_RocketSceneLiftOff.toggleVisibility
	         $167d = GameState32_RocketSceneShootFire
	         $1697 = GameState32_RocketSceneShootFire.checkTimer2
	         $16a7 = GameState32_RocketSceneShootFire.copySpecsToOam
	         $16ad = GameState33_RocketSceneEnd
	         $16c7 = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $16d9 = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $16e8 = ShuttleMetalStructureLeft
	         $16ef = ShuttleMetalStructureRight
	         $16f6 = RocketMetalStructureLeft
	         $16fd = RocketMetalStructureRight
	         $1704 = CopyDEintoHLsColumn_Bbytes
	         $1704 = CopyDEintoHLsColumn_Bbytes.loop
	         $1711 = GameState08_GameMusicTypeInit
	         $171c = GameMusicTypeInitWithoutDisablingSerialRegs
	         $174f = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $175e = Stub_148c
	         $175f = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $1764 = SetSpriteSpecCoordsForMusicType
	         $177a = SetSpriteSpecCoordsForMusicType.coords
	         $1782 = GameState0f_MusicTypeMain
	         $179a = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $17b2 = GameState0f_MusicTypeMain.setMusicType
	         $17b9 = GameState0f_MusicTypeMain.copyToShadowOam
	         $17bd = GameState0f_MusicTypeMain.pressedUp
	         $17c5 = GameState0f_MusicTypeMain.pressedRight
	         $17d0 = GameState0f_MusicTypeMain.pressedLeft
	         $17db = GameState0f_MusicTypeMain.pressedB
	         $17e4 = GameState0f_MusicTypeMain.not2player
	         $17e9 = PlaySongBasedOnMusicTypeChosen
	         $17f3 = PlaySongBasedOnMusicTypeChosen.playSong
	         $17f7 = GameState0e_GameTypeMain
	         $181d = GameState0e_GameTypeMain.pressedRight
	         $1825 = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $1830 = GameState0e_GameTypeMain.setSpecIdx
	         $1831 = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $1835 = GameState0e_GameTypeMain.pressedStart
	         $1844 = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $1849 = GameState0e_GameTypeMain.pressedA
	         $184d = GameState10_ATypeSelectionInit
	         $1891 = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $1893 = GameState10_ATypeSelectionInit.setGameState
	         $1896 = GameState11_ATypeSelectionMain
	         $18c8 = GameState11_ATypeSelectionMain.pressedRight
	         $18cd = GameState11_ATypeSelectionMain.setNewLevel
	         $18da = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $18de = GameState11_ATypeSelectionMain.pressedLeft
	         $18e4 = GameState11_ATypeSelectionMain.pressedUp
	         $18ec = ATypeLevelsCoords
	         $1900 = GameState12_BTypeSelectionInit
	         $194c = GameState12_BTypeSelectionInit.setEnterHiScore
	         $1951 = GameState13_setGameStateMakeSpriteVisible
	         $1956 = GameState13_BTypeSelectionMain
	         $198a = GameState13_BTypeSelectionMain.pressedRight
	         $198f = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $199c = GameState13_BTypeSelectionMain.sendToOam
	         $19a0 = GameState13_BTypeSelectionMain.pressedLeft
	         $19a6 = GameState13_BTypeSelectionMain.pressedUp
	         $19ae = BTypeLevelsCoords
	         $19c2 = GameState14_setGameStateMakeSpriteVisible
	         $19c7 = GameState14_BTypeHighMain
	         $19f9 = GameState14_BTypeHighMain.pressedRight
	         $19fe = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1a0b = GameState14_BTypeHighMain.sendToOam
	         $1a0f = GameState14_BTypeHighMain.pressedLeft
	         $1a15 = GameState14_BTypeHighMain.pressedUp
	         $1a1d = BTypeHighsCoords
	         $1a29 = UnusedNop_174d
	         $1a2a = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1a31 = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1a42 = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $1a52 = CopyCSpriteSpecStructsFromDEtoHL
	         $1a52 = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $1a55 = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $1a66 = Clear_wOam
	         $1a6c = Clear_wOam.loop
	         $1a71 = DisplayATypeHighScoresForLevel
	         $1a7c = DisplayATypeHighScoresForLevel.decA
	         $1a83 = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1a8b = DisplayBTypeHighScoresForLevel
	         $1a96 = DisplayBTypeHighScoresForLevel.decA1
	         $1a9d = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1aa2 = DisplayBTypeHighScoresForLevel.decA2
	         $1aa9 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $1ab1 = CopyHighScoreValueToRamBuffer
	         $1ab3 = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1ac3 = CopyHighScoreValueToRamBuffer.hasTens
	         $1acd = CopyHighScoreValueToRamBuffer.storeDigits
	         $1ad3 = CopyHLtoDEbackwards_3bytes
	         $1ad5 = CopyHLtoDEbackwards_Bbytes.loop
	         $1ad5 = CopyHLtoDEbackwards_Bbytes
	         $1adc = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1ae4 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1aea = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1af5 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $1afe = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $1b10 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1b18 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $1b1d = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $1b34 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $1b3e = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $1b42 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $1b5c = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $1b67 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $1b86 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $1b89 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1b92 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1ba6 = DisplayHighScoresAndNamesForLevel
	         $1bb2 = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1bb3 = DisplayHighScoresAndNamesForLevel.next6chars
	         $1bb5 = DisplayHighScoresAndNamesForLevel.copyName
	         $1bd3 = DisplayHighScoresAndNamesForLevel.end
	         $1bd8 = DisplayDottedLinesForHighScore
	         $1be2 = DisplayDottedLinesForHighScore.nextRow
	         $1be5 = DisplayDottedLinesForHighScore.nextCol
	         $1bef = GameState15_EnteringHighScore
	         $1bf7 = GameState15_EnteringHighScore.decA
	         $1bfd = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1c1d = GameState15_EnteringHighScore.setTile
	         $1c20 = GameState15_EnteringHighScore.afterTimerCheck
	         $1c44 = GameState15_EnteringHighScore.done
	         $1c58 = GameState15_EnteringHighScore.setGameState
	         $1c5b = GameState15_EnteringHighScore.upHeld
	         $1c63 = GameState15_EnteringHighScore.upPressed
	         $1c6e = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1c74 = GameState15_EnteringHighScore.incChar
	         $1c75 = GameState15_EnteringHighScore.setChar
	         $1c7c = GameState15_EnteringHighScore.notUpLastChar
	         $1c84 = GameState15_EnteringHighScore.downHeld
	         $1c8c = GameState15_EnteringHighScore.downPressed
	         $1c97 = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1c9e = GameState15_EnteringHighScore.decChar
	         $1ca1 = GameState15_EnteringHighScore.notDownLastChar
	         $1ca8 = GameState15_EnteringHighScore.aPressed
	         $1cc3 = GameState15_EnteringHighScore.setNextCharLoc
	         $1cca = GameState15_EnteringHighScore.bPressed
	         $1cda = StoreAinHLwhenLCDFree
	         $1cdb = StoreBinHLwhenLCDFree
	         $1cdb = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1ce3 = GameState0a_InGameInit
	         $1d20 = GameState0a_InGameInit.afterGameTypeCheck
	         $1d52 = GameState0a_InGameInit.afterHardModeCheck
	         $1d70 = GameState0a_InGameInit.setNumLinesCompleted
	         $1d79 = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $1d87 = GameState0a_InGameInit.afterPieceHiddenCheck
	         $1db7 = GameState0a_InGameInit.notDemo
	         $1dc1 = GameState0a_InGameInit.end
	         $1dc9 = SetNumFramesUntilPiecesMoveDown
	         $1dda = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $1ddb = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $1de7 = SetNumFramesUntilPiecesMoveDown.framesData
	         $1dfc = PopulateDemoBTypeScreenWithBlocks
	         $1e04 = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $1e07 = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $1e21 = PopulateDemoBTypeScreenWithBlocks.layout
	         $1e49 = PopulateGameScreenWithRandomBlocks
	         $1e4a = PopulateGameScreenWithRandomBlocks.decB
	         $1e50 = PopulateGameScreenWithRandomBlocks.mainLoop
	         $1e53 = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $1e55 = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $1e60 = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $1e6c = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $1e6e = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $1e81 = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $1e82 = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $1e8e = PopulateGameScreenWithRandomBlocks.from2player
	         $1ea3 = PopulateGameScreenWithRandomBlocks.toNextRow
	         $1ea9 = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $1eaf = GameState00_InGameMain
	         $1ed5 = InGameCheckResetAndPause.startNotPressed
	         $1ed5 = InGameCheckResetAndPause
	         $1ee4 = InGameCheckResetAndPause.setPieceVisibility
	         $1eeb = InGameCheckResetAndPause.pieceNotHidden
	         $1eee = InGameCheckResetAndPause.start
	         $1f20 = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $1f2e = InGameCheckResetAndPause.setNextPieceVisibility
	         $1f31 = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $1f3b = InGameCheckResetAndPause.gameUnPaused
	         $1f4b = InGameCheckResetAndPause.is2Player
	         $1f69 = InGame2PlayerCheckUnpaused
	         $1f82 = InGame2PlayerCheckUnpaused.isPassive
	         $1f8b = InGame2PlayerCheckUnpaused.gameUnpaused
	         $1fa2 = InGame2PlayerCheckUnpaused.loop
	         $1faa = InGame2PlayerCheckUnpaused.popHL
	         $1fac = Display2PlayerPauseText
	         $1fb4 = Display2PlayerPauseText.loop
	         $1fbe = Display2PlayerPauseText.text
	         $1fc3 = GameState01_GameOverInit
	         $1fe7 = GameState04_LevelEndedMain
	         $1ff0 = GameState04_LevelEndedMain.aOrStartPressed
	         $2004 = GameState04_LevelEndedMain.setGameState
	         $2007 = GameState05_BTypeLevelFinished
	         $2043 = GameState05_BTypeLevelFinished.clearScore
	         $2047 = GameState05_BTypeLevelFinished.fromLevel0
	         $2065 = DisplayBTypeScoreMultipliersBasedOnLevel
	         $206c = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $2074 = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $2083 = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $2092 = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $2098 = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $20a1 = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $20af = GameState22_DancersInit
	         $20e0 = GameState22_DancersInit.setNextDancerAnimDetails
	         $20f5 = GameState22_DancersInit.numDancersInB
	         $20fe = GameState22_DancersInit.loopSetVisible
	         $2117 = Dancers_AnimationTimers
	         $2121 = GameState23_sendDancersToOam
	         $2127 = GameState23_DancersMain
	         $2137 = GameState23_DancersMain.nextDancer
	         $2150 = GameState23_DancersMain.toNextDancer
	         $216c = GameState23_DancersMain.setGameState
	         $216f = GameState23_DancersMain.isJumperStanding
	         $2175 = GameState23_DancersMain.isJumperJumping
	         $217b = After4ScoreCategoriesProcessed
	         $21bd = ProcessScoreUpdatesAfterBTypeLevelDone
	         $21f8 = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $21fc = GameState0c_UnusedPreShuttleLiftOff
	         $2205 = GameState0d_GameOverScreenClearing
	         $221d = GameState0d_GameOverScreenClearing.is1player
	         $2252 = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $2254 = GameState0d_GameOverScreenClearing.setGameState
	         $2257 = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $2263 = CopyGameScreenInnerText
	         $2263 = CopyGameScreenInnerText.nextRow
	         $2266 = CopyGameScreenInnerText.nextCol
	         $2277 = AddOnCompletedLinesScore
	         $22a9 = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $22af = AddOnCompletedLinesScore.loop
	         $22bd = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $22c3 = FillGameScreenBufferWithTileA
	         $22cb = FillGameScreenBufferWithTileA.nextRow
	         $22ce = FillGameScreenBufferWithTileA.nextCol
	         $22d8 = FillBottom2RowsOfTileMapWithEmptyTile
	         $22e2 = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $22e4 = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $22ed = PlayNextPieceLoadNextAndHiddenPiece
	         $230a = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $2319 = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $2327 = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $2329 = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $232c = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $232d = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $233a = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $2348 = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $234b = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $2357 = InGameHandlePieceFalling.holdingDown
	         $2357 = InGameHandlePieceFalling
	         $2369 = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $2382 = InGameHandlePieceFalling.start
	         $238a = InGameHandlePieceFalling.afterPressedDown
	         $2397 = InGameHandlePieceFalling.sendActivePieceToOam
	         $239b = InGameHandlePieceFalling.currScoreEqu0
	         $23a8 = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $23e6 = InGameHandlePieceFalling.clearTimesHoldingDown
	         $23e9 = InGameHandlePieceFalling.fromNotHoldingDown
	         $240a = InGameHandlePieceFalling.skipGameOver
	         $240c = InGameHandlePieceFalling.isAType
	         $240d = InGameHandlePieceFalling.keepAdding
	         $2414 = InGameHandlePieceFalling.addDropsToScore
	         $2424 = InGameCheckIfAnyTetrisRowsComplete
	         $2439 = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $243c = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $2451 = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $2481 = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $2490 = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $24b5 = InGameCheckIfAnyTetrisRowsComplete.end
	         $24be = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $24c1 = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $24c6 = FlashCompletedTetrisRows
	         $24dc = FlashCompletedTetrisRows.upperOuterLoop
	         $24ec = FlashCompletedTetrisRows.flashRow
	         $24ee = FlashCompletedTetrisRows.flashRowLoop
	         $24f7 = FlashCompletedTetrisRows.incFlashCount
	         $2505 = FlashCompletedTetrisRows.flashed7times
	         $2510 = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $2514 = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $251e = FlashCompletedTetrisRows.origTileCopyLoop
	         $252e = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $2533 = ShiftEntireGameRamBufferDownARow
	         $2540 = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $254b = ShiftEntireGameRamBufferDownARow.nextRow
	         $254e = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $256d = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $2579 = ClearPointersToCompletedTetrisRows
	         $257f = ClearPointersToCompletedTetrisRows.loop
	         $2584 = CopyRamBufferRow17ToVram
	         $2593 = CopyRamBufferRow16ToVram
	         $25a2 = CopyRamBufferRow15ToVram
	         $25b1 = CopyRamBufferRow14ToVram
	         $25c0 = CopyRamBufferRow13ToVram
	         $25cf = CopyRamBufferRow12ToVram
	         $25de = CopyRamBufferRow11ToVram
	         $25f5 = CopyRamBufferRow11ToVram.loop
	         $25fb = CopyRamBufferRow11ToVram.is2Player
	         $2609 = CopyRamBufferRow10ToVram
	         $2618 = CopyRamBufferRow9ToVram
	         $2627 = CopyRamBufferRow8ToVram
	         $2636 = CopyRamBufferRow7ToVram
	         $2645 = CopyRamBufferRow6ToVram
	         $2654 = CopyRamBufferRow5ToVram
	         $2663 = CopyRamBufferRow4ToVram
	         $2672 = CopyRamBufferRow3ToVram
	         $2684 = CopyRamBufferRow2ToVram
	         $269d = CopyRamBufferRow1ToVram
	         $26b2 = CopyRamBufferRow0ToVram
	         $26cf = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $26e5 = CopyRamBufferRow0ToVram.displayLines
	         $2704 = CopyRamBufferRow0ToVram.is1playerEnd
	         $270e = CopyRamBufferRow0ToVram.setGameState
	         $2711 = CopyRamBufferRow0ToVram.playNextPiece
	         $2715 = CopyRamBufferRow0ToVram.is2player
	         $2721 = DisplayGameATypeScoreIfInGameAndForced
	         $2731 = CheckIfATypeNextLevelReached
	         $2764 = CheckIfATypeNextLevelReached.nextDigit
	         $277a = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $2783 = ABisBCDofValInHL
	         $2788 = ABisBCDofValInHL.loop
	         $2790 = ABisBCDofValInHL.copyAtoB
	         $2792 = CopyRamBufferRowToVram
	         $2794 = CopyRamBufferRowToVram.loop
	         $27a1 = InGameCheckButtonsPressed
	         $27c0 = InGameCheckButtonsPressed.pressedAAnimation0
	         $27c6 = InGameCheckButtonsPressed.pressedB
	         $27d0 = InGameCheckButtonsPressed.pressedBAnimation3
	         $27d4 = InGameCheckButtonsPressed.afterRotation
	         $27ef = InGameCheckButtonsPressed.afterCollisionCheck
	         $280d = InGameCheckButtonsPressed.pressedRight
	         $2820 = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $282f = InGameCheckButtonsPressed.notHeldLeft
	         $2832 = InGameCheckButtonsPressed.notHeldRight
	         $2844 = InGameCheckButtonsPressed.pressedLeft
	         $2859 = RetZIfNoCollisionForPiece
	         $285e = RetZIfNoCollisionForPiece.nextSprite
	         $287c = RetZIfNoCollisionForPiece.fromXis0
	         $2880 = RetZIfNoCollisionForPiece.notEmpty
	         $2887 = InGameAddPieceToVram
	         $2891 = InGameAddPieceToVram.nextSquareOfPiece
	         $28a3 = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $28bb = InGameAddPieceToVram.nextState
	         $28c5 = ConvertFromObjectTileToBGTile
	         $28d1 = ConvertFromObjectTileToBGTile.subForFxValues
	         $28d3 = ConvertFromObjectTileToBGTile.getOffset
	         $28d8 = PieceTileConversionLookUpTable
	         $28e4 = ProcessCurrentScoreCategory
	         $2902 = ProcessCurrentScoreCategory.afterDisplaying10s
	         $2907 = ProcessCurrentScoreCategory.addCategScore
	         $2923 = ProcessCurrentScoreCategory.addToTotalScore
	         $2931 = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $2944 = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $2945 = IncScoreCategoryProcessedAfterBTypeDone
	         $295c = ClearScoreCategoryVarsAndTotalScore
	         $2962 = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $296b = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $2970 = ConvertHexToDec
	         $2971 = ConvertHexToDec.convertLoop
	         $2977 = UpdateClock
	         $297c = UpdateClock.afterPrepare
	         $2987 = UpdateClock.loopa
	         $29a1 = UpdateClock.loopb
	         $29b5 = ColonTile
	         $29c5 = UnusedStoreBCDByteInHLInDestDE
	         $29d1 = Copy2SpriteSpecsToShadowOam
	         $29d3 = CopyASpriteSpecsToShadowOam
	         $29e3 = Copy1stSpriteSpecToSprite4
	         $29f6 = Copy2ndSpriteSpecToSprite8
	         $2a09 = DisplayBlackColumnFromHLdown
	         $2a10 = DisplayBlackColumnFromHLdown.loop
	         $2a16 = CopyDEintoHLwhileFFhNotFound
	         $2a16 = CopyDEintoHLwhileFFhNotFound.loop
	         $2a1e = StubInterruptHandler
	         $2a1f = SpriteSpecStruct_LPieceActive
	         $2a27 = SpriteSpecStruct_LPieceNext
	         $2a2f = SpriteSpecStruct_GameMusicAType
	         $2a3b = SpriteSpecStruct_ATypeFlashing0
	         $2a41 = SpriteSpecStruct_BTypeLevelAndHigh
	         $2a4d = SpriteSpecStruct_2PlayerHighsFlashing1
	         $2a59 = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $2a6b = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $2a7d = SpriteSpecStruct_MariosFacingAway
	         $2a89 = SpriteSpecStruct_LuigisFacingAway
	         $2a95 = SpriteSpecStruct_Dancers
	         $2ad1 = SpriteSpecStruct_ShuttleAndGas
	         $2ae3 = SpriteSpecStruct_RocketAndGas
	         $2af5 = FillScreen0FromHLdownWithEmptyTile
	         $2af8 = FillScreenFromHLdownWithEmptyTile
	         $2afb = FillScreenFromHLdownWithEmptyTile.loop
	         $2b04 = CopyHLtoDE_BCbytes
	         $2b04 = CopyHLtoDE_BCbytes.loop
	         $2b0d = LoadAsciiAndMenuScreenGfx
	         $2b28 = CopyAsciiTileData
	         $2b31 = CopyAsciiTileData.loop
	         $2b3c = CopyAsciiAndTitleScreenTileData
	         $2b5b = UnusedCopyHLtoVram1000hBytes
	         $2b5e = CopyHLtoVramBCbytes
	         $2b64 = Stub_27ea
	         $2b65 = CopyLayoutToScreen0
	         $2b68 = CopyLayoutToHL
	         $2b6a = CopyLayoutBrowsToHL
	         $2b6a = CopyLayoutBrowsToHL.loopRow
	         $2b6d = CopyLayoutBrowsToHL.loopCol
	         $2b7e = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $2b7e = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $2b81 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $2b94 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $2b9a = TurnOffLCD
	         $2ba2 = TurnOffLCD.waitUntilInVBlank
	         $2bb3 = GameInnerScreenLayout_Pause
	         $2c03 = GameScreenLayout_ScoreTotals
	         $2cb8 = GameInnerScreenLayout_GameOver
	         $2cf0 = GameInnerScreen_TryAgain
	         $2d20 = PollInput
	         $2d5d = GetScreen0AddressOfPieceSquare
	         $2d70 = GetScreen0AddressOfPieceSquare.loop
	         $2d8a = UnusedMovePieceUpAndRight
	         $2d92 = UnusedMovePieceUpAndRight.deDiv16
	         $2db0 = DisplayBCDNum6DigitsIfForced
	         $2db4 = DisplayBCDNum6Digits
	         $2db6 = DisplayBCDNum2CDigits
	         $2db9 = DisplayBCDNum2CDigits.nextByte
	         $2dca = DisplayBCDNum2CDigits.displayTens
	         $2de0 = DisplayBCDNum2CDigits.displayOnes
	         $2de9 = DisplayBCDNum2CDigits.tensNot0
	         $2df1 = DisplayBCDNum2CDigits.onesNot0
	         $2df9 = OamDmaFunction
	         $2dff = OamDmaFunction.wait
	         $2e03 = CopyToShadowOamBasedOnSpriteSpec
	         $2e08 = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $2e16 = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $2e28 = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $2e2d = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $2e2f = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $2e34 = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $2e57 = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $2e72 = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $2e76 = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $2e7a = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $2e8d = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $2e97 = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $2eac = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $2eb6 = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $2ec8 = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $2eca = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	         $2ee6 = ConvertFromBgTileToObjectTile
	         $2efb = ConvertFromBgTileToObjectTile.pastGarbageBlock
	         $2f02 = ConvertFromBgTileToObjectTile.pastGarbageBlock2
	         $2f09 = ConvertFromBgTileToObjectTile.isHorIPieceEnd
	SECTION: $2f0c-$3856 ($094b bytes) ["Sound Engine"]
	         $2f0c = SquareSoundEffectTable_Init
	         $2f1c = SquareSoundEffectTable_Update
	         $2f2c = NoiseSoundEffect_Init
	         $2f34 = NoiseSoundEffect_Update
	         $2f3c = SongsSoundChannelsData
	         $2f5e = Stub
	         $2f5f = UpdateSound
	         $2f74 = UpdateSound.endPath
	         $2f86 = UpdateSound.dontUnset
	         $2f9b = UpdateSound.done
	         $2fb0 = UpdateSound.gameJustPaused
	         $2fdc = UpdateSound.setAud2RegsToPause1
	         $2fdf = UpdateSound.copyIntoAud2Regs
	         $2fe4 = UpdateSound.setAud2RegsToPause2
	         $2fe9 = UpdateSound.gameJustUnpaused
	         $2fef = UpdateSound.processPausedCounter
	         $3007 = Aud2RegVals_Pause1
	         $300b = Aud2RegVals_Pause2
	         $300f = IsSoundEffect_MovingSelection
	         $3015 = IsSoundEffect_TetrisRowsFell
	         $301b = IsSoundEffect_4LinesCleared
	         $3021 = IsSoundEffect_ReachedNextLevel
	         $3027 = Aud1RegValsInit_MovingSelection
	         $302c = Aud1RegValsUpdate_MovingSelection
	         $3031 = Aud1RegValsInit_ConfirmOrLetterTyped
	         $3036 = SquareEffectInit_MovingSelection
	         $303e = SquareEffectUpdate_MovingSelection
	         $3052 = SquareEffectInit_ConfirmOrLetterTyped
	         $305a = SquareEffectUpdate_Common
	         $305f = ClearAud1RegsAndVars
	         $3073 = Aud1RegVals_4LinesCleared_1
	         $3078 = Aud1RegVals_4LinesCleared_2
	         $307d = SquareEffectInit_4LinesCleared
	         $3083 = SquareEffectUpdate_4LinesCleared
	         $309a = SquareEffectUpdate_4LinesCleared.finalWav
	         $30a3 = SquareEffectUpdate_4LinesCleared.sound2
	         $30a9 = SquareEffectUpdate_4LinesCleared.sound1
	         $30af = Aud1RegValsInit_PieceMovedHoriz
	         $30b4 = SquareEffectInit_PieceMovedHoriz
	         $30cc = Aud1RegVals_ReachedNextLevel_0and4
	         $30d1 = Aud1RegVals_ReachedNextLevel_1
	         $30d6 = Aud1RegVals_ReachedNextLevel_2
	         $30db = Aud1RegVals_ReachedNextLevel_3
	         $30e0 = SquareEffectInit_ReachedNextLevel
	         $30ec = SquareEffectUpdate_ReachedNextLevel
	         $310c = SquareEffectUpdate_ReachedNextLevel.sound1
	         $3111 = SquareEffectUpdate_ReachedNextLevel.sound2
	         $3116 = SquareEffectUpdate_ReachedNextLevel.sound3
	         $311b = SquareEffectUpdate_ReachedNextLevel.sound4
	         $311e = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $3121 = Aud1RegValsInit_Non4LinesCleared
	         $3126 = Aud1EnvData_Non4LinesCleared
	         $3131 = Aud1FreqLoData_Non4LinesCleared
	         $313b = SquareEffectInit_Non4LinesCleared
	         $314f = SquareEffectUpdate_Non4LinesCleared
	         $316d = SetAud1EnvLowHighToEDB
	         $3178 = Aud1RegValsInit_PieceRotated
	         $317d = Aud1EnvData_PieceRotated
	         $3183 = Aud1FreqLoData_PieceRotated
	         $3188 = SquareEffectInit_PieceRotated
	         $31a0 = SquareEffectUpdate_PieceRotated
	         $31c0 = SquareEffectInit_TetrisRowsFell
	         $31cc = Aud1RegValsInit_TetrisRowsFell
	         $31d1 = Aud4RegValsInit_PieceHitFloor
	         $31d5 = Aud4RegValsInit_TetrisRowsFell
	         $31d9 = Aud4RegValsInit_RocketGas
	         $31dd = Aud4RegValsInit_RocketFire
	         $31e1 = Aud4RegValsUpdate_RocketFire_Poly
	         $3205 = Aud4RegValsUpdate_RocketFire_Env
	         $3229 = NoiseEffectInit_RocketGas
	         $3231 = NoiseEffectInit_RocketFire
	         $3239 = NoiseEffectUpdate_RocketFire
	         $3260 = NoiseEffectInit_TetrisRowsFell
	         $3268 = NoiseEffectInit_PieceHitFloor
	         $3270 = NoiseEffectUpdate_Common
	         $3275 = NoiseEffectUpdate_ClearNoise
	         $3287 = Aud3RegValsInit_GameOver
	         $328c = WavEffectInit_GameOver
	         $32a3 = WavEffectUpdate_GameOver
	         $32b6 = WavEffectUpdate_GameOver.setAud3Low
	         $32be = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $32c8 = UpdateWavEffects
	         $32e3 = Aud3RegValsInit_After4LinesCleared
	         $32e8 = Aud3RegValsUpdate_After4LinesCleared_1
	         $32ed = Aud3RegValsUpdate_After4LinesCleared_2
	         $32f2 = Aud3RegValsUpdate_After4LinesCleared_3
	         $32f7 = WavEffectInit_After4LinesCleared
	         $330c = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $330f = WavEffectUpdate_sound1
	         $3320 = WavEffectUpdate_sound2
	         $3331 = WavEffectUpdate_sound3
	         $3342 = WavEffectUpdate_After4LinesCleared
	         $3364 = WavEffectUpdate_After4LinesCleared.incLowVal
	         $3368 = WavEffectUpdate_After4LinesCleared.decLowVal
	         $336a = WavEffectUpdate_After4LinesCleared.setLowVal
	         $336e = ClearWavVarsAndRegs_ResumeMusic
	         $3394 = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $3399 = InitWavEffect_pauseOtherChannels
	         $33be = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $33c2 = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $33e2 = CopyDefaultValsInHLIntoAud1Regs
	         $33e9 = CopyDefaultValsInHLIntoAud2Regs
	         $33f0 = CopyDefaultValsInHLIntoAud3Regs
	         $33f7 = CopyDefaultValsInHLIntoAud4Regs
	         $33fc = CopyDefaultValsInHLIntoAudCRegs
	         $33fc = CopyDefaultValsInHLIntoAudCRegs.loop
	         $3404 = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $3408 = HLequAddressForSongData_tableHL_incE
	         $3417 = IncCounterInDE_retZifHitsThreshold
	         $3422 = IncCounterInDE_retZifHitsThreshold.done
	         $3424 = CopyFromHLintoWav3Ram
	         $3427 = CopyFromHLintoWav3Ram.loop
	         $3431 = InitSound
	         $3453 = ResetSoundHwRegs
	         $3469 = UpdateSquareEffects
	         $347c = UpdateSquareEffects.noSquareEffectToPlay
	         $3488 = UpdateSquareEffects.done
	         $3489 = UpdateNoiseEffects
	         $349c = UpdateNoiseEffects.noNoiseEffectToPlay
	         $34a8 = UpdateNoiseEffects.done
	         $34a9 = MuteSound
	         $34ad = InitSong
	         $34c8 = SetSongsAudTermVars
	         $34d0 = SetSongsAudTermVars.nextSong
	         $34d9 = SetSongsAudTermVars.setSongVars
	         $34f1 = SetSongsAudTermRegs
	         $351b = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $3526 = SetSongsAudTermRegs.afterDecidingWavOutput
	         $3530 = SetSongsAudTermRegs.setAudTermToB
	         $3531 = SetSongsAudTermRegs.setAudTerm
	         $3534 = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $3538 = SetSongsAudTermRegs.use1stOutputValue
	         $353d = SetSongsAudTermRegs.notTimeToSwapOutput
	         $354a = SongAudTermData
	         $358e = StoreWordInWordInHLintoDE
	         $3599 = StoreWordInHLIintoDE
	         $359f = SetSongsInitialSoundChannelVars
	         $35f6 = SetSongsInitialSoundChannelVars.loop
	         $3609 = ProcessSoundByte9dh_SetParams.aud3
	         $3609 = ProcessSoundByte9dh_SetParams
	         $3615 = ProcessSoundByte9dh_SetParams.start
	         $363f = ProcessSoundByte9dh_SetParams.end
	         $3645 = IncWordInHL
	         $364b = IncWordInHL.store
	         $3651 = IncWordTwiceInHL
	         $365a = GetABInWordStoredInHL
	         $3661 = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $3661 = UpdateMusic
	         $3664 = UpdateMusic.processCurrSoundByteEnvelope
	         $367b = UpdateMusic.passedWaveEnvelope
	         $3690 = UpdateMusic.toNextSndChannelFromStructIdx2
	         $3695 = UpdateMusic.setNextAddrInCurrSndChannelData
	         $369c = UpdateMusic.afterSpecialSoundByteAddress
	         $36b0 = UpdateMusic.sndChannelAddrEquFFFFh
	         $36c7 = UpdateMusic.stopCurrSong
	         $36d0 = UpdateMusic.start
	         $36de = UpdateMusic.nextSoundChannel
	         $36e8 = UpdateMusic.afterSettingSoundDataAddress
	         $36ea = UpdateMusic.processNextSoundByte
	         $3717 = UpdateMusic.contSoundByte
	         $3743 = UpdateMusic.soundByte01
	         $3748 = UpdateMusic.getNoiseDataToWrite
	         $3750 = UpdateMusic.noiseLoop
	         $375f = UpdateMusic.getNonNoiseDataToWrite
	         $3779 = UpdateMusic.contWave
	         $3784 = UpdateMusic.startWritingToSq2
	         $3788 = UpdateMusic.startWritingToSq1
	         $378d = UpdateMusic.afterChoosingSndChannelBaseReg
	         $3796 = UpdateMusic.after_hasWavRam
	         $3799 = UpdateMusic.fromWav
	         $37a2 = UpdateMusic.afterDisabledEnvelopeCheck
	         $37c0 = UpdateMusic.skippingHwRegWrites
	         $37c5 = UpdateMusic.toNextSndChannel
	         $37d6 = UpdateMusic.done
	         $37e3 = UpdateMusic.hasWavRam
	         $37ea = GetEinDEplusBdiv2
	         $37f3 = WriteToFrequencyRegsAdjustedWithEnvelope
	         $3815 = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $3817 = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $382d = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $3832 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $383e = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $384b = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $384d = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $384e = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $3857-$3fef ($0799 bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $07cc bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7f27 ($384d bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Layout_ATypeInGame
	         $56db = Gfx_MenuScreens.end
	         $5843 = Layout_BTypeInGame
	         $59ab = Gfx_Ascii
	         $5ae3 = Gfx_Ascii.end
	         $5ae3 = Gfx_TitleScreen
	         $6293 = Layout_Copyright
	         $6293 = Gfx_TitleScreen.end
	         $63fb = Layout_TitleScreen
	         $6653 = Layout_GameMusicTypeScreen
	         $67bb = Layout_ATypeSelectionScreen
	         $6923 = Layout_BTypeSelectionScreen
	         $6a8b = GameScreenLayout_Dancers
	         $6b40 = Layout_RocketScene
	         $6b90 = Layout_MarioLuigiScreen
	         $6cf8 = Layout_2PlayerInGame
	         $6e60 = Layout_MarioScore
	         $6eb0 = Layout_BricksAndLuigiScore
	         $6f28 = Gfx_RocketScene
	         $7f28 = Gfx_RocketScene.end
	EMPTY: $7f28-$7fff ($00d8 bytes)
	TOTAL EMPTY: $00d8 bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$55bf ($03c0 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $5458 = Layout_RocketScene_Sunrise_Sunset
	         $55c0 = Layout_RocketScene_Sunrise_Sunset.end
	EMPTY: $55c0-$7fff ($2a40 bytes)
	TOTAL EMPTY: $2a45 bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4674 ($0475 bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $4458 = Layout_RocketScene_Night
	         $45c0 = GameScreenLayout_Dancers_Night
	         $4675 = GameScreenLayout_Dancers_Night.end
	EMPTY: $4675-$7fff ($398b bytes)
	TOTAL EMPTY: $39db bytes

SRAM bank #0:
	SECTION: $a000-$a002 ($0003 bytes) ["SRAM"]
	         $a000 = sCurrMonth
	         $a001 = sCurrYear
	         $a003 = sCurrYear.end
	EMPTY: $a003-$bfff ($1ffd bytes)
	TOTAL EMPTY: $1ffd bytes

WRAM0 bank #0:
	SECTION: $c000-$dfff ($2000 bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wBTypeHighScores
	         $d654 = wATypeHighScores
	         $d762 = wd762
	         $df70 = wCurrSoundChannelBeingProcessed
	         $df71 = wOrigSoundEffectIdx
	         $df71 = wUnusedShadowAudLen
	         $df72 = wdf72
	         $df75 = wAudTermCounterUntilChangingOutput
	         $df76 = wAudTermCounterValueToHitToChangeOutput
	         $df77 = wAudTermSelectedOutputVal
	         $df78 = wAudTermSongsSpec
	         $df79 = wAudTermOutputValue1
	         $df7a = wAudTermOutputValue2
	         $df7b = wdf7b
	         $df7e = wGamePausedSoundTimer
	         $df7f = wGamePausedActivity
	         $df80 = wUnused_df80
	         $df81 = wSongTempoAddr
	         $df83 = wdf83
	         $df90 = wAudStructs
	         $df90 = wAud1Struct
	         $dfa0 = wAud2Struct
	         $dfb0 = wAud3Struct
	         $dfc0 = wAud4Struct
	         $dfd0 = wdfd0
	         $dfe0 = wSquareSoundToPlay
	         $dfe1 = wSquareEffectBeingPlayed
	         $dfe2 = wSquareEffectFrameCounter
	         $dfe3 = wSquareEffectFrameCounterThreshold
	         $dfe4 = wSquareEffectMiscCounter
	         $dfe5 = wdfe5
	         $dfe8 = wSongToStart
	         $dfe9 = wSongBeingPlayed
	         $dfea = wdfea
	         $dff0 = wWavSoundToPlay
	         $dff1 = wWavEffectBeingPlayed
	         $dff2 = wWavEffectFrameCounter
	         $dff3 = wWavEffectFrameCounterThreshold
	         $dff4 = wWavEffectMiscCounter
	         $dff5 = wWavEffectRandomVal
	         $dff5 = wWavEffectShouldIncOrDec
	         $dff6 = wWavEffectCurrLoVal
	         $dff7 = wdff7
	         $dff8 = wNoiseSoundToPlay
	         $dff9 = wNoiseEffectBeingPlayed
	         $dffa = wNoiseEffectFrameCounter
	         $dffb = wNoiseEffectFrameCounterThreshold
	         $dffc = wNoiseEffectMiscCounter
	         $dffd = wOptionLights
	         $dffe = wOptionColors
	         $dfff = wOptionDayNightCycle
	         $e000 = wOptionDayNightCycle.end
	TOTAL EMPTY: $0000 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 14388 bytes used / 1996 free
	ROMX: 23304 bytes used / 25848 free in 3 banks
	SRAM: 3 bytes used / 8189 free in 1 bank
	WRAM0: 8192 bytes used / 0 free
	HRAM: 127 bytes used / 0 free
