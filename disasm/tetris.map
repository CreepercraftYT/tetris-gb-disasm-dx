ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$3050 ($2f01 bytes) ["Begin"]
	         $0150 = Begin
	         $0153 = UnusedGetScreenTileInHLWhileOamFree
	         $0156 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $015d = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $0166 = AddScoreValueDEontoBaseScoreHL
	         $017e = VBlankInterruptHandler
	         $0199 = VBlankInterruptHandler.afterMasterTransfer
	         $01fe = VBlankInterruptHandler.end
	         $020a = Begin2
	         $0217 = Begin2.clear2ndWram
	         $021e = Reset
	         $0236 = Reset.waitUntilVBlank
	         $0263 = Reset.clearLastPage
	         $026e = Reset.clear1stWram
	         $027d = Reset.clearVram
	         $0289 = Reset.clearOam
	         $0292 = Reset.clearHram
	         $029d = Reset.copyOamDmaFunc
	         $02c7 = MainLoop
	         $02de = MainLoop.nextTimer
	         $02ea = MainLoop.toNextTimer
	         $02f7 = MainLoop.waitUntilVBlankIntDone
	         $0302 = ProcessGameState
	         $0373 = GameState24_CopyrightDisplay
	         $0396 = GameState24_CopyrightDisplay.adjLoopA
	         $039c = GameState24_CopyrightDisplay.noPalAdjA
	         $03b9 = GameState24_CopyrightDisplay.adjLoopB
	         $03bf = GameState24_CopyrightDisplay.noPalAdjB
	         $03e2 = GameState24_CopyrightDisplay.copyLoop
	         $03f7 = GameState25_CopyrightWaiting
	         $040e = GameState35_CopyrightCanContinue
	         $041c = GameState35_CopyrightCanContinue.setNewState
	         $0421 = GameState06_TitleScreenInit
	         $0446 = GameState06_TitleScreenInit.clearScreenBuffer
	         $0461 = GameState06_TitleScreenInit.displayBlackRow
	         $0479 = GameState06_TitleScreenInit.sunriseOrSunset
	         $047e = GameState06_TitleScreenInit.night
	         $0481 = GameState06_TitleScreenInit.copy
	         $04c0 = PlayDemo
	         $0500 = PlayDemo.setDemoPlayed
	         $051a = UnusedSetRecordingDemo
	         $051f = GameState07_TitleScreenMain
	         $052e = GameState07_TitleScreenMain.afterTimerCheck
	         $054a = GameState07_TitleScreenMain.checkButtonsPressed
	         $0583 = !0
	         $0587 = GameState07_TitleScreenMain.scrollLoop
	         $058e = !1
	         $059d = GameState07_TitleScreenMain.playerChecks
	         $05b4 = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $05be = GameState07_TitleScreenMain.setGameStateTo2ah
	         $05c0 = GameState07_TitleScreenMain.setGameState
	         $05ce = GameState07_TitleScreenMain.is1Player
	         $05d7 = GameState07_TitleScreenMain.afterUpCheck
	         $05da = GameState07_TitleScreenMain.flipNumPlayersOption
	         $05dc = GameState07_TitleScreenMain.setNumPlayersOpt
	         $05f4 = !2
	         $0601 = !3
	         $0608 = GameState07_TitleScreenMain.setCursorX
	         $060c = GameState07_TitleScreenMain.pressedRight
	         $0612 = GameState07_TitleScreenMain.pressedLeft
	         $0616 = GameState07_TitleScreenMain.pressedDown
	         $061f = GameState07_TitleScreenMain.pressedUp
	         $0622 = GameState07_TitleScreenMain.multiplayerInvalid
	         $0625 = GameState07_TitleScreenMain.optionMenu
	         $063a = !4
	         $0642 = !5
	         $064a = !6
	         $064c = GameState07_TitleScreenMain.setCursorY
	         $064f = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $0664 = GameState07_TitleScreenMain.updateClock
	         $067a = GameState07_TitleScreenMain.loopa
	         $069c = GameState07_TitleScreenMain.loopb
	         $06ac = GameState07_TitleScreenMain.pressedDownOptions
	         $06b5 = GameState07_TitleScreenMain.pressedUpOptions
	         $06bf = GameState07_TitleScreenMain.pressedBOptions
	         $06bf = GameState07_TitleScreenMain.scrollLoopBack
	         $06c6 = !7
	         $06d5 = GameState07_TitleScreenMain.doneScrolling
	         $06e6 = GameState07_TitleScreenMain.pressedAOptions
	         $0707 = !8
	         $070d = !9
	         $0713 = GameState07_TitleScreenMain.waitVRAMA
	         $071c = GameState07_TitleScreenMain.setTime
	         $0729 = GameState07_TitleScreenMain.hours
	         $0766 = GameState07_TitleScreenMain.decreaseHours
	         $076d = GameState07_TitleScreenMain.updateDecH
	         $0772 = GameState07_TitleScreenMain.separateTensDecH
	         $077d = GameState07_TitleScreenMain.waitVRAM1
	         $078b = GameState07_TitleScreenMain.increaseHours
	         $0792 = GameState07_TitleScreenMain.updateIncH
	         $0797 = GameState07_TitleScreenMain.separateTensIncH
	         $07a2 = GameState07_TitleScreenMain.waitVRAM2
	         $07b1 = GameState07_TitleScreenMain.minutes
	         $07ef = GameState07_TitleScreenMain.decreaseMinutes
	         $07f6 = GameState07_TitleScreenMain.updateDecM
	         $07fb = GameState07_TitleScreenMain.separateTensDecM
	         $0806 = GameState07_TitleScreenMain.waitVRAM3
	         $081d = GameState07_TitleScreenMain.increaseMinutes
	         $0824 = GameState07_TitleScreenMain.updateIncM
	         $0829 = GameState07_TitleScreenMain.separateTensIncM
	         $0834 = GameState07_TitleScreenMain.waitVRAM4
	         $084c = GameState07_TitleScreenMain.exit
	         $085a = DemoSendPingsAndEndAfterAllStepsDone
	         $087b = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $0888 = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $0890 = DemoPollInput
	         $08a8 = DemoPollInput.mainBit
	         $08c4 = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $08c7 = DemoPollInput.end
	         $08d0 = UnusedClearDemoButtonsHeld
	         $08d6 = DemoRecordInput
	         $0900 = DemoRecordInput.incFrames
	         $0906 = DemoRestorePlayerButtonsHeld
	         $0913 = GameState2a_passive
	         $091a = GameState2a_2PlayerGameMusicTypeInit
	         $0924 = GameState2a_2PlayerGameMusicTypeInit.cont
	         $094a = GameState2b_2PlayerGameMusicTypeMain
	         $0966 = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $0973 = GameState2b_2PlayerGameMusicTypeMain.cont
	         $0997 = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $09b0 = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $09b7 = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $09bf = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $09c3 = GameState16_passive
	         $09ca = GameState16_MarioLuigiScreenInit
	         $09e2 = GameState16_MarioLuigiScreenInit.loop
	         $09e9 = GameState16_MarioLuigiScreenInit.cont
	         $0a20 = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $0a5d = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $0a7d = CopyDEtoHL_Bbytes
	         $0a7d = CopyDEtoHL_Bbytes.loop
	         $0a84 = GameState17_MarioLuigiScreenMain
	         $0a9b = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $0aa2 = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0aad = GameState17_MarioLuigiScreenMain.isMaster
	         $0ab7 = GameState17_MarioLuigiScreenMain.notPressedStart
	         $0ac2 = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $0ac5 = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $0ae2 = GameState17_MarioLuigiScreenMain.aGameFinished
	         $0afa = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $0b02 = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $0b04 = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $0b0c = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $0b15 = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $0b2e = GameState17_MarioLuigiScreenMain.pressedRight
	         $0b33 = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0b39 = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $0b40 = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0b46 = GameState17_MarioLuigiScreenMain.pressedUp
	         $0b4e = Player1HighCoords
	         $0b5a = Player2HighCoords
	         $0b66 = Set2PlayerHighCoords
	         $0b7d = GameState18_2PlayerInGameInit
	         $0b85 = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $0c01 = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $0c21 = GameState18_2PlayerInGameInit.luigiFace
	         $0c31 = GameState18_2PlayerInGameInit.marioFace
	         $0c41 = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0c4f = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0c60 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0c73 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0c75 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0c82 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0c9a = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0ca5 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0ca7 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0cc1 = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0cca = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0cd1 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0ce2 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0cf2 = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0cff = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0d07 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0d18 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0d23 = GameState19_commonEnd
	         $0d41 = GameState19_commonEnd.afterPassiveCheck
	         $0d53 = GameState19_passive
	         $0d5d = GameState19_passive.toDecB
	         $0d63 = GameState19_passive.waitUntilMasterPresent
	         $0d71 = GameState19_passive.waitUntilPingToMasterHandled
	         $0d81 = GameState19_passive.nextRow
	         $0d83 = GameState19_passive.nextCol
	         $0d8c = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0d9b = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0da9 = GameState19_passive.waitUntilTransferFinished
	         $0db9 = GameState19_passive.loadNextPiece
	         $0dc2 = GameState19_passive.waitUntilTransferFinished2
	         $0dcd = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0ddb = GameState19_passive.waitUntilTransferFinished3
	         $0de9 = LoadBottomRowWithBlocks
	         $0df0 = LoadBottomRowWithBlocks.nextCol
	         $0df5 = SerialTransferWaitFunc
	         $0df8 = SerialTransferWaitFunc.loop
	         $0dfe = ShuffleHiddenPieces2Player
	         $0e07 = ShuffleHiddenPieces2Player.nextRandomVal
	         $0e0a = ShuffleHiddenPieces2Player.loop1chTo0
	         $0e0b = ShuffleHiddenPieces2Player.toDecB
	         $0e18 = ShuffleHiddenPieces2Player.afterBEqu0
	         $0e26 = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0e2f = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0e4e = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0e5f = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0e67 = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0e79 = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0e7e = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0e87 = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0e8e = GameState1a_2PlayerInGameMain
	         $0ed0 = GameState1a_2PlayerInGameMain.notYetFinished
	         $0ee0 = GameState1a_2PlayerInGameMain.afterLevelDone
	         $0ef1 = GameState1a_2PlayerInGameMain.end
	         $0ef8 = CheckAlmostLosingStatus
	         $0f02 = CheckAlmostLosingStatus.nextRow
	         $0f05 = CheckAlmostLosingStatus.nextCol
	         $0f12 = CheckAlmostLosingStatus.afterLoop
	         $0f24 = CheckAlmostLosingStatus.nearTop
	         $0f33 = MasterPausedSerialByteRead
	         $0f4d = InGame2PlayerProcessSerialByte
	         $0f79 = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $0f7b = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $0f82 = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $0f84 = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $0f8b = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $0f97 = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $0faa = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $0fad = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $0fbd = InGame2PlayerProcessSerialByte.noLineMarkings
	         $0fc1 = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $0fd9 = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $0fdf = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $0fe9 = CheckIfOtherPlayerCleared2PlusLines
	         $0ff5 = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $0fff = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $1007 = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $1010 = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $1012 = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $102a = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $102f = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $1048 = GameState1b_2PlayerGameEnd
	         $1060 = GameState1b_2PlayerGameEnd.tie
	         $1066 = GameState1b_2PlayerGameEnd.notLost
	         $1070 = GameState1b_2PlayerGameEnd.cont
	         $1084 = GameState1b_2PlayerGameEnd.setGameState
	         $108f = GameState1d_2PlayerWinnerInit
	         $109d = GameState1d_2PlayerWinnerInit.cont
	         $10ac = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $10c2 = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $10db = WinnerMainIsMaster
	         $10e8 = WinnerMainIsMaster.notWonAll5
	         $10ee = WinnerMainIsMaster.toNextState
	         $10f6 = GameState20_2PlayerWinnerMain
	         $110a = GameState20_2PlayerWinnerMain.end
	         $1113 = GoPastWinnerGameStates
	         $111a = ProcessWinnerMainTimer
	         $1142 = ProcessWinnerMainTimer.afterTimerCheck
	         $1160 = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $116c = ProcessWinnerMainTimer.hideBabySprite
	         $1170 = ProcessWinnerMainTimer.end
	         $1180 = GameState1e_2PlayerLoserInit
	         $118e = GameState1e_2PlayerLoserInit.cont
	         $119d = GameState1e_2PlayerLoserInit.loadSadSprites
	         $11b3 = GameState1e_2PlayerLoserInit.copySadSprites
	         $11cc = LoserMainIsMaster
	         $11d9 = LoserMainIsMaster.notLost5
	         $11df = LoserMainIsMaster.toNextState
	         $11e7 = GameState21_2PlayerLoserMain
	         $11fb = GameState21_2PlayerLoserMain.end
	         $1204 = GoPastLoserGameStates
	         $120b = ProcessLoserMainTimer
	         $122c = ProcessLoserMainTimer.afterTimerCheck
	         $1250 = ProcessLoserMainTimer.turnAdultToBigGas
	         $1260 = ProcessLoserMainTimer.hideAdultSprite
	         $1264 = ProcessLoserMainTimer.end
	         $1274 = DisplayTextPushStart
	         $1290 = DisplayTextPushStart.loop
	         $1296 = DisplayTextPushStart.done
	         $1299 = DisplayTextPushStart.sprites
	         $12bd = ClearPushStartText
	         $12c6 = ClearPushStartText.loop
	         $12cc = LoadWinnerLoserScreen
	         $131b = LoadWinnerLoserScreen.afterBGdisplay
	         $1323 = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $133d = LoadWinnerLoserScreen.drawWinnerText
	         $1342 = LoadWinnerLoserScreen.afterWinningText
	         $134d = LoadWinnerLoserScreen.drawFaces
	         $1371 = LoadWinnerLoserScreen.checkLosingGames
	         $138b = LoadWinnerLoserScreen.drawLoserText
	         $1390 = LoadWinnerLoserScreen.afterLosingText
	         $139b = LoadWinnerLoserScreen.drawFaces2
	         $13b4 = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $13c4 = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $13cc = DrawCfaces
	         $13cc = DrawCfaces.nextFace
	         $13d4 = DrawCfaces.nextRow
	         $13e7 = ProcessDeuceAdvantageLogic
	         $1405 = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $140e = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $1412 = ProcessDeuceAdvantageLogic.won4
	         $1414 = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $1417 = ProcessDeuceAdvantageLogic.clearAdvantages
	         $141d = ProcessDeuceAdvantageLogic.wasDeuce
	         $1424 = ProcessDeuceAdvantageLogic.clearDeuce
	         $1428 = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $142c = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $1433 = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $143a = CopyAndUnderlineTextDEtoHL_Bbytes
	         $143c = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $144a = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $144f = TextDeuce
	         $1455 = TextMarioWins
	         $1460 = TextLuigiWins
	         $146b = TextAdvantage
	         $1474 = GameState1f_Post2PlayerResults
	         $149c = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $14a1 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $14ba = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $14bc = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $14c2 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $14c9 = GameState26_ShuttleSceneInit
	         $1514 = DisplayRocketScene
	         $154d = GameState27_ShuttleSceneShowClouds
	         $1563 = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $156c = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $1583 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $158c = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $15ab = GameState02_ShuttleSceneLiftoff
	         $15de = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $15e2 = GameState03_ShuttleSceneShootFire
	         $1604 = GameState03_ShuttleSceneShootFire.checkTimer2
	         $1614 = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $161a = GameState2c_ShuttleSceneShowCongratulations
	         $165c = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $166c = GameState2d_CongratsWaitingBeforeBTypeScore
	         $166c = GameState2c_ShuttleSceneShowCongratulations.end
	         $1687 = GameState34_PreRocketSceneWait
	         $1690 = GameState2e_RocketSceneInit
	         $16bd = GameState2f_RocketSceneShowClouds
	         $16d3 = GameState30_PoweringUp
	         $16dc = GameState30_PoweringUp.liftingOff
	         $16ea = GameState31_RocketSceneLiftOff
	         $171d = GameState31_RocketSceneLiftOff.toggleVisibility
	         $1721 = GameState32_RocketSceneShootFire
	         $173b = GameState32_RocketSceneShootFire.checkTimer2
	         $174b = GameState32_RocketSceneShootFire.copySpecsToOam
	         $1751 = GameState33_RocketSceneEnd
	         $176b = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $177d = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $178c = ShuttleMetalStructureLeft
	         $1793 = ShuttleMetalStructureRight
	         $179a = RocketMetalStructureLeft
	         $17a1 = RocketMetalStructureRight
	         $17a8 = CopyDEintoHLsColumn_Bbytes
	         $17a8 = CopyDEintoHLsColumn_Bbytes.loop
	         $17b5 = GameState08_GameMusicTypeInit
	         $17c0 = GameMusicTypeInitWithoutDisablingSerialRegs
	         $17f3 = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $1802 = Stub_148c
	         $1803 = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $1808 = SetSpriteSpecCoordsForMusicType
	         $181e = SetSpriteSpecCoordsForMusicType.coords
	         $1826 = GameState0f_MusicTypeMain
	         $183e = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $1856 = GameState0f_MusicTypeMain.setMusicType
	         $185d = GameState0f_MusicTypeMain.copyToShadowOam
	         $1861 = GameState0f_MusicTypeMain.pressedUp
	         $1869 = GameState0f_MusicTypeMain.pressedRight
	         $1874 = GameState0f_MusicTypeMain.pressedLeft
	         $187f = GameState0f_MusicTypeMain.pressedB
	         $1888 = GameState0f_MusicTypeMain.not2player
	         $188d = PlaySongBasedOnMusicTypeChosen
	         $1897 = PlaySongBasedOnMusicTypeChosen.playSong
	         $189b = GameState0e_GameTypeMain
	         $18c1 = GameState0e_GameTypeMain.pressedRight
	         $18c9 = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $18d4 = GameState0e_GameTypeMain.setSpecIdx
	         $18d5 = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $18d9 = GameState0e_GameTypeMain.pressedStart
	         $18e8 = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $18ed = GameState0e_GameTypeMain.pressedA
	         $18f1 = GameState10_ATypeSelectionInit
	         $1935 = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $1937 = GameState10_ATypeSelectionInit.setGameState
	         $193a = GameState11_ATypeSelectionMain
	         $196c = GameState11_ATypeSelectionMain.pressedRight
	         $1971 = GameState11_ATypeSelectionMain.setNewLevel
	         $197e = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $1982 = GameState11_ATypeSelectionMain.pressedLeft
	         $1988 = GameState11_ATypeSelectionMain.pressedUp
	         $1990 = ATypeLevelsCoords
	         $19a4 = GameState12_BTypeSelectionInit
	         $19f0 = GameState12_BTypeSelectionInit.setEnterHiScore
	         $19f5 = GameState13_setGameStateMakeSpriteVisible
	         $19fa = GameState13_BTypeSelectionMain
	         $1a2e = GameState13_BTypeSelectionMain.pressedRight
	         $1a33 = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $1a40 = GameState13_BTypeSelectionMain.sendToOam
	         $1a44 = GameState13_BTypeSelectionMain.pressedLeft
	         $1a4a = GameState13_BTypeSelectionMain.pressedUp
	         $1a52 = BTypeLevelsCoords
	         $1a66 = GameState14_setGameStateMakeSpriteVisible
	         $1a6b = GameState14_BTypeHighMain
	         $1a9d = GameState14_BTypeHighMain.pressedRight
	         $1aa2 = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1aaf = GameState14_BTypeHighMain.sendToOam
	         $1ab3 = GameState14_BTypeHighMain.pressedLeft
	         $1ab9 = GameState14_BTypeHighMain.pressedUp
	         $1ac1 = BTypeHighsCoords
	         $1acd = UnusedNop_174d
	         $1ace = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1ad5 = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1ae6 = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $1af6 = CopyCSpriteSpecStructsFromDEtoHL
	         $1af6 = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $1af9 = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $1b0a = Clear_wOam
	         $1b10 = Clear_wOam.loop
	         $1b15 = DisplayATypeHighScoresForLevel
	         $1b20 = DisplayATypeHighScoresForLevel.decA
	         $1b27 = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1b2f = DisplayBTypeHighScoresForLevel
	         $1b3a = DisplayBTypeHighScoresForLevel.decA1
	         $1b41 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1b46 = DisplayBTypeHighScoresForLevel.decA2
	         $1b4d = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $1b55 = CopyHighScoreValueToRamBuffer
	         $1b57 = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1b67 = CopyHighScoreValueToRamBuffer.hasTens
	         $1b71 = CopyHighScoreValueToRamBuffer.storeDigits
	         $1b77 = CopyHLtoDEbackwards_3bytes
	         $1b79 = CopyHLtoDEbackwards_Bbytes.loop
	         $1b79 = CopyHLtoDEbackwards_Bbytes
	         $1b80 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1b88 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1b8e = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1b99 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $1ba2 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $1bb4 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1bbc = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $1bc1 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $1bd8 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $1be2 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $1be6 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $1c00 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $1c0b = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $1c2a = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $1c2d = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1c36 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1c4a = DisplayHighScoresAndNamesForLevel
	         $1c56 = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1c57 = DisplayHighScoresAndNamesForLevel.next6chars
	         $1c59 = DisplayHighScoresAndNamesForLevel.copyName
	         $1c77 = DisplayHighScoresAndNamesForLevel.end
	         $1c7c = DisplayDottedLinesForHighScore
	         $1c86 = DisplayDottedLinesForHighScore.nextRow
	         $1c89 = DisplayDottedLinesForHighScore.nextCol
	         $1c93 = GameState15_EnteringHighScore
	         $1c9b = GameState15_EnteringHighScore.decA
	         $1ca1 = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1cc1 = GameState15_EnteringHighScore.setTile
	         $1cc4 = GameState15_EnteringHighScore.afterTimerCheck
	         $1ce8 = GameState15_EnteringHighScore.done
	         $1cfc = GameState15_EnteringHighScore.setGameState
	         $1cff = GameState15_EnteringHighScore.upHeld
	         $1d07 = GameState15_EnteringHighScore.upPressed
	         $1d12 = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1d18 = GameState15_EnteringHighScore.incChar
	         $1d19 = GameState15_EnteringHighScore.setChar
	         $1d20 = GameState15_EnteringHighScore.notUpLastChar
	         $1d28 = GameState15_EnteringHighScore.downHeld
	         $1d30 = GameState15_EnteringHighScore.downPressed
	         $1d3b = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1d42 = GameState15_EnteringHighScore.decChar
	         $1d45 = GameState15_EnteringHighScore.notDownLastChar
	         $1d4c = GameState15_EnteringHighScore.aPressed
	         $1d67 = GameState15_EnteringHighScore.setNextCharLoc
	         $1d6e = GameState15_EnteringHighScore.bPressed
	         $1d7e = StoreAinHLwhenLCDFree
	         $1d7f = StoreBinHLwhenLCDFree
	         $1d7f = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1d87 = GameState0a_InGameInit
	         $1dc4 = GameState0a_InGameInit.afterGameTypeCheck
	         $1df6 = GameState0a_InGameInit.afterHardModeCheck
	         $1e14 = GameState0a_InGameInit.setNumLinesCompleted
	         $1e1d = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $1e2b = GameState0a_InGameInit.afterPieceHiddenCheck
	         $1e5b = GameState0a_InGameInit.notDemo
	         $1e65 = GameState0a_InGameInit.end
	         $1e6d = SetNumFramesUntilPiecesMoveDown
	         $1e7e = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $1e7f = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $1e8b = SetNumFramesUntilPiecesMoveDown.framesData
	         $1ea0 = PopulateDemoBTypeScreenWithBlocks
	         $1ea8 = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $1eab = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $1ec5 = PopulateDemoBTypeScreenWithBlocks.layout
	         $1eed = PopulateGameScreenWithRandomBlocks
	         $1eee = PopulateGameScreenWithRandomBlocks.decB
	         $1ef4 = PopulateGameScreenWithRandomBlocks.mainLoop
	         $1ef7 = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $1ef9 = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $1f04 = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $1f10 = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $1f12 = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $1f25 = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $1f26 = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $1f32 = PopulateGameScreenWithRandomBlocks.from2player
	         $1f47 = PopulateGameScreenWithRandomBlocks.toNextRow
	         $1f4d = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $1f53 = GameState00_InGameMain
	         $1f79 = InGameCheckResetAndPause.startNotPressed
	         $1f79 = InGameCheckResetAndPause
	         $1f88 = InGameCheckResetAndPause.setPieceVisibility
	         $1f8f = InGameCheckResetAndPause.pieceNotHidden
	         $1f92 = InGameCheckResetAndPause.start
	         $1fc4 = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $1fd2 = InGameCheckResetAndPause.setNextPieceVisibility
	         $1fd5 = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $1fdf = InGameCheckResetAndPause.gameUnPaused
	         $1fef = InGameCheckResetAndPause.is2Player
	         $200d = InGame2PlayerCheckUnpaused
	         $2026 = InGame2PlayerCheckUnpaused.isPassive
	         $202f = InGame2PlayerCheckUnpaused.gameUnpaused
	         $2046 = InGame2PlayerCheckUnpaused.loop
	         $204e = InGame2PlayerCheckUnpaused.popHL
	         $2050 = Display2PlayerPauseText
	         $2058 = Display2PlayerPauseText.loop
	         $2062 = Display2PlayerPauseText.text
	         $2067 = GameState01_GameOverInit
	         $208b = GameState04_LevelEndedMain
	         $2094 = GameState04_LevelEndedMain.aOrStartPressed
	         $20a8 = GameState04_LevelEndedMain.setGameState
	         $20ab = GameState05_BTypeLevelFinished
	         $20e7 = GameState05_BTypeLevelFinished.clearScore
	         $20eb = GameState05_BTypeLevelFinished.fromLevel0
	         $2109 = DisplayBTypeScoreMultipliersBasedOnLevel
	         $2110 = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $2118 = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $2127 = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $2136 = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $213c = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $2145 = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $2153 = GameState22_DancersInit
	         $2184 = GameState22_DancersInit.setNextDancerAnimDetails
	         $2199 = GameState22_DancersInit.numDancersInB
	         $21a2 = GameState22_DancersInit.loopSetVisible
	         $21bb = Dancers_AnimationTimers
	         $21c5 = GameState23_sendDancersToOam
	         $21cb = GameState23_DancersMain
	         $21db = GameState23_DancersMain.nextDancer
	         $21f4 = GameState23_DancersMain.toNextDancer
	         $2210 = GameState23_DancersMain.setGameState
	         $2213 = GameState23_DancersMain.isJumperStanding
	         $2219 = GameState23_DancersMain.isJumperJumping
	         $221f = After4ScoreCategoriesProcessed
	         $2261 = ProcessScoreUpdatesAfterBTypeLevelDone
	         $229c = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $22a0 = GameState0c_UnusedPreShuttleLiftOff
	         $22a9 = GameState0d_GameOverScreenClearing
	         $22c1 = GameState0d_GameOverScreenClearing.is1player
	         $22f6 = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $22f8 = GameState0d_GameOverScreenClearing.setGameState
	         $22fb = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $2307 = CopyGameScreenInnerText
	         $2307 = CopyGameScreenInnerText.nextRow
	         $230a = CopyGameScreenInnerText.nextCol
	         $231b = AddOnCompletedLinesScore
	         $234d = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $2353 = AddOnCompletedLinesScore.loop
	         $2361 = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $2367 = FillGameScreenBufferWithTileA
	         $236f = FillGameScreenBufferWithTileA.nextRow
	         $2372 = FillGameScreenBufferWithTileA.nextCol
	         $237c = FillBottom2RowsOfTileMapWithEmptyTile
	         $2386 = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $2388 = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $2391 = PlayNextPieceLoadNextAndHiddenPiece
	         $23ae = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $23bd = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $23cb = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $23cd = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $23d0 = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $23d1 = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $23de = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $23ec = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $23ef = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $23fb = InGameHandlePieceFalling.holdingDown
	         $23fb = InGameHandlePieceFalling
	         $240d = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $2426 = InGameHandlePieceFalling.start
	         $242e = InGameHandlePieceFalling.afterPressedDown
	         $243b = InGameHandlePieceFalling.sendActivePieceToOam
	         $243f = InGameHandlePieceFalling.currScoreEqu0
	         $244c = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $248a = InGameHandlePieceFalling.clearTimesHoldingDown
	         $248d = InGameHandlePieceFalling.fromNotHoldingDown
	         $24ae = InGameHandlePieceFalling.skipGameOver
	         $24b0 = InGameHandlePieceFalling.isAType
	         $24b1 = InGameHandlePieceFalling.keepAdding
	         $24b8 = InGameHandlePieceFalling.addDropsToScore
	         $24c8 = InGameCheckIfAnyTetrisRowsComplete
	         $24dd = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $24e0 = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $24f5 = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $2525 = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $2534 = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $2559 = InGameCheckIfAnyTetrisRowsComplete.end
	         $2562 = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $2565 = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $256a = FlashCompletedTetrisRows
	         $2580 = FlashCompletedTetrisRows.upperOuterLoop
	         $2590 = FlashCompletedTetrisRows.flashRow
	         $2592 = FlashCompletedTetrisRows.flashRowLoop
	         $259b = FlashCompletedTetrisRows.incFlashCount
	         $25a9 = FlashCompletedTetrisRows.flashed7times
	         $25b4 = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $25b8 = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $25c2 = FlashCompletedTetrisRows.origTileCopyLoop
	         $25d2 = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $25d7 = ShiftEntireGameRamBufferDownARow
	         $25e4 = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $25ef = ShiftEntireGameRamBufferDownARow.nextRow
	         $25f2 = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $2611 = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $261d = ClearPointersToCompletedTetrisRows
	         $2623 = ClearPointersToCompletedTetrisRows.loop
	         $2628 = CopyRamBufferRow17ToVram
	         $2637 = CopyRamBufferRow16ToVram
	         $2646 = CopyRamBufferRow15ToVram
	         $2655 = CopyRamBufferRow14ToVram
	         $2664 = CopyRamBufferRow13ToVram
	         $2673 = CopyRamBufferRow12ToVram
	         $2682 = CopyRamBufferRow11ToVram
	         $2699 = CopyRamBufferRow11ToVram.loop
	         $269f = CopyRamBufferRow11ToVram.is2Player
	         $26ad = CopyRamBufferRow10ToVram
	         $26bc = CopyRamBufferRow9ToVram
	         $26cb = CopyRamBufferRow8ToVram
	         $26da = CopyRamBufferRow7ToVram
	         $26e9 = CopyRamBufferRow6ToVram
	         $26f8 = CopyRamBufferRow5ToVram
	         $2707 = CopyRamBufferRow4ToVram
	         $2716 = CopyRamBufferRow3ToVram
	         $2728 = CopyRamBufferRow2ToVram
	         $2741 = CopyRamBufferRow1ToVram
	         $2756 = CopyRamBufferRow0ToVram
	         $2773 = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $2789 = CopyRamBufferRow0ToVram.displayLines
	         $27a8 = CopyRamBufferRow0ToVram.is1playerEnd
	         $27b2 = CopyRamBufferRow0ToVram.setGameState
	         $27b5 = CopyRamBufferRow0ToVram.playNextPiece
	         $27b9 = CopyRamBufferRow0ToVram.is2player
	         $27c5 = DisplayGameATypeScoreIfInGameAndForced
	         $27d5 = CheckIfATypeNextLevelReached
	         $2808 = CheckIfATypeNextLevelReached.nextDigit
	         $281e = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $2827 = ABisBCDofValInHL
	         $282c = ABisBCDofValInHL.loop
	         $2834 = ABisBCDofValInHL.copyAtoB
	         $2836 = CopyRamBufferRowToVram
	         $2838 = CopyRamBufferRowToVram.loop
	         $2845 = InGameCheckButtonsPressed
	         $2864 = InGameCheckButtonsPressed.pressedAAnimation0
	         $286a = InGameCheckButtonsPressed.pressedB
	         $2874 = InGameCheckButtonsPressed.pressedBAnimation3
	         $2878 = InGameCheckButtonsPressed.afterRotation
	         $2893 = InGameCheckButtonsPressed.afterCollisionCheck
	         $28b1 = InGameCheckButtonsPressed.pressedRight
	         $28c4 = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $28d3 = InGameCheckButtonsPressed.notHeldLeft
	         $28d6 = InGameCheckButtonsPressed.notHeldRight
	         $28e8 = InGameCheckButtonsPressed.pressedLeft
	         $28fd = RetZIfNoCollisionForPiece
	         $2902 = RetZIfNoCollisionForPiece.nextSprite
	         $2920 = RetZIfNoCollisionForPiece.fromXis0
	         $2924 = RetZIfNoCollisionForPiece.notEmpty
	         $292b = InGameAddPieceToVram
	         $2935 = InGameAddPieceToVram.nextSquareOfPiece
	         $2947 = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $2952 = InGameAddPieceToVram.waitVRAMB
	         $2967 = InGameAddPieceToVram.nextState
	         $2971 = ConvertFromObjectTileToBGTile
	         $297d = ConvertFromObjectTileToBGTile.subForFxValues
	         $297f = ConvertFromObjectTileToBGTile.getOffset
	         $2984 = PieceTileConversionLookUpTable
	         $2990 = ProcessCurrentScoreCategory
	         $29ae = ProcessCurrentScoreCategory.afterDisplaying10s
	         $29b3 = ProcessCurrentScoreCategory.addCategScore
	         $29cf = ProcessCurrentScoreCategory.addToTotalScore
	         $29dd = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $29f0 = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $29f1 = IncScoreCategoryProcessedAfterBTypeDone
	         $2a08 = ClearScoreCategoryVarsAndTotalScore
	         $2a0e = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $2a17 = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $2a1c = ConvertHexToDec
	         $2a1d = ConvertHexToDec.convertLoop
	         $2a23 = UpdateClock
	         $2a2e = UpdateClock.doHours
	         $2a41 = UpdateClock.loopa
	         $2a4b = UpdateClock.waitVRAMC
	         $2a5d = UpdateClock.doMinutes
	         $2a70 = UpdateClock.loopb
	         $2a85 = UpdateClock.setSramBank
	         $2a8b = UpdateClock.updateSIsDay_DuskDawn_Night
	         $2aa6 = UpdateClock.isDay
	         $2ab0 = UpdateClock.isDuskOrDawn
	         $2abc = UpdateClock.isNight
	         $2ac8 = ColonTile
	         $2ad8 = UnusedStoreBCDByteInHLInDestDE
	         $2ae4 = Copy2SpriteSpecsToShadowOam
	         $2ae6 = CopyASpriteSpecsToShadowOam
	         $2af6 = Copy1stSpriteSpecToSprite4
	         $2b09 = Copy2ndSpriteSpecToSprite8
	         $2b1c = DisplayBlackColumnFromHLdown
	         $2b23 = DisplayBlackColumnFromHLdown.loop
	         $2b29 = CopyDEintoHLwhileFFhNotFound
	         $2b29 = CopyDEintoHLwhileFFhNotFound.loop
	         $2b31 = StubInterruptHandler
	         $2b32 = SpriteSpecStruct_LPieceActive
	         $2b3a = SpriteSpecStruct_LPieceNext
	         $2b42 = SpriteSpecStruct_GameMusicAType
	         $2b4e = SpriteSpecStruct_ATypeFlashing0
	         $2b54 = SpriteSpecStruct_BTypeLevelAndHigh
	         $2b60 = SpriteSpecStruct_2PlayerHighsFlashing1
	         $2b6c = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $2b7e = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $2b90 = SpriteSpecStruct_MariosFacingAway
	         $2b9c = SpriteSpecStruct_LuigisFacingAway
	         $2ba8 = SpriteSpecStruct_Dancers
	         $2be4 = SpriteSpecStruct_ShuttleAndGas
	         $2bf6 = SpriteSpecStruct_RocketAndGas
	         $2c08 = FillScreen0FromHLdownWithEmptyTile
	         $2c0b = FillScreenFromHLdownWithEmptyTile
	         $2c0e = FillScreenFromHLdownWithEmptyTile.loop
	         $2c17 = CopyHLtoDE_BCbytes
	         $2c17 = CopyHLtoDE_BCbytes.loop
	         $2c20 = LoadAsciiAndMenuScreenGfx
	         $2c3b = CopyAsciiTileData
	         $2c44 = CopyAsciiTileData.loop
	         $2c4f = CopyAsciiAndTitleScreenTileData
	         $2c6e = UnusedCopyHLtoVram1000hBytes
	         $2c71 = CopyHLtoVramBCbytes
	         $2c77 = Stub_27ea
	         $2c78 = CopyLayoutToScreen0
	         $2c7b = CopyLayoutToHL
	         $2c7d = CopyLayoutBrowsToHL
	         $2c7d = CopyLayoutBrowsToHL.loopRow
	         $2c80 = CopyLayoutBrowsToHL.loopCol
	         $2c91 = CopyAttrToScreen0
	         $2c99 = CopyAttrToHL
	         $2c9b = CopyAttrBrowsToHL.loopRow
	         $2c9b = CopyAttrBrowsToHL
	         $2c9f = CopyAttrBrowsToHL.loopCol
	         $2cb6 = CopyPalettesToCram
	         $2cb8 = CopyPalettesToCram.loadPaletteLoop
	         $2cbf = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $2cbf = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $2cc2 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $2cd5 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $2cdb = TurnOffLCD
	         $2ce3 = TurnOffLCD.waitUntilInVBlank
	         $2cf4 = GameInnerScreenLayout_Pause
	         $2d44 = GameScreenLayout_ScoreTotals
	         $2df9 = GameInnerScreenLayout_GameOver
	         $2e31 = GameInnerScreen_TryAgain
	         $2e61 = PollInput
	         $2e9e = GetScreen0AddressOfPieceSquare
	         $2eb1 = GetScreen0AddressOfPieceSquare.loop
	         $2ecb = UnusedMovePieceUpAndRight
	         $2ed3 = UnusedMovePieceUpAndRight.deDiv16
	         $2ef1 = DisplayBCDNum6DigitsIfForced
	         $2ef5 = DisplayBCDNum6Digits
	         $2ef7 = DisplayBCDNum2CDigits
	         $2efa = DisplayBCDNum2CDigits.nextByte
	         $2f0b = DisplayBCDNum2CDigits.displayTens
	         $2f21 = DisplayBCDNum2CDigits.displayOnes
	         $2f2a = DisplayBCDNum2CDigits.tensNot0
	         $2f32 = DisplayBCDNum2CDigits.onesNot0
	         $2f3a = OamDmaFunction
	         $2f40 = OamDmaFunction.wait
	         $2f44 = CopyToShadowOamBasedOnSpriteSpec
	         $2f49 = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $2f57 = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $2f69 = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $2f6e = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $2f70 = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $2f75 = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $2f98 = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $2fb3 = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $2fb7 = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $2fbb = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $2fce = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $2fd8 = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $2fed = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $2ff7 = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $3009 = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $300b = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	         $3027 = ConvertFromBgTileToObjectTile
	         $3039 = ConvertFromBgTileToObjectTile.isInGame
	         $3040 = ConvertFromBgTileToObjectTile.pastGarbageBlock
	         $3047 = ConvertFromBgTileToObjectTile.pastGarbageBlock2
	         $304e = ConvertFromBgTileToObjectTile.isHorIPieceEnd
	SECTION: $3051-$399b ($094b bytes) ["Sound Engine"]
	         $3051 = SquareSoundEffectTable_Init
	         $3061 = SquareSoundEffectTable_Update
	         $3071 = NoiseSoundEffect_Init
	         $3079 = NoiseSoundEffect_Update
	         $3081 = SongsSoundChannelsData
	         $30a3 = Stub
	         $30a4 = UpdateSound
	         $30b9 = UpdateSound.endPath
	         $30cb = UpdateSound.dontUnset
	         $30e0 = UpdateSound.done
	         $30f5 = UpdateSound.gameJustPaused
	         $3121 = UpdateSound.setAud2RegsToPause1
	         $3124 = UpdateSound.copyIntoAud2Regs
	         $3129 = UpdateSound.setAud2RegsToPause2
	         $312e = UpdateSound.gameJustUnpaused
	         $3134 = UpdateSound.processPausedCounter
	         $314c = Aud2RegVals_Pause1
	         $3150 = Aud2RegVals_Pause2
	         $3154 = IsSoundEffect_MovingSelection
	         $315a = IsSoundEffect_TetrisRowsFell
	         $3160 = IsSoundEffect_4LinesCleared
	         $3166 = IsSoundEffect_ReachedNextLevel
	         $316c = Aud1RegValsInit_MovingSelection
	         $3171 = Aud1RegValsUpdate_MovingSelection
	         $3176 = Aud1RegValsInit_ConfirmOrLetterTyped
	         $317b = SquareEffectInit_MovingSelection
	         $3183 = SquareEffectUpdate_MovingSelection
	         $3197 = SquareEffectInit_ConfirmOrLetterTyped
	         $319f = SquareEffectUpdate_Common
	         $31a4 = ClearAud1RegsAndVars
	         $31b8 = Aud1RegVals_4LinesCleared_1
	         $31bd = Aud1RegVals_4LinesCleared_2
	         $31c2 = SquareEffectInit_4LinesCleared
	         $31c8 = SquareEffectUpdate_4LinesCleared
	         $31df = SquareEffectUpdate_4LinesCleared.finalWav
	         $31e8 = SquareEffectUpdate_4LinesCleared.sound2
	         $31ee = SquareEffectUpdate_4LinesCleared.sound1
	         $31f4 = Aud1RegValsInit_PieceMovedHoriz
	         $31f9 = SquareEffectInit_PieceMovedHoriz
	         $3211 = Aud1RegVals_ReachedNextLevel_0and4
	         $3216 = Aud1RegVals_ReachedNextLevel_1
	         $321b = Aud1RegVals_ReachedNextLevel_2
	         $3220 = Aud1RegVals_ReachedNextLevel_3
	         $3225 = SquareEffectInit_ReachedNextLevel
	         $3231 = SquareEffectUpdate_ReachedNextLevel
	         $3251 = SquareEffectUpdate_ReachedNextLevel.sound1
	         $3256 = SquareEffectUpdate_ReachedNextLevel.sound2
	         $325b = SquareEffectUpdate_ReachedNextLevel.sound3
	         $3260 = SquareEffectUpdate_ReachedNextLevel.sound4
	         $3263 = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $3266 = Aud1RegValsInit_Non4LinesCleared
	         $326b = Aud1EnvData_Non4LinesCleared
	         $3276 = Aud1FreqLoData_Non4LinesCleared
	         $3280 = SquareEffectInit_Non4LinesCleared
	         $3294 = SquareEffectUpdate_Non4LinesCleared
	         $32b2 = SetAud1EnvLowHighToEDB
	         $32bd = Aud1RegValsInit_PieceRotated
	         $32c2 = Aud1EnvData_PieceRotated
	         $32c8 = Aud1FreqLoData_PieceRotated
	         $32cd = SquareEffectInit_PieceRotated
	         $32e5 = SquareEffectUpdate_PieceRotated
	         $3305 = SquareEffectInit_TetrisRowsFell
	         $3311 = Aud1RegValsInit_TetrisRowsFell
	         $3316 = Aud4RegValsInit_PieceHitFloor
	         $331a = Aud4RegValsInit_TetrisRowsFell
	         $331e = Aud4RegValsInit_RocketGas
	         $3322 = Aud4RegValsInit_RocketFire
	         $3326 = Aud4RegValsUpdate_RocketFire_Poly
	         $334a = Aud4RegValsUpdate_RocketFire_Env
	         $336e = NoiseEffectInit_RocketGas
	         $3376 = NoiseEffectInit_RocketFire
	         $337e = NoiseEffectUpdate_RocketFire
	         $33a5 = NoiseEffectInit_TetrisRowsFell
	         $33ad = NoiseEffectInit_PieceHitFloor
	         $33b5 = NoiseEffectUpdate_Common
	         $33ba = NoiseEffectUpdate_ClearNoise
	         $33cc = Aud3RegValsInit_GameOver
	         $33d1 = WavEffectInit_GameOver
	         $33e8 = WavEffectUpdate_GameOver
	         $33fb = WavEffectUpdate_GameOver.setAud3Low
	         $3403 = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $340d = UpdateWavEffects
	         $3428 = Aud3RegValsInit_After4LinesCleared
	         $342d = Aud3RegValsUpdate_After4LinesCleared_1
	         $3432 = Aud3RegValsUpdate_After4LinesCleared_2
	         $3437 = Aud3RegValsUpdate_After4LinesCleared_3
	         $343c = WavEffectInit_After4LinesCleared
	         $3451 = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $3454 = WavEffectUpdate_sound1
	         $3465 = WavEffectUpdate_sound2
	         $3476 = WavEffectUpdate_sound3
	         $3487 = WavEffectUpdate_After4LinesCleared
	         $34a9 = WavEffectUpdate_After4LinesCleared.incLowVal
	         $34ad = WavEffectUpdate_After4LinesCleared.decLowVal
	         $34af = WavEffectUpdate_After4LinesCleared.setLowVal
	         $34b3 = ClearWavVarsAndRegs_ResumeMusic
	         $34d9 = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $34de = InitWavEffect_pauseOtherChannels
	         $3503 = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $3507 = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $3527 = CopyDefaultValsInHLIntoAud1Regs
	         $352e = CopyDefaultValsInHLIntoAud2Regs
	         $3535 = CopyDefaultValsInHLIntoAud3Regs
	         $353c = CopyDefaultValsInHLIntoAud4Regs
	         $3541 = CopyDefaultValsInHLIntoAudCRegs
	         $3541 = CopyDefaultValsInHLIntoAudCRegs.loop
	         $3549 = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $354d = HLequAddressForSongData_tableHL_incE
	         $355c = IncCounterInDE_retZifHitsThreshold
	         $3567 = IncCounterInDE_retZifHitsThreshold.done
	         $3569 = CopyFromHLintoWav3Ram
	         $356c = CopyFromHLintoWav3Ram.loop
	         $3576 = InitSound
	         $3598 = ResetSoundHwRegs
	         $35ae = UpdateSquareEffects
	         $35c1 = UpdateSquareEffects.noSquareEffectToPlay
	         $35cd = UpdateSquareEffects.done
	         $35ce = UpdateNoiseEffects
	         $35e1 = UpdateNoiseEffects.noNoiseEffectToPlay
	         $35ed = UpdateNoiseEffects.done
	         $35ee = MuteSound
	         $35f2 = InitSong
	         $360d = SetSongsAudTermVars
	         $3615 = SetSongsAudTermVars.nextSong
	         $361e = SetSongsAudTermVars.setSongVars
	         $3636 = SetSongsAudTermRegs
	         $3660 = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $366b = SetSongsAudTermRegs.afterDecidingWavOutput
	         $3675 = SetSongsAudTermRegs.setAudTermToB
	         $3676 = SetSongsAudTermRegs.setAudTerm
	         $3679 = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $367d = SetSongsAudTermRegs.use1stOutputValue
	         $3682 = SetSongsAudTermRegs.notTimeToSwapOutput
	         $368f = SongAudTermData
	         $36d3 = StoreWordInWordInHLintoDE
	         $36de = StoreWordInHLIintoDE
	         $36e4 = SetSongsInitialSoundChannelVars
	         $373b = SetSongsInitialSoundChannelVars.loop
	         $374e = ProcessSoundByte9dh_SetParams.aud3
	         $374e = ProcessSoundByte9dh_SetParams
	         $375a = ProcessSoundByte9dh_SetParams.start
	         $3784 = ProcessSoundByte9dh_SetParams.end
	         $378a = IncWordInHL
	         $3790 = IncWordInHL.store
	         $3796 = IncWordTwiceInHL
	         $379f = GetABInWordStoredInHL
	         $37a6 = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $37a6 = UpdateMusic
	         $37a9 = UpdateMusic.processCurrSoundByteEnvelope
	         $37c0 = UpdateMusic.passedWaveEnvelope
	         $37d5 = UpdateMusic.toNextSndChannelFromStructIdx2
	         $37da = UpdateMusic.setNextAddrInCurrSndChannelData
	         $37e1 = UpdateMusic.afterSpecialSoundByteAddress
	         $37f5 = UpdateMusic.sndChannelAddrEquFFFFh
	         $380c = UpdateMusic.stopCurrSong
	         $3815 = UpdateMusic.start
	         $3823 = UpdateMusic.nextSoundChannel
	         $382d = UpdateMusic.afterSettingSoundDataAddress
	         $382f = UpdateMusic.processNextSoundByte
	         $385c = UpdateMusic.contSoundByte
	         $3888 = UpdateMusic.soundByte01
	         $388d = UpdateMusic.getNoiseDataToWrite
	         $3895 = UpdateMusic.noiseLoop
	         $38a4 = UpdateMusic.getNonNoiseDataToWrite
	         $38be = UpdateMusic.contWave
	         $38c9 = UpdateMusic.startWritingToSq2
	         $38cd = UpdateMusic.startWritingToSq1
	         $38d2 = UpdateMusic.afterChoosingSndChannelBaseReg
	         $38db = UpdateMusic.after_hasWavRam
	         $38de = UpdateMusic.fromWav
	         $38e7 = UpdateMusic.afterDisabledEnvelopeCheck
	         $3905 = UpdateMusic.skippingHwRegWrites
	         $390a = UpdateMusic.toNextSndChannel
	         $391b = UpdateMusic.done
	         $3928 = UpdateMusic.hasWavRam
	         $392f = GetEinDEplusBdiv2
	         $3938 = WriteToFrequencyRegsAdjustedWithEnvelope
	         $395a = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $395c = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $3972 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $3977 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $3983 = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $3990 = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $3992 = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $3993 = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $399c-$3fef ($0654 bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $0687 bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7f27 ($384d bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Layout_ATypeInGame
	         $56db = Gfx_MenuScreens.end
	         $5843 = Layout_BTypeInGame
	         $59ab = Gfx_Ascii
	         $5ae3 = Gfx_Ascii.end
	         $5ae3 = Gfx_TitleScreen
	         $6293 = Layout_Copyright
	         $6293 = Gfx_TitleScreen.end
	         $63fb = Layout_TitleScreen
	         $6653 = Layout_GameMusicTypeScreen
	         $67bb = Layout_ATypeSelectionScreen
	         $6923 = Layout_BTypeSelectionScreen
	         $6a8b = GameScreenLayout_Dancers
	         $6b40 = Layout_RocketScene
	         $6b90 = Layout_MarioLuigiScreen
	         $6cf8 = Layout_2PlayerInGame
	         $6e60 = Layout_MarioScore
	         $6eb0 = Layout_BricksAndLuigiScore
	         $6f28 = Gfx_RocketScene
	         $7f28 = Gfx_RocketScene.end
	EMPTY: $7f28-$7fff ($00d8 bytes)
	TOTAL EMPTY: $00d8 bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$55bf ($03c0 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $5458 = Layout_RocketScene_Sunrise_Sunset
	         $55c0 = Layout_RocketScene_Sunrise_Sunset.end
	EMPTY: $55c0-$7fff ($2a40 bytes)
	TOTAL EMPTY: $2a45 bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4674 ($0475 bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $4458 = Layout_RocketScene_Night
	         $45c0 = GameScreenLayout_Dancers_Night
	         $4675 = GameScreenLayout_Dancers_Night.end
	SECTION: $4675-$4ca4 ($0630 bytes) ["Palettes and Attribute Maps"]
	         $4675 = Palettes_TitleScreen
	         $47f5 = Attributes_TitleScreen
	         $4ca5 = Attributes_TitleScreen.end
	EMPTY: $4ca5-$7fff ($335b bytes)
	TOTAL EMPTY: $33ab bytes

SRAM bank #0:
	SECTION: $a000-$a003 ($0004 bytes) ["SRAM"]
	         $a000 = sCurrMonth
	         $a001 = sCurrYear
	         $a003 = sIsDay_DuskDawn_Night
	         $a003 = sCurrYear.end
	         $a004 = sIsDay_DuskDawn_Night.end
	EMPTY: $a004-$bfff ($1ffc bytes)
	TOTAL EMPTY: $1ffc bytes

WRAM0 bank #0:
	SECTION: $c000-$dfff ($2000 bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wBTypeHighScores
	         $d654 = wATypeHighScores
	         $d762 = wd762
	         $df70 = wCurrSoundChannelBeingProcessed
	         $df71 = wOrigSoundEffectIdx
	         $df71 = wUnusedShadowAudLen
	         $df72 = wdf72
	         $df75 = wAudTermCounterUntilChangingOutput
	         $df76 = wAudTermCounterValueToHitToChangeOutput
	         $df77 = wAudTermSelectedOutputVal
	         $df78 = wAudTermSongsSpec
	         $df79 = wAudTermOutputValue1
	         $df7a = wAudTermOutputValue2
	         $df7b = wdf7b
	         $df7e = wGamePausedSoundTimer
	         $df7f = wGamePausedActivity
	         $df80 = wUnused_df80
	         $df81 = wSongTempoAddr
	         $df83 = wdf83
	         $df90 = wAudStructs
	         $df90 = wAud1Struct
	         $dfa0 = wAud2Struct
	         $dfb0 = wAud3Struct
	         $dfc0 = wAud4Struct
	         $dfd0 = wdfd0
	         $dfe0 = wSquareSoundToPlay
	         $dfe1 = wSquareEffectBeingPlayed
	         $dfe2 = wSquareEffectFrameCounter
	         $dfe3 = wSquareEffectFrameCounterThreshold
	         $dfe4 = wSquareEffectMiscCounter
	         $dfe5 = wdfe5
	         $dfe8 = wSongToStart
	         $dfe9 = wSongBeingPlayed
	         $dfea = wdfea
	         $dff0 = wWavSoundToPlay
	         $dff1 = wWavEffectBeingPlayed
	         $dff2 = wWavEffectFrameCounter
	         $dff3 = wWavEffectFrameCounterThreshold
	         $dff4 = wWavEffectMiscCounter
	         $dff5 = wWavEffectRandomVal
	         $dff5 = wWavEffectShouldIncOrDec
	         $dff6 = wWavEffectCurrLoVal
	         $dff7 = wdff7
	         $dff8 = wNoiseSoundToPlay
	         $dff9 = wNoiseEffectBeingPlayed
	         $dffa = wNoiseEffectFrameCounter
	         $dffb = wNoiseEffectFrameCounterThreshold
	         $dffc = wNoiseEffectMiscCounter
	         $dffd = wOptionLights
	         $dffe = wOptionColors
	         $dfff = wOptionDayNightCycle
	         $e000 = wOptionDayNightCycle.end
	TOTAL EMPTY: $0000 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 14713 bytes used / 1671 free
	ROMX: 24888 bytes used / 24264 free in 3 banks
	SRAM: 4 bytes used / 8188 free in 1 bank
	WRAM0: 8192 bytes used / 0 free
	HRAM: 127 bytes used / 0 free
