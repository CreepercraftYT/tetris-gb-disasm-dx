ROM0 bank #0:
	SECTION: $0000-$0027 ($0028 bytes) ["ROM Bank $000"]
	         $0000 = RST_00
	         $0008 = RST_08
	SECTION: $0028-$0103 ($00dc bytes) ["RST $28"]
	         $0028 = JumpTable
	         $0040 = VBlankInterrupt
	         $0048 = LCDCInterrupt
	         $0050 = TimerOverflowInterrupt
	         $0058 = SerialTransferCompleteInterrupt
	         $005b = SerialInterruptHandler
	         $006b = SerialInterruptInner
	         $0078 = SerialFunc0_titleScreen
	         $0086 = SerialFunc0_titleScreen.titleScreenMain
	         $0094 = SerialFunc0_titleScreen.checkIfPassive
	         $009c = SerialFunc0_titleScreen.setSC
	         $009f = SerialFunc1_InGame
	         $00a4 = SerialFunc2_2PlayerInGame
	         $00ba = SerialFunc3_PassiveStreamingBytes
	         $00d0 = UnusedSerialFunc_clearIntFlagsIfSerialFunc2_2PlayerInGame
	         $0100 = Boot
	EMPTY: $0104-$0133 ($0030 bytes)
	SECTION: $0134-$014c ($0019 bytes) ["Header"]
	         $0134 = HeaderTitle
	         $0143 = HeaderCGBFlag
	         $0144 = HeaderNewLicenseeCode
	         $0146 = HeaderSGBFlag
	         $0147 = HeaderCartridgeType
	         $0148 = HeaderROMSize
	         $0149 = HeaderRAMSize
	         $014a = HeaderDestinationCode
	         $014b = HeaderOldLicenseeCode
	         $014c = HeaderMaskROMVersion
	EMPTY: $014d-$014f ($0003 bytes)
	SECTION: $0150-$376b ($361c bytes) ["Begin"]
	         $0150 = Begin
	         $016c = UnusedGetScreenTileInHLWhileOamFree
	         $016f = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree
	         $0176 = UnusedGetScreenTileInHLWhileOamFree.waitUntilVramAndOamFree2
	         $017f = AddScoreValueDEontoBaseScoreHL
	         $0197 = VBlankInterruptHandler
	         $01b2 = VBlankInterruptHandler.afterMasterTransfer
	         $0225 = VBlankInterruptHandler.end
	         $0231 = Begin2
	         $023e = Begin2.clear2ndWram
	         $0245 = Reset
	         $025d = Reset.waitUntilVBlank
	         $0284 = Reset.initializeSram
	         $0293 = Reset.clearSram
	         $029f = Reset.sramInitialized
	         $02bb = Reset.clearLastPage
	         $02c6 = Reset.clear1stWram
	         $02d5 = Reset.clearVram
	         $02e1 = Reset.clearOam
	         $02ea = Reset.clearHram
	         $02f5 = Reset.copyOamDmaFunc
	         $031f = MainLoop
	         $0336 = MainLoop.nextTimer
	         $0342 = MainLoop.toNextTimer
	         $034f = MainLoop.waitUntilVBlankIntDone
	         $035a = ProcessGameState
	         $03cb = GameState24_CopyrightDisplay
	         $0417 = GameState24_CopyrightDisplay.copyLoop
	         $042c = GameState25_CopyrightWaiting
	         $0443 = GameState35_CopyrightCanContinue
	         $0451 = GameState35_CopyrightCanContinue.setNewState
	         $0456 = GameState06_TitleScreenInit
	         $047b = GameState06_TitleScreenInit.clearScreenBuffer
	         $0496 = GameState06_TitleScreenInit.displayBlackRow
	         $04b4 = GameState06_TitleScreenInit.sunriseOrSunset
	         $04b9 = GameState06_TitleScreenInit.night
	         $04be = GameState06_TitleScreenInit.noRTCLayout
	         $04c6 = GameState06_TitleScreenInit.copy
	         $050e = PlayDemo
	         $054e = PlayDemo.setDemoPlayed
	         $0568 = UnusedSetRecordingDemo
	         $056d = GameState07_TitleScreenMain
	         $057c = GameState07_TitleScreenMain.afterTimerCheck
	         $0598 = GameState07_TitleScreenMain.checkButtonsPressed
	         $05d1 = !0
	         $05d5 = GameState07_TitleScreenMain.scrollLoop
	         $05dc = !1
	         $05eb = GameState07_TitleScreenMain.playerChecks
	         $0602 = GameState07_TitleScreenMain.waitUntilSerialIntHandled
	         $060c = GameState07_TitleScreenMain.setGameStateTo2ah
	         $060e = GameState07_TitleScreenMain.setGameState
	         $061c = GameState07_TitleScreenMain.is1Player
	         $0625 = GameState07_TitleScreenMain.afterUpCheck
	         $0628 = GameState07_TitleScreenMain.flipNumPlayersOption
	         $062a = GameState07_TitleScreenMain.setNumPlayersOpt
	         $0642 = !2
	         $064f = !3
	         $0656 = GameState07_TitleScreenMain.setCursorX
	         $065a = GameState07_TitleScreenMain.pressedRight
	         $0660 = GameState07_TitleScreenMain.pressedLeft
	         $0664 = GameState07_TitleScreenMain.pressedDown
	         $066d = GameState07_TitleScreenMain.pressedUp
	         $0670 = GameState07_TitleScreenMain.multiplayerInvalid
	         $0673 = GameState07_TitleScreenMain.optionMenu
	         $0683 = GameState07_TitleScreenMain.noRTC
	         $0688 = GameState07_TitleScreenMain.cursorPos
	         $0693 = !4
	         $069b = !5
	         $06a3 = !6
	         $06a5 = GameState07_TitleScreenMain.setCursorY
	         $06b6 = GameState07_TitleScreenMain.checkButtonsPressedOptions
	         $06db = GameState07_TitleScreenMain.updateToggledOptions
	         $06e9 = GameState07_TitleScreenMain.noRTCOptionToggle
	         $06ed = GameState07_TitleScreenMain.updateLoop
	         $0706 = GameState07_TitleScreenMain.pressedDownOptions
	         $0716 = GameState07_TitleScreenMain.noRTCDown
	         $0717 = GameState07_TitleScreenMain.returnDown
	         $0718 = GameState07_TitleScreenMain.pressedUpOptions
	         $0728 = GameState07_TitleScreenMain.pressedBOptions
	         $0728 = GameState07_TitleScreenMain.scrollLoopBack
	         $072f = !7
	         $073e = GameState07_TitleScreenMain.doneScrolling
	         $074f = GameState07_TitleScreenMain.pressedAOptions
	         $076b = GameState07_TitleScreenMain.setTime
	         $0773 = GameState07_TitleScreenMain.hours
	         $07b4 = GameState07_TitleScreenMain.decreaseHours
	         $07bc = GameState07_TitleScreenMain.updateDecH
	         $07d2 = GameState07_TitleScreenMain.increaseHours
	         $07da = GameState07_TitleScreenMain.updateIncH
	         $07f0 = GameState07_TitleScreenMain.minutes
	         $0839 = GameState07_TitleScreenMain.decreaseMinutes
	         $0841 = GameState07_TitleScreenMain.updateDecM
	         $085f = GameState07_TitleScreenMain.increaseMinutes
	         $0867 = GameState07_TitleScreenMain.updateIncM
	         $0885 = GameState07_TitleScreenMain.exit
	         $0893 = SeparateTens
	         $0895 = SeparateTens.loop
	         $089d = ChangeToggleTile
	         $08a6 = !8
	         $08ac = !9
	         $08b6 = WaitVRAM
	         $08b7 = WaitVRAM.loop
	         $08bf = DemoSendPingsAndEndAfterAllStepsDone
	         $08e0 = DemoSendPingsAndEndAfterAllStepsDone.startNotPressed
	         $08ed = DemoSendPingsAndEndAfterAllStepsDone.endIfDoneBSteps
	         $08f5 = DemoPollInput
	         $090d = DemoPollInput.mainBit
	         $0929 = DemoPollInput.clearButtonsPressedSetButtonsHeld
	         $092c = DemoPollInput.end
	         $0935 = UnusedClearDemoButtonsHeld
	         $093b = DemoRecordInput
	         $0965 = DemoRecordInput.incFrames
	         $096b = DemoRestorePlayerButtonsHeld
	         $0978 = GameState2a_passive
	         $097f = GameState2a_2PlayerGameMusicTypeInit
	         $0989 = GameState2a_2PlayerGameMusicTypeInit.cont
	         $09af = GameState2b_2PlayerGameMusicTypeMain
	         $09cb = GameState2b_2PlayerGameMusicTypeMain.isMaster
	         $09d8 = GameState2b_2PlayerGameMusicTypeMain.cont
	         $09fc = GameState2b_2PlayerGameMusicTypeMain.isMaster2
	         $0a15 = GameState2b_2PlayerGameMusicTypeMain.loadNextSerialByte
	         $0a1c = GameState2b_2PlayerGameMusicTypeMain.toNextGameState
	         $0a24 = GameState2b_2PlayerGameMusicTypeMain.load50hIntoSerialByte
	         $0a28 = GameState16_passive
	         $0a2f = GameState16_MarioLuigiScreenInit
	         $0a47 = GameState16_MarioLuigiScreenInit.loop
	         $0a4e = GameState16_MarioLuigiScreenInit.cont
	         $0a9a = GameState16_MarioLuigiScreenInit.copyDarkSolid
	         $0ad7 = GameState16_MarioLuigiScreenInit.marioLuigiHeads
	         $0af7 = CopyDEtoHL_Bbytes
	         $0af7 = CopyDEtoHL_Bbytes.loop
	         $0afe = GameState17_MarioLuigiScreenMain
	         $0b15 = GameState17_MarioLuigiScreenMain.checkOwnHigh
	         $0b1c = GameState17_MarioLuigiScreenMain.afterPassiveSerialByteHandled
	         $0b27 = GameState17_MarioLuigiScreenMain.isMaster
	         $0b31 = GameState17_MarioLuigiScreenMain.notPressedStart
	         $0b3c = GameState17_MarioLuigiScreenMain.passiveReadByteToTransitionState
	         $0b3f = GameState17_MarioLuigiScreenMain.goTo2PlayerInGame
	         $0b5c = GameState17_MarioLuigiScreenMain.aGameFinished
	         $0b74 = GameState17_MarioLuigiScreenMain.masterNotTransitioningState
	         $0b7c = GameState17_MarioLuigiScreenMain.afterCheckingPlayer2High
	         $0b7e = GameState17_MarioLuigiScreenMain.masterSendSerialByte
	         $0b86 = GameState17_MarioLuigiScreenMain.masterNoInterruptHandled
	         $0b8f = GameState17_MarioLuigiScreenMain.checkPlayersButtons
	         $0ba8 = GameState17_MarioLuigiScreenMain.pressedRight
	         $0bad = GameState17_MarioLuigiScreenMain.setNewHighAndPlaySound
	         $0bb3 = GameState17_MarioLuigiScreenMain.afterDirectionalsSendToOam
	         $0bba = GameState17_MarioLuigiScreenMain.pressedLeft
	         $0bc0 = GameState17_MarioLuigiScreenMain.pressedUp
	         $0bc8 = Player1HighCoords
	         $0bd4 = Player2HighCoords
	         $0be0 = Set2PlayerHighCoords
	         $0bf7 = GameState18_2PlayerInGameInit
	         $0bff = GameState18_2PlayerInGameInit.initWithoutTurningOffLCD
	         $0c52 = GameState18_2PlayerInGameInit.segaColors
	         $0c55 = GameState18_2PlayerInGameInit.loadPalettes
	         $0c8b = GameState18_2PlayerInGameInit.continue
	         $0c8c = GameState18_2PlayerInGameInit.skipPop
	         $0cd0 = GameState18_2PlayerInGameInit.afterGettingFaceOam
	         $0cf0 = GameState18_2PlayerInGameInit.luigiFace
	         $0d00 = GameState18_2PlayerInGameInit.marioFace
	         $0d10 = GameState19_2PlayerSyncHighBlocksAndPieces
	         $0d1e = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassiveSends55h
	         $0d2f = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled
	         $0d42 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow
	         $0d44 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol
	         $0d51 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilSerialInterruptHandled2
	         $0d69 = GameState19_2PlayerSyncHighBlocksAndPieces.getToBufferStartRow
	         $0d74 = GameState19_2PlayerSyncHighBlocksAndPieces.nextRow2
	         $0d76 = GameState19_2PlayerSyncHighBlocksAndPieces.nextCol2
	         $0d90 = GameState19_2PlayerSyncHighBlocksAndPieces.toPrevRow
	         $0d99 = GameState19_2PlayerSyncHighBlocksAndPieces.setEmpty
	         $0da0 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePresent
	         $0db1 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPassivePingedBack
	         $0dc1 = GameState19_2PlayerSyncHighBlocksAndPieces.sendNextPieceToPassive
	         $0dce = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilPieceSentToPassive
	         $0dd6 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilBothPlayersFinalPinging
	         $0de7 = GameState19_2PlayerSyncHighBlocksAndPieces.waitUntilTransferFinished
	         $0df2 = GameState19_commonEnd
	         $0e10 = GameState19_commonEnd.afterPassiveCheck
	         $0e4c = GameState19_passive
	         $0e56 = GameState19_passive.toDecB
	         $0e5c = GameState19_passive.waitUntilMasterPresent
	         $0e6a = GameState19_passive.waitUntilPingToMasterHandled
	         $0e7a = GameState19_passive.nextRow
	         $0e7c = GameState19_passive.nextCol
	         $0e85 = GameState19_passive.waitUntilMasterSendsStartingBlock
	         $0e94 = GameState19_passive.waitUntilMasterReadyToSendPieces
	         $0ea2 = GameState19_passive.waitUntilTransferFinished
	         $0eb2 = GameState19_passive.loadNextPiece
	         $0ebb = GameState19_passive.waitUntilTransferFinished2
	         $0ec6 = GameState19_passive.waitUntilBothPlayersFinalPinging
	         $0ed4 = GameState19_passive.waitUntilTransferFinished3
	         $0ee2 = LoadBottomRowWithBlocks
	         $0ee9 = LoadBottomRowWithBlocks.nextCol
	         $0eee = SerialTransferWaitFunc
	         $0ef1 = SerialTransferWaitFunc.loop
	         $0ef7 = ShuffleHiddenPieces2Player
	         $0f00 = ShuffleHiddenPieces2Player.nextRandomVal
	         $0f03 = ShuffleHiddenPieces2Player.loop1chTo0
	         $0f04 = ShuffleHiddenPieces2Player.toDecB
	         $0f11 = ShuffleHiddenPieces2Player.afterBEqu0
	         $0f1f = ShuffleHiddenPieces2Player.fromTriesExhausted
	         $0f28 = GameState1c_2PlayerSyncAtInGameInitEnd
	         $0f47 = GameState1c_2PlayerSyncAtInGameInitEnd.afterHidden
	         $0f58 = GameState1c_2PlayerSyncAtInGameInitEnd.rowsNotYetLoaded
	         $0f60 = GameState1c_2PlayerSyncAtInGameInitEnd.loopWallMarkings
	         $0f72 = GameState1c_2PlayerSyncAtInGameInitEnd.loopUntilBequ0
	         $0f77 = GameState1c_2PlayerSyncAtInGameInitEnd.nextB
	         $0f80 = GameState1c_2PlayerSyncAtInGameInitEnd.done
	         $0f87 = GameState1a_2PlayerInGameMain
	         $0fcc = GameState1a_2PlayerInGameMain.notYetFinished
	         $0fdc = GameState1a_2PlayerInGameMain.afterLevelDone
	         $0fed = GameState1a_2PlayerInGameMain.end
	         $0ff4 = CheckAlmostLosingStatus
	         $0ffe = CheckAlmostLosingStatus.nextRow
	         $1001 = CheckAlmostLosingStatus.nextCol
	         $100e = CheckAlmostLosingStatus.afterLoop
	         $1020 = CheckAlmostLosingStatus.nearTop
	         $102f = MasterPausedSerialByteRead
	         $1049 = InGame2PlayerProcessSerialByte
	         $1075 = InGame2PlayerProcessSerialByte.drawBLineMarkings
	         $1077 = InGame2PlayerProcessSerialByte.loopShownMarkings
	         $107e = InGame2PlayerProcessSerialByte.afterShownLineMarkings
	         $1080 = InGame2PlayerProcessSerialByte.loopHiddenMarkings
	         $1087 = InGame2PlayerProcessSerialByte.afterProcessingSerialByte
	         $1093 = InGame2PlayerProcessSerialByte.afterProcessingSerialBytecont
	         $10a6 = InGame2PlayerProcessSerialByte.setNextSerialByteToLoad
	         $10a9 = InGame2PlayerProcessSerialByte.otherPlayerWon
	         $10b9 = InGame2PlayerProcessSerialByte.noLineMarkings
	         $10bd = InGame2PlayerProcessSerialByte.otherPlayerLost
	         $10d5 = InGame2PlayerProcessSerialByte.wonOrLostAtTheSameTime
	         $10db = InGame2PlayerProcessSerialByte.serialByteBit7set
	         $10e5 = CheckIfOtherPlayerCleared2PlusLines
	         $10f1 = CheckIfOtherPlayerCleared2PlusLines.checkIfMultiplierToProcess
	         $10fb = CheckIfOtherPlayerCleared2PlusLines.multiplierToProcessAfterPlayingPiece
	         $1103 = CheckIfOtherPlayerCleared2PlusLines.getStartingRow
	         $110c = CheckIfOtherPlayerCleared2PlusLines.copyNextRow
	         $110e = CheckIfOtherPlayerCleared2PlusLines.copyNextCol
	         $1126 = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidRow
	         $112b = CheckIfOtherPlayerCleared2PlusLines.copyDarkSolidCol
	         $1151 = GameState1b_2PlayerGameEnd
	         $1169 = GameState1b_2PlayerGameEnd.tie
	         $116f = GameState1b_2PlayerGameEnd.notLost
	         $1179 = GameState1b_2PlayerGameEnd.cont
	         $118d = GameState1b_2PlayerGameEnd.setGameState
	         $1198 = GameState1d_2PlayerWinnerInit
	         $11a6 = GameState1d_2PlayerWinnerInit.cont
	         $11b5 = GameState1d_2PlayerWinnerInit.loadHappySprites
	         $11cb = GameState1d_2PlayerWinnerInit.copyHappySprites
	         $11e4 = WinnerMainIsMaster
	         $11f1 = WinnerMainIsMaster.notWonAll5
	         $11f7 = WinnerMainIsMaster.toNextState
	         $11ff = GameState20_2PlayerWinnerMain
	         $1213 = GameState20_2PlayerWinnerMain.end
	         $121c = GoPastWinnerGameStates
	         $1223 = ProcessWinnerMainTimer
	         $124b = ProcessWinnerMainTimer.afterTimerCheck
	         $1269 = ProcessWinnerMainTimer.turnBabyToSmallGas
	         $1275 = ProcessWinnerMainTimer.hideBabySprite
	         $1279 = ProcessWinnerMainTimer.end
	         $1289 = GameState1e_2PlayerLoserInit
	         $1297 = GameState1e_2PlayerLoserInit.cont
	         $12a6 = GameState1e_2PlayerLoserInit.loadSadSprites
	         $12bc = GameState1e_2PlayerLoserInit.copySadSprites
	         $12d5 = LoserMainIsMaster
	         $12e2 = LoserMainIsMaster.notLost5
	         $12e8 = LoserMainIsMaster.toNextState
	         $12f0 = GameState21_2PlayerLoserMain
	         $1304 = GameState21_2PlayerLoserMain.end
	         $130d = GoPastLoserGameStates
	         $1314 = ProcessLoserMainTimer
	         $1335 = ProcessLoserMainTimer.afterTimerCheck
	         $1359 = ProcessLoserMainTimer.turnAdultToBigGas
	         $1369 = ProcessLoserMainTimer.hideAdultSprite
	         $136d = ProcessLoserMainTimer.end
	         $137d = DisplayTextPushStart
	         $1399 = DisplayTextPushStart.loop
	         $139f = DisplayTextPushStart.done
	         $13a2 = DisplayTextPushStart.sprites
	         $13c6 = ClearPushStartText
	         $13cf = ClearPushStartText.loop
	         $13d5 = LoadWinnerLoserScreen
	         $145d = LoadWinnerLoserScreen.afterBGdisplay
	         $1465 = LoadWinnerLoserScreen.afterDeuceAdvantageLogic
	         $147f = LoadWinnerLoserScreen.drawWinnerText
	         $1484 = LoadWinnerLoserScreen.afterWinningText
	         $148f = LoadWinnerLoserScreen.drawFaces
	         $14b3 = LoadWinnerLoserScreen.checkLosingGames
	         $14cd = LoadWinnerLoserScreen.drawLoserText
	         $14d2 = LoadWinnerLoserScreen.afterLosingText
	         $14dd = LoadWinnerLoserScreen.drawFaces2
	         $14f6 = LoadWinnerLoserScreen.afterWinningLosingGfx
	         $1506 = LoadWinnerLoserScreen.turnOnLCDandClearOam
	         $150e = DrawCfaces
	         $150e = DrawCfaces.nextFace
	         $1516 = DrawCfaces.nextRow
	         $1529 = ProcessDeuceAdvantageLogic
	         $1547 = ProcessDeuceAdvantageLogic.setLostScoreTo5
	         $1550 = ProcessDeuceAdvantageLogic.thunkClearAdvantages
	         $1554 = ProcessDeuceAdvantageLogic.won4
	         $1556 = ProcessDeuceAdvantageLogic.clearDeuceAndAdvantages
	         $1559 = ProcessDeuceAdvantageLogic.clearAdvantages
	         $155f = ProcessDeuceAdvantageLogic.wasDeuce
	         $1566 = ProcessDeuceAdvantageLogic.clearDeuce
	         $156a = ProcessDeuceAdvantageLogic.clearDeuceSetOtherAdvantage
	         $156e = ProcessDeuceAdvantageLogic.wasSelfAdvantage
	         $1575 = ProcessDeuceAdvantageLogic.wasOtherAdvantage
	         $157c = CopyAndUnderlineTextDEtoHL_Bbytes
	         $157e = CopyAndUnderlineTextDEtoHL_Bbytes.copyText
	         $158c = CopyAndUnderlineTextDEtoHL_Bbytes.underlineText
	         $1591 = TextDeuce
	         $1597 = TextMarioWins
	         $15a2 = TextLuigiWins
	         $15ad = TextAdvantage
	         $15b6 = GameState1f_Post2PlayerResults
	         $15de = GameState1f_Post2PlayerResults.winnerOfRoundsChosen
	         $15e3 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC
	         $15fc = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.done
	         $15fe = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.masterSendC
	         $1604 = ReturnFromCallersContextUntilBothPlayersCommunicatingBC.passive
	         $160b = _2PlayerUnpauseTiles
	         $1610 = GameState26_ShuttleSceneInit
	         $1660 = DisplayRocketScene
	         $16a2 = DisplayRocketScene.sunriseOrSunset
	         $16a7 = DisplayRocketScene.night
	         $16aa = DisplayRocketScene.copy
	         $16c4 = GameState27_ShuttleSceneShowClouds
	         $16da = GameState28_ShuttleSceneFlashCloudsGetBigger
	         $16e3 = GameState28_ShuttleSceneFlashCloudsGetBigger.showBiggerClouds
	         $16fa = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms
	         $1703 = GameState29_ShuttleSceneFlashBigCloudsRemovePlatforms.removePlatforms
	         $1722 = GameState02_ShuttleSceneLiftoff
	         $1755 = GameState02_ShuttleSceneLiftoff.flashNonRocketBits
	         $1759 = GameState03_ShuttleSceneShootFire
	         $1781 = GameState03_ShuttleSceneShootFire.checkTimer2
	         $1791 = GameState03_ShuttleSceneShootFire.sendSpritesToOam
	         $1797 = GameState2c_ShuttleSceneShowCongratulations
	         $17d9 = GameState2c_ShuttleSceneShowCongratulations.congratsText
	         $17e9 = GameState2d_CongratsWaitingBeforeBTypeScore
	         $17e9 = GameState2c_ShuttleSceneShowCongratulations.end
	         $1808 = GameState34_PreRocketSceneWait
	         $1811 = GameState2e_RocketSceneInit
	         $1843 = GameState2f_RocketSceneShowClouds
	         $1859 = GameState30_PoweringUp
	         $1862 = GameState30_PoweringUp.liftingOff
	         $1870 = GameState31_RocketSceneLiftOff
	         $18a3 = GameState31_RocketSceneLiftOff.toggleVisibility
	         $18a7 = GameState32_RocketSceneShootFire
	         $18c7 = GameState32_RocketSceneShootFire.checkTimer2
	         $18d7 = GameState32_RocketSceneShootFire.copySpecsToOam
	         $18dd = GameState33_RocketSceneEnd
	         $18fb = ToggleNonRocketSpritesVisibilityEvery10Frames
	         $190d = ToggleNonRocketSpritesVisibilityEvery10Frames.nextGas
	         $191c = ShuttleMetalStructureLeft
	         $1923 = ShuttleMetalStructureRight
	         $192a = RocketMetalStructureLeft
	         $1931 = RocketMetalStructureRight
	         $1938 = CopyDEintoHLsColumn_Bbytes
	         $1938 = CopyDEintoHLsColumn_Bbytes.loop
	         $1945 = GameState08_GameMusicTypeInit
	         $1950 = GameMusicTypeInitWithoutDisablingSerialRegs
	         $198d = GameMusicTypeInitWithoutDisablingSerialRegs.setGameTypeSpriteSpec
	         $199c = Stub_148c
	         $199d = PlayMovingSelectionSnd_SetSpriteSpecCoordsForMusicType
	         $19a2 = SetSpriteSpecCoordsForMusicType
	         $19b8 = SetSpriteSpecCoordsForMusicType.coords
	         $19c0 = GameState0f_MusicTypeMain
	         $19d8 = GameState0f_MusicTypeMain.checkDirectionalButtons
	         $19f0 = GameState0f_MusicTypeMain.setMusicType
	         $19f7 = GameState0f_MusicTypeMain.copyToShadowOam
	         $19fb = GameState0f_MusicTypeMain.pressedUp
	         $1a03 = GameState0f_MusicTypeMain.pressedRight
	         $1a0e = GameState0f_MusicTypeMain.pressedLeft
	         $1a19 = GameState0f_MusicTypeMain.pressedB
	         $1a22 = GameState0f_MusicTypeMain.not2player
	         $1a27 = PlaySongBasedOnMusicTypeChosen
	         $1a31 = PlaySongBasedOnMusicTypeChosen.playSong
	         $1a35 = GameState0e_GameTypeMain
	         $1a5f = GameState0e_GameTypeMain.pressedRight
	         $1a67 = GameState0e_GameTypeMain.setGameTypeAndSpriteSpecIdx
	         $1a72 = GameState0e_GameTypeMain.setSpecIdx
	         $1a73 = GameState0e_GameTypeMain.copyToShadowOamOnly
	         $1a77 = GameState0e_GameTypeMain.pressedStart
	         $1a86 = GameState0e_GameTypeMain.setGameStateClearSpecIdx
	         $1a8b = GameState0e_GameTypeMain.pressedA
	         $1a8f = GameState0e_GameTypeMain.pressedB
	         $1a92 = GameState10_ATypeSelectionInit
	         $1aea = GameState10_ATypeSelectionInit.setGameStateToEnterHighScore
	         $1aec = GameState10_ATypeSelectionInit.setGameState
	         $1aef = GameState11_ATypeSelectionMain
	         $1b21 = GameState11_ATypeSelectionMain.pressedRight
	         $1b26 = GameState11_ATypeSelectionMain.setNewLevel
	         $1b33 = GameState11_ATypeSelectionMain.sendSpritesToOam
	         $1b37 = GameState11_ATypeSelectionMain.pressedLeft
	         $1b3d = GameState11_ATypeSelectionMain.pressedUp
	         $1b45 = ATypeLevelsCoords
	         $1b59 = GameState12_BTypeSelectionInit
	         $1bb9 = GameState12_BTypeSelectionInit.setEnterHiScore
	         $1bbe = GameState13_setGameStateMakeSpriteVisible
	         $1bc3 = GameState13_BTypeSelectionMain
	         $1bf7 = GameState13_BTypeSelectionMain.pressedRight
	         $1bfc = GameState13_BTypeSelectionMain.setNewSpriteCoords
	         $1c09 = GameState13_BTypeSelectionMain.sendToOam
	         $1c0d = GameState13_BTypeSelectionMain.pressedLeft
	         $1c13 = GameState13_BTypeSelectionMain.pressedUp
	         $1c1b = BTypeLevelsCoords
	         $1c2f = GameState14_setGameStateMakeSpriteVisible
	         $1c34 = GameState14_BTypeHighMain
	         $1c66 = GameState14_BTypeHighMain.pressedRight
	         $1c6b = GameState14_BTypeHighMain.setNewHighSpriteCoords
	         $1c78 = GameState14_BTypeHighMain.sendToOam
	         $1c7c = GameState14_BTypeHighMain.pressedLeft
	         $1c82 = GameState14_BTypeHighMain.pressedUp
	         $1c8a = BTypeHighsCoords
	         $1c96 = UnusedNop_174d
	         $1c97 = PlayMovingSound_SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1c9e = SetNumberSpecStructsCoordsAndSpecIdxFromHLtable
	         $1caf = GetButtonsPressedB_AlternateSpriteSpecBetweenShownAndHidden
	         $1cbf = CopyCSpriteSpecStructsFromDEtoHL
	         $1cbf = CopyCSpriteSpecStructsFromDEtoHL.nextSpriteSpec
	         $1cc2 = CopyCSpriteSpecStructsFromDEtoHL.loop
	         $1cd3 = Clear_wOam
	         $1cd9 = Clear_wOam.loop
	         $1cde = DisplayATypeHighScoresForLevel
	         $1ce9 = DisplayATypeHighScoresForLevel.decA
	         $1cf0 = DisplayATypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1cf8 = DisplayBTypeHighScoresForLevel
	         $1d03 = DisplayBTypeHighScoresForLevel.decA1
	         $1d0a = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevel
	         $1d0f = DisplayBTypeHighScoresForLevel.decA2
	         $1d16 = DisplayBTypeHighScoresForLevel.afterHiScoreAddrForLevelAndHigh
	         $1d1e = CopyHighScoreValueToRamBuffer
	         $1d20 = CopyHighScoreValueToRamBuffer.nextByteToCheckIfEmpty
	         $1d30 = CopyHighScoreValueToRamBuffer.hasTens
	         $1d3a = CopyHighScoreValueToRamBuffer.storeDigits
	         $1d40 = CopyHLtoDEbackwards_3bytes
	         $1d42 = CopyHLtoDEbackwards_Bbytes.loop
	         $1d42 = CopyHLtoDEbackwards_Bbytes
	         $1d49 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer
	         $1d51 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextHiScore
	         $1d57 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextScoreByteToCompare
	         $1d62 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextHiScore
	         $1d6b = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.currScoreHigherThanAHighScore
	         $1d7d = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerScoresDown
	         $1d85 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrHighScore
	         $1d8a = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrLoop
	         $1da1 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.shiftLowerNamesDown
	         $1dab = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.setCurrName
	         $1daf = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.copyDottedName
	         $1dc9 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.afterNoHighScore
	         $1dd4 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextScore
	         $1df3 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.displayNextName
	         $1df6 = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.nextNameChar
	         $1dff = SetNewHighScoreIfAchieved_SendNameAndScoreToRamBuffer.toNextName
	         $1e13 = DisplayHighScoresAndNamesForLevel
	         $1e1f = DisplayHighScoresAndNamesForLevel.nextHighScore
	         $1e20 = DisplayHighScoresAndNamesForLevel.next6chars
	         $1e22 = DisplayHighScoresAndNamesForLevel.copyName
	         $1e40 = DisplayHighScoresAndNamesForLevel.end
	         $1e45 = DisplayDottedLinesForHighScore
	         $1e4f = DisplayDottedLinesForHighScore.nextRow
	         $1e52 = DisplayDottedLinesForHighScore.nextCol
	         $1e5c = GameState15_EnteringHighScore
	         $1e64 = GameState15_EnteringHighScore.decA
	         $1e6a = GameState15_EnteringHighScore.afterRamDestAddrForScore
	         $1e8a = GameState15_EnteringHighScore.setTile
	         $1e8d = GameState15_EnteringHighScore.afterTimerCheck
	         $1eb1 = GameState15_EnteringHighScore.done
	         $1ec5 = GameState15_EnteringHighScore.setGameState
	         $1ec8 = GameState15_EnteringHighScore.upHeld
	         $1ed0 = GameState15_EnteringHighScore.upPressed
	         $1edb = GameState15_EnteringHighScore.afterUpHardModeCheck
	         $1ee1 = GameState15_EnteringHighScore.incChar
	         $1ee2 = GameState15_EnteringHighScore.setChar
	         $1ee9 = GameState15_EnteringHighScore.notUpLastChar
	         $1ef1 = GameState15_EnteringHighScore.downHeld
	         $1ef9 = GameState15_EnteringHighScore.downPressed
	         $1f04 = GameState15_EnteringHighScore.afterDownHardModeCheck
	         $1f0b = GameState15_EnteringHighScore.decChar
	         $1f0e = GameState15_EnteringHighScore.notDownLastChar
	         $1f15 = GameState15_EnteringHighScore.aPressed
	         $1f30 = GameState15_EnteringHighScore.setNextCharLoc
	         $1f37 = GameState15_EnteringHighScore.bPressed
	         $1f47 = StoreAinHLwhenLCDFree
	         $1f48 = StoreBinHLwhenLCDFree
	         $1f48 = StoreBinHLwhenLCDFree.waitUntilVramAndOamFree
	         $1f50 = GameState0a_InGameInit
	         $1f92 = GameState0a_InGameInit.afterGameTypeCheck
	         $1fc3 = GameState0a_InGameInit.segaColors
	         $1fc6 = GameState0a_InGameInit.loadPalettes
	         $1ffc = GameState0a_InGameInit.bgColor
	         $1ffd = GameState0a_InGameInit.skipPop
	         $200b = GameState0a_InGameInit.color1A
	         $201e = GameState0a_InGameInit.color2A
	         $2031 = GameState0a_InGameInit.bType
	         $2038 = GameState0a_InGameInit.color1B
	         $204b = GameState0a_InGameInit.color2B
	         $205e = GameState0a_InGameInit.copy
	         $2084 = GameState0a_InGameInit.afterHardModeCheck
	         $20a2 = GameState0a_InGameInit.setNumLinesCompleted
	         $20ab = GameState0a_InGameInit.setFramesUntilPieceMovesDown
	         $20b9 = GameState0a_InGameInit.afterPieceHiddenCheck
	         $20e9 = GameState0a_InGameInit.notDemo
	         $20f3 = GameState0a_InGameInit.end
	         $20fb = SetNumFramesUntilPiecesMoveDown
	         $210c = SetNumFramesUntilPiecesMoveDown.getIndexInDE
	         $210d = SetNumFramesUntilPiecesMoveDown.setTopSpeedForPieces
	         $2119 = SetNumFramesUntilPiecesMoveDown.framesData
	         $212e = PopulateDemoBTypeScreenWithBlocks
	         $2136 = PopulateDemoBTypeScreenWithBlocks.nextRow
	         $2139 = PopulateDemoBTypeScreenWithBlocks.nextCol
	         $2153 = PopulateDemoBTypeScreenWithBlocks.layout
	         $217b = PopulateGameScreenWithRandomBlocks
	         $217c = PopulateGameScreenWithRandomBlocks.decB
	         $2182 = PopulateGameScreenWithRandomBlocks.mainLoop
	         $2185 = PopulateGameScreenWithRandomBlocks.fromWasTileEmpty
	         $2187 = PopulateGameScreenWithRandomBlocks.toDecRandom
	         $2192 = PopulateGameScreenWithRandomBlocks.afterChoosingEmptyOrPieceSquare
	         $219e = PopulateGameScreenWithRandomBlocks.pickedEmpty
	         $21a0 = PopulateGameScreenWithRandomBlocks.emptyOrActualPieceSquareChosen
	         $21b3 = PopulateGameScreenWithRandomBlocks.popAFstoreChosenSquare
	         $21b4 = PopulateGameScreenWithRandomBlocks.storeChosenSquare
	         $21c0 = PopulateGameScreenWithRandomBlocks.from2player
	         $21d5 = PopulateGameScreenWithRandomBlocks.toNextRow
	         $21db = PopulateGameScreenWithRandomBlocks.vramDestHighEqu9ah
	         $21e1 = GameState00_InGameMain
	         $220a = InGameCheckResetAndPause.startNotPressed
	         $220a = InGameCheckResetAndPause
	         $2219 = InGameCheckResetAndPause.setPieceVisibility
	         $2220 = InGameCheckResetAndPause.pieceNotHidden
	         $2223 = InGameCheckResetAndPause.start
	         $2255 = InGameCheckResetAndPause.waitUntilVramAndOamFree
	         $2263 = InGameCheckResetAndPause.setNextPieceVisibility
	         $2266 = InGameCheckResetAndPause.setCurrPieceVisibilityAndSend2PiecesToOam
	         $2270 = InGameCheckResetAndPause.gameUnPaused
	         $2280 = InGameCheckResetAndPause.is2Player
	         $229e = InGame2PlayerCheckUnpaused
	         $22b7 = InGame2PlayerCheckUnpaused.isPassive
	         $22c0 = InGame2PlayerCheckUnpaused.gameUnpaused
	         $22d8 = InGame2PlayerCheckUnpaused.loop
	         $22e2 = InGame2PlayerCheckUnpaused.popHL
	         $22e4 = Display2PlayerPauseText
	         $22ec = Display2PlayerPauseText.loop
	         $22f6 = Display2PlayerPauseText.text
	         $22fb = GameState01_GameOverInit
	         $2324 = GameState04_LevelEndedMain
	         $232d = GameState04_LevelEndedMain.aOrStartPressed
	         $2341 = GameState04_LevelEndedMain.setGameState
	         $2344 = GameState05_BTypeLevelFinished
	         $2389 = GameState05_BTypeLevelFinished.clearScore
	         $238d = GameState05_BTypeLevelFinished.fromLevel0
	         $23ab = DisplayBTypeScoreMultipliersBasedOnLevel
	         $23b2 = DisplayBTypeScoreMultipliersBasedOnLevel.clearScore
	         $23ba = DisplayBTypeScoreMultipliersBasedOnLevel.addScore
	         $23c9 = DisplayBTypeScoreMultipliersBasedOnLevel.checkForDigit
	         $23d8 = DisplayBTypeScoreMultipliersBasedOnLevel.hasTens
	         $23de = DisplayBTypeScoreMultipliersBasedOnLevel.hasDigits
	         $23e7 = GameState0b_ScoreUpdateAfterBTypeLevelDone
	         $23f5 = GameState22_DancersInit
	         $240c = GameState22_DancersInit.night
	         $2415 = GameState22_DancersInit.copy
	         $2454 = GameState22_DancersInit.setNextDancerAnimDetails
	         $2469 = GameState22_DancersInit.numDancersInB
	         $2472 = GameState22_DancersInit.loopSetVisible
	         $248b = Dancers_AnimationTimers
	         $2495 = GameState23_sendDancersToOam
	         $249b = GameState23_DancersMain
	         $24ab = GameState23_DancersMain.nextDancer
	         $24c4 = GameState23_DancersMain.toNextDancer
	         $24e0 = GameState23_DancersMain.setGameState
	         $24e3 = GameState23_DancersMain.isJumperStanding
	         $24e9 = GameState23_DancersMain.isJumperJumping
	         $24ef = After4ScoreCategoriesProcessed
	         $2531 = ProcessScoreUpdatesAfterBTypeLevelDone
	         $256c = ProcessScoreUpdatesAfterBTypeLevelDone.processCategory
	         $2570 = GameState0c_UnusedPreShuttleLiftOff
	         $2579 = GameState0d_GameOverScreenClearing
	         $2591 = GameState0d_GameOverScreenClearing.is1player
	         $25c6 = GameState0d_GameOverScreenClearing.setGameStateGameOverScreen
	         $25c8 = GameState0d_GameOverScreenClearing.setGameState
	         $25cb = GameState0d_GameOverScreenClearing.setRocketSpecIdxThenNextState
	         $25d7 = CopyGameScreenInnerText
	         $25d7 = CopyGameScreenInnerText.nextRow
	         $25da = CopyGameScreenInnerText.nextCol
	         $25eb = AddOnCompletedLinesScore
	         $261d = AddOnCompletedLinesScore.afterChoosingScoreCateg
	         $2623 = AddOnCompletedLinesScore.loop
	         $2631 = FillGameScreenBufferWithTileAandSetToVramTransfer
	         $2637 = FillGameScreenBufferWithTileA
	         $263f = FillGameScreenBufferWithTileA.nextRow
	         $2642 = FillGameScreenBufferWithTileA.nextCol
	         $264c = FillGameScreenBuffer2WithPaletteAandSetToVramTransfer
	         $2652 = FillGameScreenBuffer2WithPaletteA
	         $265a = FillGameScreenBuffer2WithPaletteA.nextRow
	         $265d = FillGameScreenBuffer2WithPaletteA.nextCol
	         $2667 = FillBottom2RowsOfTileMapWithEmptyTile
	         $2671 = FillBottom2RowsOfTileMapWithEmptyTile.nextRow
	         $2673 = FillBottom2RowsOfTileMapWithEmptyTile.nextCol
	         $267c = PlayNextPieceLoadNextAndHiddenPiece
	         $26ae = PlayNextPieceLoadNextAndHiddenPiece.inDemoOr2Player
	         $26bd = PlayNextPieceLoadNextAndHiddenPiece.setNextDemoStep
	         $26cb = PlayNextPieceLoadNextAndHiddenPiece.only1player
	         $26cd = PlayNextPieceLoadNextAndHiddenPiece.upToDIV
	         $26d0 = PlayNextPieceLoadNextAndHiddenPiece.xorAloop
	         $26d1 = PlayNextPieceLoadNextAndHiddenPiece.nextB
	         $26de = PlayNextPieceLoadNextAndHiddenPiece.bEqu0
	         $26ec = PlayNextPieceLoadNextAndHiddenPiece.hDone
	         $26ef = PlayNextPieceLoadNextAndHiddenPiece.skipDIV
	         $270a = InGameHandlePieceFalling.holdingDown
	         $270a = InGameHandlePieceFalling
	         $271c = InGameHandlePieceFalling.afterCheckingIfPressedDown
	         $2735 = InGameHandlePieceFalling.start
	         $273d = InGameHandlePieceFalling.afterPressedDown
	         $274a = InGameHandlePieceFalling.sendActivePieceToOam
	         $274e = InGameHandlePieceFalling.currScoreEqu0
	         $275b = InGameHandlePieceFalling.afterIncTimesHoldingDownForPiece
	         $2799 = InGameHandlePieceFalling.clearTimesHoldingDown
	         $279c = InGameHandlePieceFalling.fromNotHoldingDown
	         $27bd = InGameHandlePieceFalling.skipGameOver
	         $27bf = InGameHandlePieceFalling.isAType
	         $27c0 = InGameHandlePieceFalling.keepAdding
	         $27c7 = InGameHandlePieceFalling.addDropsToScore
	         $27d7 = InGameCheckIfAnyTetrisRowsComplete
	         $27ec = InGameCheckIfAnyTetrisRowsComplete.nextRow
	         $27ef = InGameCheckIfAnyTetrisRowsComplete.nextCol
	         $2804 = InGameCheckIfAnyTetrisRowsComplete.toNextRow
	         $2834 = InGameCheckIfAnyTetrisRowsComplete.gameTypeB
	         $2843 = InGameCheckIfAnyTetrisRowsComplete.afterGameTypeNumLinesProcessing
	         $2868 = InGameCheckIfAnyTetrisRowsComplete.end
	         $2871 = InGameCheckIfAnyTetrisRowsComplete.emptyTileFoundInRow
	         $2874 = InGameCheckIfAnyTetrisRowsComplete.clearNumLinesCompleted
	         $2879 = FlashCompletedTetrisRows
	         $288f = FlashCompletedTetrisRows.upperOuterLoop
	         $289f = FlashCompletedTetrisRows.flashRow
	         $28a1 = FlashCompletedTetrisRows.flashRowLoop
	         $28aa = FlashCompletedTetrisRows.incFlashCount
	         $28b8 = FlashCompletedTetrisRows.flashed5times
	         $28c3 = FlashCompletedTetrisRows.finishedHandlingPieceFalling
	         $28c7 = FlashCompletedTetrisRows.flashRowsWithOrigTile
	         $28d1 = FlashCompletedTetrisRows.origTileCopyLoop
	         $28e1 = FlashCompletedTetrisRows.doneWithFallingPiecePlayNextPiece
	         $28e6 = ShiftEntireGameRamBufferDownARow
	         $28f3 = ShiftEntireGameRamBufferDownARow.nextCompletedRow
	         $28fe = ShiftEntireGameRamBufferDownARow.nextRow
	         $2901 = ShiftEntireGameRamBufferDownARow.rowShiftCopy
	         $2920 = ShiftEntireGameRamBufferDownARow.clearTopRow
	         $2924 = ShiftEntireGameRamBufferDownARow2
	         $293a = ShiftEntireGameRamBufferDownARow2.nextCompletedRow
	         $2945 = ShiftEntireGameRamBufferDownARow2.nextRow
	         $2948 = ShiftEntireGameRamBufferDownARow2.rowShiftCopy
	         $296f = ShiftEntireGameRamBufferDownARow2.clearTopRow
	         $297f = ClearPointersToCompletedTetrisRows
	         $2985 = ClearPointersToCompletedTetrisRows.loop
	         $298e = CopyRamBufferRow17ToVram
	         $29b4 = CopyRamBufferRow16ToVram
	         $29da = CopyRamBufferRow15ToVram
	         $2a00 = CopyRamBufferRow14ToVram
	         $2a26 = CopyRamBufferRow13ToVram
	         $2a4c = CopyRamBufferRow12ToVram
	         $2a72 = CopyRamBufferRow11ToVram
	         $2aa0 = CopyRamBufferRow11ToVram.loop
	         $2aa6 = CopyRamBufferRow11ToVram.is2Player
	         $2ab4 = CopyRamBufferRow10ToVram
	         $2ada = CopyRamBufferRow9ToVram
	         $2b00 = CopyRamBufferRow8ToVram
	         $2b26 = CopyRamBufferRow7ToVram
	         $2b4c = CopyRamBufferRow6ToVram
	         $2b72 = CopyRamBufferRow5ToVram
	         $2b98 = CopyRamBufferRow4ToVram
	         $2bbe = CopyRamBufferRow3ToVram
	         $2be7 = CopyRamBufferRow2ToVram
	         $2c17 = CopyRamBufferRow1ToVram
	         $2c43 = CopyRamBufferRow0ToVram
	         $2c77 = CopyRamBufferRow0ToVram.getLinesToDisplay
	         $2c8d = CopyRamBufferRow0ToVram.displayLines
	         $2cac = CopyRamBufferRow0ToVram.is1playerEnd
	         $2cb6 = CopyRamBufferRow0ToVram.setGameState
	         $2cb9 = CopyRamBufferRow0ToVram.playNextPiece
	         $2cbd = CopyRamBufferRow0ToVram.is2player
	         $2cc9 = DisplayGameATypeScoreIfInGameAndForced
	         $2cd9 = CheckIfATypeNextLevelReached
	         $2d04 = CheckIfATypeNextLevelReached.lv5
	         $2d0f = CheckIfATypeNextLevelReached.lv10
	         $2d1a = CheckIfATypeNextLevelReached.lv15
	         $2d25 = CheckIfATypeNextLevelReached.lv20
	         $2d30 = CheckIfATypeNextLevelReached.continue
	         $2d39 = CheckIfATypeNextLevelReached.nextDigit
	         $2d4f = CheckIfATypeNextLevelReached.afterSendingNewLevelToVram
	         $2d58 = ABisBCDofValInHL
	         $2d5d = ABisBCDofValInHL.loop
	         $2d65 = ABisBCDofValInHL.copyAtoB
	         $2d67 = CopyRamBufferRowToVram
	         $2d69 = CopyRamBufferRowToVram.loop
	         $2d76 = InGameCheckButtonsPressed
	         $2d95 = InGameCheckButtonsPressed.pressedAAnimation0
	         $2d9b = InGameCheckButtonsPressed.pressedB
	         $2da5 = InGameCheckButtonsPressed.pressedBAnimation3
	         $2da9 = InGameCheckButtonsPressed.afterRotation
	         $2dc4 = InGameCheckButtonsPressed.afterCollisionCheck
	         $2de2 = InGameCheckButtonsPressed.pressedRight
	         $2df5 = InGameCheckButtonsPressed.afterHorizCollisionCheck
	         $2e04 = InGameCheckButtonsPressed.notHeldLeft
	         $2e07 = InGameCheckButtonsPressed.notHeldRight
	         $2e19 = InGameCheckButtonsPressed.pressedLeft
	         $2e2e = RetZIfNoCollisionForPiece
	         $2e33 = RetZIfNoCollisionForPiece.nextSprite
	         $2e4e = RetZIfNoCollisionForPiece.empty
	         $2e55 = RetZIfNoCollisionForPiece.fromXis0
	         $2e59 = RetZIfNoCollisionForPiece.notEmpty
	         $2e60 = InGameAddPieceToVram
	         $2e6a = InGameAddPieceToVram.nextSquareOfPiece
	         $2e7c = InGameAddPieceToVram.waitUntilVramAndOamFree
	         $2e97 = InGameAddPieceToVram.nextState
	         $2ea1 = ConvertFromObjectTileToBGTile
	         $2ead = ConvertFromObjectTileToBGTile.subForFxValues
	         $2eaf = ConvertFromObjectTileToBGTile.getOffset
	         $2eb4 = InGameAddPieceToVram1
	         $2ec3 = InGameAddPieceToVram1.nextSquareOfPiece
	         $2ed5 = InGameAddPieceToVram1.waitUntilVramAndOamFree
	         $2ef5 = InGameAddPieceToVram1.nextState
	         $2f03 = PieceTileConversionLookUpTable
	         $2f0f = PieceBGColorLookUpTable
	         $2f16 = ProcessCurrentScoreCategory
	         $2f34 = ProcessCurrentScoreCategory.afterDisplaying10s
	         $2f39 = ProcessCurrentScoreCategory.addCategScore
	         $2f55 = ProcessCurrentScoreCategory.addToTotalScore
	         $2f63 = ProcessCurrentScoreCategory.displayTotalScoreWhileCurrentCategIsUpdating
	         $2f76 = ProcessCurrentScoreCategory.currentCategScoreLineCountEqu0
	         $2f77 = IncScoreCategoryProcessedAfterBTypeDone
	         $2f8e = ClearScoreCategoryVarsAndTotalScore
	         $2f94 = ClearScoreCategoryVarsAndTotalScore.clearStructs
	         $2f9d = ClearScoreCategoryVarsAndTotalScore.clearScore
	         $2fa2 = ConvertHexToDec
	         $2fa3 = ConvertHexToDec.convertLoop
	         $2fa9 = UpdateClock
	         $2fc2 = UpdateClock.doHours
	         $2fd5 = UpdateClock.loopa
	         $2fec = UpdateClock.doMinutes
	         $2fff = UpdateClock.loopb
	         $301b = UpdateClock.setSramBank
	         $3021 = UpdateClock.updateSIsDay_DuskDawn_Night
	         $3051 = UpdateClock.isDay
	         $305b = UpdateClock.isDuskOrDawn
	         $3067 = UpdateClock.isNight
	         $3074 = ColonTile
	         $3084 = IsDMGSwitch
	         $3089 = IsDMG
	         $30a3 = UnusedStoreBCDByteInHLInDestDE
	         $30af = Copy2SpriteSpecsToShadowOam
	         $30b1 = CopyASpriteSpecsToShadowOam
	         $30c1 = Copy1stSpriteSpecToSprite4
	         $30d4 = Copy2ndSpriteSpecToSprite8
	         $30e7 = DisplayBlackColumnFromHLdown
	         $30ee = DisplayBlackColumnFromHLdown.loop
	         $30f4 = CopyDEintoHLwhileFFhNotFound
	         $30f4 = CopyDEintoHLwhileFFhNotFound.loop
	         $30fc = StubInterruptHandler
	         $30fd = SpriteSpecStruct_LPieceActive
	         $3105 = SpriteSpecStruct_LPieceNext
	         $310d = SpriteSpecStruct_GameMusicAType
	         $3119 = SpriteSpecStruct_ATypeFlashing0
	         $311f = SpriteSpecStruct_BTypeLevelAndHigh
	         $312b = SpriteSpecStruct_2PlayerHighsFlashing1
	         $3137 = SpriteSpecStruct_StandingMarioCryingBabyMario
	         $3149 = SpriteSpecStruct_StandingLuigiCryingBabyLuigi
	         $315b = SpriteSpecStruct_MariosFacingAway
	         $3167 = SpriteSpecStruct_LuigisFacingAway
	         $3173 = SpriteSpecStruct_Dancers
	         $31af = SpriteSpecStruct_ShuttleAndGas
	         $31c1 = SpriteSpecStruct_RocketAndGas
	         $31d3 = FillScreen0FromHLdownWithEmptyTile
	         $31d6 = FillScreenFromHLdownWithEmptyTile
	         $31d9 = FillScreenFromHLdownWithEmptyTile.loop
	         $31e2 = CopyHLtoDE_BCbytes
	         $31e2 = CopyHLtoDE_BCbytes.loop
	         $31eb = CopyAtoDE_BCbytes
	         $31eb = CopyAtoDE_BCbytes.loop
	         $31f5 = LoadAsciiAndMenuScreenGfx
	         $3210 = CopyAsciiTileData
	         $3219 = CopyAsciiTileData.loop
	         $3224 = CopyAsciiAndTitleScreenTileData
	         $3243 = UnusedCopyHLtoVram1000hBytes
	         $3246 = CopyHLtoVramBCbytes
	         $324c = Stub_27ea
	         $324d = CopyLayoutToScreen0
	         $3250 = CopyLayoutToHL
	         $3252 = CopyLayoutBrowsToHL
	         $3252 = CopyLayoutBrowsToHL.loopRow
	         $3255 = CopyLayoutBrowsToHL.loopCol
	         $3266 = CopyAttrToScreen0
	         $3269 = CopyAttrToHL
	         $326b = CopyAttrBrowsToHL
	         $3270 = CopyAttrBrowsToHL.loopRow
	         $3274 = CopyAttrBrowsToHL.loopCol
	         $328b = CopyLayoutAndAttrToScreen0
	         $328e = CopyLayoutAndAttrToHL
	         $3290 = CopyLayoutAndAttrBrowsToHL
	         $3290 = CopyLayoutAndAttrBrowsToHL.loopRow
	         $3293 = CopyLayoutAndAttrBrowsToHL.loopCol
	         $32b0 = CopyPalettesToCram
	         $32b2 = CopyPalettesToCram.loadPaletteLoop
	         $32bc = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer
	         $32bc = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.nextRow
	         $32bf = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.loop
	         $32d3 = CopyToGameScreenUntilByteReadEquFFhThenSetVramTransfer.done
	         $32d9 = TurnOffLCD
	         $32e1 = TurnOffLCD.waitUntilInVBlank
	         $32f2 = GameInnerScreenLayout_Pause
	         $3342 = GameScreenLayout_ScoreTotals
	         $34ac = GameInnerScreenLayout_GameOver
	         $34e4 = GameInnerScreen_TryAgain
	         $3514 = PollInput
	         $3551 = GetScreen0AddressOfPieceSquare
	         $3564 = GetScreen0AddressOfPieceSquare.loop
	         $357e = UnusedMovePieceUpAndRight
	         $3586 = UnusedMovePieceUpAndRight.deDiv16
	         $35a4 = DisplayBCDNum6DigitsIfForced
	         $35a8 = DisplayBCDNum6Digits
	         $35aa = DisplayBCDNum2CDigits
	         $35ad = DisplayBCDNum2CDigits.nextByte
	         $35be = DisplayBCDNum2CDigits.displayTens
	         $35d4 = DisplayBCDNum2CDigits.displayOnes
	         $35dd = DisplayBCDNum2CDigits.tensNot0
	         $35e5 = DisplayBCDNum2CDigits.onesNot0
	         $35ed = OamDmaFunction
	         $35f3 = OamDmaFunction.wait
	         $35f7 = CopyToShadowOamBasedOnSpriteSpec
	         $35fc = CopyToShadowOamBasedOnSpriteSpec.nextStructInSpriteSpec
	         $360a = CopyToShadowOamBasedOnSpriteSpec.checkIfMoreSpriteSpecs
	         $361c = CopyToShadowOamBasedOnSpriteSpec.showNextSpritesCheckIfMoreSpriteSpecs
	         $3621 = CopyToShadowOamBasedOnSpriteSpec.hideNextSpritesBeingProcessed
	         $3623 = CopyToShadowOamBasedOnSpriteSpec.dontHideNextSpritesBeingProcessed
	         $3628 = CopyToShadowOamBasedOnSpriteSpec.copyLoop1
	         $364b = CopyToShadowOamBasedOnSpriteSpec.bigLoop
	         $3666 = CopyToShadowOamBasedOnSpriteSpec.dataByteEquFEh
	         $366a = CopyToShadowOamBasedOnSpriteSpec.dataByteNotFFhOrFDh
	         $366e = CopyToShadowOamBasedOnSpriteSpec.setTileIndex
	         $3681 = CopyToShadowOamBasedOnSpriteSpec.spriteSpecYFlipped
	         $368b = CopyToShadowOamBasedOnSpriteSpec.setSpriteY
	         $36a0 = CopyToShadowOamBasedOnSpriteSpec.spriteSpecXFlipped
	         $36aa = CopyToShadowOamBasedOnSpriteSpec.setSpriteX
	         $36bc = CopyToShadowOamBasedOnSpriteSpec.dontHideSprite
	         $36be = CopyToShadowOamBasedOnSpriteSpec.setSpriteVars
	         $36da = ConvertFromBgTileToObjectTile
	         $36f8 = ConvertFromBgTileToObjectTile.isInGame
	         $3700 = ConvertFromBgTileToObjectTile.pastGarbageBlock
	         $3707 = ConvertFromBgTileToObjectTile.pastGarbageBlock2
	         $370e = ConvertFromBgTileToObjectTile.isHorIPieceEnd
	         $3711 = InvertPalettes
	         $3718 = !10
	         $3728 = !11
	         $3732 = LoadTimeBasedPalettes
	         $3748 = LoadTimeBasedPalettes.adjLoopA
	         $374e = LoadTimeBasedPalettes.noPalAdjA
	         $3761 = LoadTimeBasedPalettes.skipBg
	EMPTY: $376c-$3fef ($0884 bytes)
	SECTION: $3ff0-$3fff ($0010 bytes) ["Sound Thunk Funcs"]
	         $3ff0 = ThunkUpdateSound
	         $3ff8 = ThunkInitSound
	TOTAL EMPTY: $08b7 bytes

ROMX bank #1:
	SECTION: $4000-$46da ($06db bytes) ["Sprite Data"]
	         $4000 = SpriteData
	         $40bc = SpriteSpec_00
	         $40c0 = SpriteSpec_01
	         $40c4 = SpriteSpec_02
	         $40c8 = SpriteSpec_03
	         $40cc = SpriteSpec_04
	         $40d0 = SpriteSpec_05
	         $40d4 = SpriteSpec_06
	         $40d8 = SpriteSpec_07
	         $40dc = SpriteSpec_08
	         $40e0 = SpriteSpec_09
	         $40e4 = SpriteSpec_0a
	         $40e8 = SpriteSpec_0b
	         $40ec = SpriteSpec_0c
	         $40f0 = SpriteSpec_0d
	         $40f4 = SpriteSpec_0e
	         $40f8 = SpriteSpec_0f
	         $40fc = SpriteSpec_10
	         $4100 = SpriteSpec_11
	         $4104 = SpriteSpec_12
	         $4108 = SpriteSpec_13
	         $410c = SpriteSpec_14
	         $4110 = SpriteSpec_15
	         $4114 = SpriteSpec_16
	         $4118 = SpriteSpec_17
	         $411c = SpriteSpec_18
	         $4120 = SpriteSpec_19
	         $4124 = SpriteSpec_1a
	         $4128 = SpriteSpec_1b
	         $412c = SpriteSpec_1c
	         $4130 = SpriteSpec_1d
	         $4134 = SpriteSpec_1e
	         $4138 = SpriteSpec_1f
	         $413c = SpriteSpec_20
	         $4140 = SpriteSpec_21
	         $4144 = SpriteSpec_22
	         $4148 = SpriteSpec_23
	         $414c = SpriteSpec_24
	         $4150 = SpriteSpec_25
	         $4154 = SpriteSpec_26
	         $4158 = SpriteSpec_27
	         $415c = SpriteSpec_28
	         $4160 = SpriteSpec_29
	         $4164 = SpriteSpec_2a
	         $4168 = SpriteSpec_2b
	         $4168 = SpriteSpec_2d
	         $416c = SpriteSpec_2e
	         $4170 = SpriteSpec_2f
	         $4174 = SpriteSpec_30
	         $4178 = SpriteSpec_31
	         $417c = SpriteSpec_32
	         $4180 = SpriteSpec_33
	         $4184 = SpriteSpec_36
	         $4188 = SpriteSpec_37
	         $418c = SpriteSpec_3a
	         $4190 = SpriteSpec_3b
	         $4194 = SpriteSpec_3c
	         $4198 = SpriteSpec_3d
	         $419c = SpriteSpec_3e
	         $41a0 = SpriteSpec_3f
	         $41a0 = SpriteSpec_42
	         $41a4 = SpriteSpec_43
	         $41a4 = SpriteSpec_44
	         $41a8 = SpriteSpec_45
	         $41ac = SpriteSpec_46
	         $41b0 = SpriteSpec_47
	         $41b4 = SpriteSpec_48
	         $41b8 = SpriteSpec_49
	         $41bc = SpriteSpec_4a
	         $41c0 = SpriteSpec_4b
	         $41c4 = SpriteSpec_4c
	         $41c8 = SpriteSpec_4d
	         $41cc = SpriteSpec_4e
	         $41d0 = SpriteSpec_4f
	         $41d4 = SpriteSpec_50
	         $41d8 = SpriteSpec_51
	         $41dc = SpriteSpec_52
	         $41e0 = SpriteSpec_53
	         $41e4 = SpriteSpec_54
	         $41e8 = SpriteSpec_55
	         $41ec = SpriteSpec_56
	         $41f0 = SpriteSpec_57
	         $41f4 = SpriteTiles_00
	         $4204 = SpriteTiles_01
	         $4216 = SpriteTiles_02
	         $4225 = SpriteTiles_03
	         $4236 = SpriteTiles_04
	         $4248 = SpriteTiles_05
	         $4259 = SpriteTiles_06
	         $4267 = SpriteTiles_07
	         $4278 = SpriteTiles_08
	         $4287 = SpriteTiles_09
	         $4298 = SpriteTiles_0a
	         $42a7 = SpriteTiles_0b
	         $42b8 = SpriteTiles_0c
	         $42ca = SpriteTiles_0d
	         $42dc = SpriteTiles_0e
	         $42ee = SpriteTiles_0f
	         $4300 = SpriteTiles_10
	         $4312 = SpriteTiles_11
	         $4322 = SpriteTiles_12
	         $4334 = SpriteTiles_13
	         $4344 = SpriteTiles_14
	         $4355 = SpriteTiles_15
	         $4366 = SpriteTiles_16
	         $4377 = SpriteTiles_17
	         $4388 = SpriteTiles_1a
	         $4396 = SpriteTiles_1b
	         $43a7 = SpriteTiles_18
	         $43b8 = SpriteTiles_19
	         $43c9 = SpriteTiles_1c
	         $43d2 = SpriteTiles_1d
	         $43db = SpriteTiles_1e
	         $43e4 = SpriteTiles_1f
	         $43ed = SpriteTiles_20
	         $43f1 = SpriteTiles_21
	         $43f5 = SpriteTiles_22
	         $43f9 = SpriteTiles_23
	         $43fd = SpriteTiles_24
	         $4401 = SpriteTiles_25
	         $4405 = SpriteTiles_26
	         $4409 = SpriteTiles_27
	         $440d = SpriteTiles_28
	         $4411 = SpriteTiles_29
	         $4415 = SpriteTiles_2a
	         $4420 = SpriteTiles_2d
	         $4420 = SpriteTiles_2b
	         $442b = SpriteTiles_2e
	         $443f = SpriteTiles_2f
	         $4454 = SpriteTiles_30
	         $445d = SpriteTiles_31
	         $4466 = SpriteTiles_32
	         $446d = SpriteTiles_33
	         $4474 = SpriteTiles_36
	         $447f = SpriteTiles_37
	         $448a = SpriteTiles_3a
	         $449f = SpriteTiles_3b
	         $44b5 = SpriteTiles_3c
	         $44be = SpriteTiles_3d
	         $44c7 = SpriteTiles_3e
	         $44ce = SpriteTiles_42
	         $44ce = SpriteTiles_3f
	         $44d5 = SpriteTiles_44
	         $44d5 = SpriteTiles_43
	         $44dc = SpriteTiles_45
	         $44e3 = SpriteTiles_46
	         $44ea = SpriteTiles_47
	         $44f1 = SpriteTiles_48
	         $44f8 = SpriteTiles_49
	         $4503 = SpriteTiles_4a
	         $450a = SpriteTiles_4b
	         $4511 = SpriteTiles_4c
	         $4518 = SpriteTiles_4d
	         $451f = SpriteTiles_4e
	         $4528 = SpriteTiles_4f
	         $4531 = SpriteTiles_50
	         $453a = SpriteTiles_51
	         $4543 = SpriteTiles_52
	         $454c = SpriteTiles_53
	         $4555 = SpriteTiles_54
	         $455c = SpriteTiles_55
	         $4563 = SpriteSpec_2c
	         $4567 = SpriteTiles_2c
	         $4586 = SpriteSpec_34
	         $458a = SpriteSpec_35
	         $458e = SpriteSpec_38
	         $4592 = SpriteSpec_39
	         $4596 = SpriteSpec_40
	         $459a = SpriteSpec_41
	         $459e = SpriteSpec_5c
	         $45a2 = SpriteSpec_5d
	         $45a6 = SpriteSpec_58
	         $45aa = SpriteSpec_59
	         $45ae = SpriteSpec_5a
	         $45ae = SpriteSpec_5b
	         $45b2 = SpriteTiles_34
	         $45b8 = SpriteTiles_35
	         $45c1 = SpriteTiles_38
	         $45c7 = SpriteTiles_39
	         $45cd = SpriteTiles_40
	         $45d6 = SpriteTiles_41
	         $45e2 = SpriteTiles_56
	         $45f9 = SpriteTiles_57
	         $4600 = SpriteTiles_58
	         $4618 = SpriteTiles_59
	         $462a = SpriteTiles_5b
	         $462a = SpriteTiles_5a
	         $4639 = SpriteTiles_5c
	         $463f = SpriteTiles_5d
	         $4645 = SpriteCoords_00
	         $4645 = SpriteCoords_01
	         $4645 = SpriteCoords_02
	         $4645 = SpriteCoords_03
	         $4645 = SpriteCoords_04
	         $4645 = SpriteCoords_05
	         $4645 = SpriteCoords_06
	         $4645 = SpriteCoords_07
	         $4645 = SpriteCoords_08
	         $4645 = SpriteCoords_09
	         $4645 = SpriteCoords_0a
	         $4645 = SpriteCoords_0b
	         $4645 = SpriteCoords_0c
	         $4645 = SpriteCoords_0d
	         $4645 = SpriteCoords_0e
	         $4645 = SpriteCoords_0f
	         $4645 = SpriteCoords_10
	         $4645 = SpriteCoords_11
	         $4645 = SpriteCoords_12
	         $4645 = SpriteCoords_13
	         $4645 = SpriteCoords_14
	         $4645 = SpriteCoords_15
	         $4645 = SpriteCoords_16
	         $4645 = SpriteCoords_17
	         $4645 = SpriteCoords_1a
	         $4645 = SpriteCoords_1b
	         $4645 = SpriteCoords_18
	         $4645 = SpriteCoords_19
	         $4645 = SpriteCoords_2e
	         $4645 = SpriteCoords_2f
	         $4645 = SpriteCoords_3a
	         $4645 = SpriteCoords_3b
	         $4645 = SpriteCoords_56
	         $4665 = SpriteCoords_1c
	         $4665 = SpriteCoords_1d
	         $4665 = SpriteCoords_1e
	         $4665 = SpriteCoords_1f
	         $4665 = SpriteCoords_20
	         $4665 = SpriteCoords_21
	         $4665 = SpriteCoords_22
	         $4665 = SpriteCoords_23
	         $4665 = SpriteCoords_24
	         $4665 = SpriteCoords_25
	         $4665 = SpriteCoords_26
	         $4665 = SpriteCoords_27
	         $4665 = SpriteCoords_28
	         $4665 = SpriteCoords_29
	         $4675 = SpriteCoords_2a
	         $4675 = SpriteCoords_2d
	         $4675 = SpriteCoords_30
	         $4675 = SpriteCoords_31
	         $4675 = SpriteCoords_32
	         $4675 = SpriteCoords_33
	         $4675 = SpriteCoords_36
	         $4675 = SpriteCoords_37
	         $4675 = SpriteCoords_3c
	         $4675 = SpriteCoords_3d
	         $4675 = SpriteCoords_3e
	         $4675 = SpriteCoords_42
	         $4675 = SpriteCoords_44
	         $4675 = SpriteCoords_45
	         $4675 = SpriteCoords_46
	         $4675 = SpriteCoords_47
	         $4675 = SpriteCoords_48
	         $4675 = SpriteCoords_49
	         $4675 = SpriteCoords_4a
	         $4675 = SpriteCoords_4b
	         $4675 = SpriteCoords_4c
	         $4675 = SpriteCoords_4d
	         $4675 = SpriteCoords_4e
	         $4675 = SpriteCoords_4f
	         $4675 = SpriteCoords_50
	         $4675 = SpriteCoords_51
	         $4675 = SpriteCoords_52
	         $4675 = SpriteCoords_53
	         $4675 = SpriteCoords_54
	         $4675 = SpriteCoords_55
	         $4675 = SpriteCoords_57
	         $4675 = SpriteCoords_58
	         $4675 = SpriteCoords_59
	         $4675 = SpriteCoords_5b
	         $4675 = SpriteCoords_5c
	         $4675 = SpriteCoords_5d
	         $4675 = SpriteCoords_5a
	         $4675 = SpriteCoords_3f
	         $4675 = SpriteCoords_43
	         $4675 = SpriteCoords_2b
	         $4691 = SpriteCoords_2c
	         $46c9 = SpriteCoords_34
	         $46c9 = SpriteCoords_35
	         $46c9 = SpriteCoords_38
	         $46c9 = SpriteCoords_39
	         $46c9 = SpriteCoords_40
	         $46c9 = SpriteCoords_41
	SECTION: $46db-$7f74 ($389a bytes) ["Graphics and Layouts"]
	         $46db = Gfx_MenuScreens
	         $56db = Gfx_MenuScreens.end
	         $56db = Gfx_Ascii
	         $5813 = Gfx_Ascii.end
	         $5813 = Gfx_TitleScreen
	         $6003 = Layout_Copyright
	         $6003 = Gfx_TitleScreen.end
	         $616b = Layout_TitleScreen
	         $661b = GameScreenLayout_Dancers
	         $6785 = Layout_RocketScene
	         $6a55 = Layout_MarioLuigiScreen
	         $6d25 = Layout_2PlayerInGame
	         $6ff5 = Layout_MarioScore
	         $7095 = Layout_BricksAndLuigiScore
	         $7185 = Gfx_RocketScene
	         $7f75 = Gfx_RocketScene.end
	EMPTY: $7f75-$7fff ($008b bytes)
	TOTAL EMPTY: $008b bytes

ROMX bank #2:
	SECTION: $4000-$51fa ($11fb bytes) ["Song Data"]
	         $4000 = EnvelopeData
	         $4039 = FrequencyTable
	         $40c9 = UnusedNop
	         $40ca = NoiseStructBytes6toA
	         $40de = WavRam_Init_After4LinesCleared
	         $40ee = UnusedWavRam
	         $40fe = WavRam_6ec9
	         $410e = WavRam_Init_GameOver
	         $411e = DefaultWavRam
	         $412e = TemposTable_6ef9
	         $413a = TemposTable_6f05
	         $4143 = TemposTable_6f0e
	         $4160 = TemposTable_6f2b
	         $4174 = Song1_SoundData
	         $417f = Song2_SoundData
	         $418a = Song3_SoundData
	         $4195 = Song4_SoundData
	         $41a0 = Song5_SoundData
	         $41ab = Song6_SoundData
	         $41b6 = Song7_SoundData
	         $41c1 = Song8_SoundData
	         $41cc = Song9_SoundData
	         $41d7 = Song10_SoundData
	         $41e2 = Song11_SoundData
	         $41ed = Song12_SoundData
	         $41f8 = Song13_SoundData
	         $4203 = Song14_SoundData
	         $420e = Song15_SoundData
	         $4219 = Song16_SoundData
	         $4224 = Song17_SoundData
	         $422f = Song7_Sq2Data
	         $422f = !0
	         $423d = Song7_Sq1Data
	         $423d = !1
	         $424b = Song7_Sq2_Section1Data
	         $4269 = Song7_Sq2_Section2Data
	         $4282 = Song7_Sq2_Section3Data
	         $4297 = Song7_Sq1_Section1Data
	         $42a9 = Song7_Sq1_Section2Data
	         $42ba = Song7_Sq1_Section3Data
	         $42c8 = Song7_Sq2_Section4Data
	         $4329 = Song7_Sq1_Section4Data
	         $4377 = Song5_Sq2Data
	         $4377 = !2
	         $4381 = Song5_Sq1Data
	         $4381 = !3
	         $438b = Song5_WavData
	         $438b = !4
	         $4397 = Song5_NoiseData
	         $4397 = !5
	         $439d = Song5_Sq2_Section1Data
	         $43e3 = Song5_Sq2_Section2Data
	         $4400 = Song5_Sq1_Section1Data
	         $4452 = Song5_Sq1_Section2Data
	         $446f = Song5_Wav_Section1Data
	         $44b4 = Song5_Wav_Section2Data
	         $44d8 = Song5_Noise_Section1Data
	         $44ed = Song6_Sq2Data
	         $44ed = !6
	         $44fb = Song6_Sq1Data
	         $44fb = !7
	         $4509 = Song6_WavData
	         $4509 = !8
	         $4537 = Song6_NoiseData
	         $4537 = !9
	         $453d = Song6_Sq1_Section1Data
	         $4540 = Song6_Sq2_Section1Data
	         $4554 = Song6_Wav_Section1Data
	         $4568 = Song6_Noise_Section1Data
	         $4571 = Song6_Sq1_Section2Data
	         $4574 = Song6_Sq2_Section2Data
	         $4588 = Song6_Wav_Section2Data
	         $459c = Song6_Sq2_Section3Data
	         $45c3 = Song6_Sq1_Section3Data
	         $45ea = Song6_Wav_Section3Data
	         $45fe = Song6_Sq2_Section4Data
	         $4680 = Song6_Sq1_Section4Data
	         $46f5 = Song6_Wav_Section4Data
	         $4713 = Song6_Wav_Section5Data
	         $4723 = Song6_Wav_Section6Data
	         $4733 = Song6_Wav_Section7Data
	         $4743 = Song6_Wav_Section8Data
	         $4753 = Song6_Wav_Section9Data
	         $4763 = Song6_Wav_Section10Data
	         $4778 = Song16_Sq1Data
	         $477a = !10
	         $4780 = Song16_Sq2Data
	         $4780 = !11
	         $4786 = Song16_WavData
	         $4786 = !12
	         $478c = Song16_Sq1_Section1Data
	         $4793 = Song16_Sq2_Section1Data
	         $4797 = Song16_Sq1_Section2Data
	         $47b1 = Song16_Wav_Section1Data
	         $47c2 = Song17_Sq1Data
	         $47c4 = !13
	         $47ca = Song17_Sq2Data
	         $47ca = !14
	         $47d0 = Song17_WavData
	         $47d0 = !15
	         $47d6 = Song17_Sq1_Section1Data
	         $47dd = Song17_Sq2_Section1Data
	         $47e1 = Song17_Sq1_Section2Data
	         $4823 = Song17_Wav_Section1Data
	         $4831 = Song4_Sq2Data
	         $4835 = Song4_Sq1Data
	         $4837 = Song4_WavData
	         $4839 = Song4_Sq2_Section1Data
	         $4849 = Song4_Sq1_Section1Data
	         $4858 = Song4_Wav_Section1Data
	         $4868 = Song3_Sq2Data
	         $4870 = Song3_Sq1Data
	         $4876 = Song3_WavData
	         $4898 = Song3_NoiseData
	         $48a4 = Song3_Sq2_Section1Data
	         $48f4 = Song3_Sq1_Section1Data
	         $4941 = Song3_Wav_Section1Data
	         $4990 = Song3_Noise_Section1Data
	         $499e = Song3_Sq2_Section2Data
	         $49df = Song3_Sq1_Section2Data
	         $4a20 = Song3_Wav_Section2Data
	         $4a2a = Song3_Wav_Section3Data
	         $4a33 = Song3_Wav_Section4Data
	         $4a3c = Song3_Wav_Section5Data
	         $4a46 = Song3_Wav_Section6Data
	         $4a4f = Song3_Noise_Section2Data
	         $4a71 = Song3_Sq1_Section3Data
	         $4aa1 = Song15_Sq1Data
	         $4aab = Song15_Sq2Data
	         $4ab3 = Song15_WavData
	         $4abb = Song15_NoiseData
	         $4ac3 = Song15_Sq1_Section1Data
	         $4ae2 = Song15_Sq2_Section1Data
	         $4b0a = Song15_Wav_Section1Data
	         $4b33 = Song15_Noise_Section1Data
	         $4b46 = Song15_Sq1_Section2Data
	         $4b6d = Song15_Sq2_Section2Data
	         $4b93 = Song15_Wav_Section2Data
	         $4bb9 = Song15_Noise_Section2Data
	         $4bcb = Song15_Sq1_Section3Data
	         $4bef = Song15_Sq2_Section3Data
	         $4c12 = Song15_Wav_Section3Data
	         $4c35 = Song10_Sq2Data
	         $4c39 = Song10_Sq2_Section1Data
	         $4c5b = Song11_Sq2Data
	         $4c5f = Song11_WavData
	         $4c61 = Song11_Sq2_Section1Data
	         $4c80 = Song11_Wav_Section1Data
	         $4ca4 = Song12_Sq2Data
	         $4ca8 = Song12_Sq1Data
	         $4caa = Song12_WavData
	         $4cac = Song12_Sq2_Section1Data
	         $4ccb = Song12_Sq1_Section1Data
	         $4ce9 = Song12_Wav_Section1Data
	         $4d14 = Song13_Sq1Data
	         $4d18 = Song13_Sq2Data
	         $4d1a = Song13_WavData
	         $4d1c = Song13_NoiseData
	         $4d1e = Song13_Sq1_Section1Data
	         $4d3d = Song13_Sq2_Section1Data
	         $4d5a = Song13_Wav_Section1Data
	         $4d84 = Song13_Noise_Section1Data
	         $4d9a = Song14_Sq1Data
	         $4da0 = Song14_Sq2Data
	         $4da4 = Song14_WavData
	         $4da8 = Song14_NoiseData
	         $4dac = Song14_Sq1_Section1Data
	         $4dcb = Song14_Sq2_Section1Data
	         $4ddd = Song14_Wav_Section1Data
	         $4df0 = Song14_Noise_Section1Data
	         $4e03 = Song14_Sq1_Section2Data
	         $4e27 = Song14_Sq2_Section2Data
	         $4e37 = Song14_Wav_Section2Data
	         $4e47 = Song14_Noise_Section2Data
	         $4e59 = Song9_Sq2Data
	         $4e5d = Song9_Sq1Data
	         $4e5f = Song9_WavData
	         $4e61 = Song9_NoiseData
	         $4e63 = Song9_Sq2_Section1Data
	         $4e98 = Song9_Sq1_Section1Data
	         $4ecc = Song9_Wav_Section1Data
	         $4f00 = Song9_Noise_Section1Data
	         $4f2e = Song1_Sq1Data
	         $4f34 = Song1_Sq2Data
	         $4f36 = !16
	         $4f38 = Song1_Sq2Data.loop
	         $4f46 = Song1_WavData
	         $4f48 = !17
	         $4f56 = Song1_NoiseData
	         $4f58 = !18
	         $4f5e = Song1_Sq2_Section1Data
	         $4f63 = Song1_Sq1_Section1Data
	         $4f6a = Song1_Sq1and2_Section2Data
	         $4f70 = Song1_Wav_Section1Data
	         $4f73 = Song1_Noise_Section1Data
	         $4f76 = Song1_Noise_Section2Data
	         $4f90 = Song1_Sq1and2_Section3Data
	         $4fa1 = Song1_Wav_Section2Data
	         $4fb7 = Song1_Sq1and2_Section4Data
	         $4fc8 = Song1_Wav_Section3Data
	         $4fd9 = Song1_Sq1and2_Section5Data
	         $4fea = Song1_Wav_Section4Data
	         $4ffb = Song1_Sq1and2_Section6Data
	         $503c = Song1_Wav_Section5Data
	         $5079 = Song2_Sq2Data
	         $507d = Song2_Sq1Data
	         $507f = Song2_WavData
	         $5081 = Song2_NoiseData
	         $5083 = Song2_Sq2_Section1Data
	         $5093 = Song2_Sq1_Section1Data
	         $50a2 = Song2_Wav_Section1Data
	         $50b2 = Song2_Noise_Section1Data
	         $50c6 = Song8_Sq2Data
	         $50c6 = !19
	         $50d2 = Song8_Sq1Data
	         $50d2 = !20
	         $50de = Song8_WavData
	         $50de = !21
	         $50ea = Song8_NoiseData
	         $50ea = !22
	         $50f0 = Song8_Sq2_Section1Data
	         $511a = Song8_Sq1_Section1Data
	         $5130 = Song8_Wav_Section1Data
	         $5146 = Song8_Noise_Section1Data
	         $515d = Song8_Sq2_Section2Data
	         $5184 = Song8_Sq1_Section2Data
	         $5196 = Song8_Wav_Section2Data
	         $51a8 = Song8_Sq2_Section3Data
	         $51cb = Song8_Sq1_Section3Data
	         $51e3 = Song8_Wav_Section3Data
	EMPTY: $51fb-$51ff ($0005 bytes)
	SECTION: $5200-$5986 ($0787 bytes) ["Sunrise/Sunset Layouts"]
	         $5200 = Layout_TitleScreen_Sunrise_Sunset
	         $56b0 = Layout_RocketScene_Sunrise_Sunset
	         $5980 = PieceColorLookUpTable
	         $5980 = Layout_RocketScene_Sunrise_Sunset.end
	         $5987 = PieceColorLookUpTable.end
	SECTION: $5987-$62d1 ($094b bytes) ["Sound Engine"]
	         $5987 = SquareSoundEffectTable_Init
	         $5997 = SquareSoundEffectTable_Update
	         $59a7 = NoiseSoundEffect_Init
	         $59af = NoiseSoundEffect_Update
	         $59b7 = SongsSoundChannelsData
	         $59d9 = Stub
	         $59da = UpdateSound
	         $59ef = UpdateSound.endPath
	         $5a01 = UpdateSound.dontUnset
	         $5a16 = UpdateSound.done
	         $5a2b = UpdateSound.gameJustPaused
	         $5a57 = UpdateSound.setAud2RegsToPause1
	         $5a5a = UpdateSound.copyIntoAud2Regs
	         $5a5f = UpdateSound.setAud2RegsToPause2
	         $5a64 = UpdateSound.gameJustUnpaused
	         $5a6a = UpdateSound.processPausedCounter
	         $5a82 = Aud2RegVals_Pause1
	         $5a86 = Aud2RegVals_Pause2
	         $5a8a = IsSoundEffect_MovingSelection
	         $5a90 = IsSoundEffect_TetrisRowsFell
	         $5a96 = IsSoundEffect_4LinesCleared
	         $5a9c = IsSoundEffect_ReachedNextLevel
	         $5aa2 = Aud1RegValsInit_MovingSelection
	         $5aa7 = Aud1RegValsUpdate_MovingSelection
	         $5aac = Aud1RegValsInit_ConfirmOrLetterTyped
	         $5ab1 = SquareEffectInit_MovingSelection
	         $5ab9 = SquareEffectUpdate_MovingSelection
	         $5acd = SquareEffectInit_ConfirmOrLetterTyped
	         $5ad5 = SquareEffectUpdate_Common
	         $5ada = ClearAud1RegsAndVars
	         $5aee = Aud1RegVals_4LinesCleared_1
	         $5af3 = Aud1RegVals_4LinesCleared_2
	         $5af8 = SquareEffectInit_4LinesCleared
	         $5afe = SquareEffectUpdate_4LinesCleared
	         $5b15 = SquareEffectUpdate_4LinesCleared.finalWav
	         $5b1e = SquareEffectUpdate_4LinesCleared.sound2
	         $5b24 = SquareEffectUpdate_4LinesCleared.sound1
	         $5b2a = Aud1RegValsInit_PieceMovedHoriz
	         $5b2f = SquareEffectInit_PieceMovedHoriz
	         $5b47 = Aud1RegVals_ReachedNextLevel_0and4
	         $5b4c = Aud1RegVals_ReachedNextLevel_1
	         $5b51 = Aud1RegVals_ReachedNextLevel_2
	         $5b56 = Aud1RegVals_ReachedNextLevel_3
	         $5b5b = SquareEffectInit_ReachedNextLevel
	         $5b67 = SquareEffectUpdate_ReachedNextLevel
	         $5b87 = SquareEffectUpdate_ReachedNextLevel.sound1
	         $5b8c = SquareEffectUpdate_ReachedNextLevel.sound2
	         $5b91 = SquareEffectUpdate_ReachedNextLevel.sound3
	         $5b96 = SquareEffectUpdate_ReachedNextLevel.sound4
	         $5b99 = SquareEffectUpdate_ReachedNextLevel.copyIntoAud1Regs
	         $5b9c = Aud1RegValsInit_Non4LinesCleared
	         $5ba1 = Aud1EnvData_Non4LinesCleared
	         $5bac = Aud1FreqLoData_Non4LinesCleared
	         $5bb6 = SquareEffectInit_Non4LinesCleared
	         $5bca = SquareEffectUpdate_Non4LinesCleared
	         $5be8 = SetAud1EnvLowHighToEDB
	         $5bf3 = Aud1RegValsInit_PieceRotated
	         $5bf8 = Aud1EnvData_PieceRotated
	         $5bfe = Aud1FreqLoData_PieceRotated
	         $5c03 = SquareEffectInit_PieceRotated
	         $5c1b = SquareEffectUpdate_PieceRotated
	         $5c3b = SquareEffectInit_TetrisRowsFell
	         $5c47 = Aud1RegValsInit_TetrisRowsFell
	         $5c4c = Aud4RegValsInit_PieceHitFloor
	         $5c50 = Aud4RegValsInit_TetrisRowsFell
	         $5c54 = Aud4RegValsInit_RocketGas
	         $5c58 = Aud4RegValsInit_RocketFire
	         $5c5c = Aud4RegValsUpdate_RocketFire_Poly
	         $5c80 = Aud4RegValsUpdate_RocketFire_Env
	         $5ca4 = NoiseEffectInit_RocketGas
	         $5cac = NoiseEffectInit_RocketFire
	         $5cb4 = NoiseEffectUpdate_RocketFire
	         $5cdb = NoiseEffectInit_TetrisRowsFell
	         $5ce3 = NoiseEffectInit_PieceHitFloor
	         $5ceb = NoiseEffectUpdate_Common
	         $5cf0 = NoiseEffectUpdate_ClearNoise
	         $5d02 = Aud3RegValsInit_GameOver
	         $5d07 = WavEffectInit_GameOver
	         $5d1e = WavEffectUpdate_GameOver
	         $5d31 = WavEffectUpdate_GameOver.setAud3Low
	         $5d39 = WavEffectUpdate_GameOver.miscCounterGTE0eh
	         $5d43 = UpdateWavEffects
	         $5d5e = Aud3RegValsInit_After4LinesCleared
	         $5d63 = Aud3RegValsUpdate_After4LinesCleared_1
	         $5d68 = Aud3RegValsUpdate_After4LinesCleared_2
	         $5d6d = Aud3RegValsUpdate_After4LinesCleared_3
	         $5d72 = WavEffectInit_After4LinesCleared
	         $5d87 = WavEffectInit_After4LinesCleared.copyIntoAud3Regs
	         $5d8a = WavEffectUpdate_sound1
	         $5d9b = WavEffectUpdate_sound2
	         $5dac = WavEffectUpdate_sound3
	         $5dbd = WavEffectUpdate_After4LinesCleared
	         $5ddf = WavEffectUpdate_After4LinesCleared.incLowVal
	         $5de3 = WavEffectUpdate_After4LinesCleared.decLowVal
	         $5de5 = WavEffectUpdate_After4LinesCleared.setLowVal
	         $5de9 = ClearWavVarsAndRegs_ResumeMusic
	         $5e0f = ClearWavVarsAndRegs_ResumeMusic.isMusAType
	         $5e14 = InitWavEffect_pauseOtherChannels
	         $5e39 = InitWavEffect_pauseOtherChannels.copyToWavRam
	         $5e3d = SetInitialRegValuesHLForSoundEffect_UpdateDelayA
	         $5e5d = CopyDefaultValsInHLIntoAud1Regs
	         $5e64 = CopyDefaultValsInHLIntoAud2Regs
	         $5e6b = CopyDefaultValsInHLIntoAud3Regs
	         $5e72 = CopyDefaultValsInHLIntoAud4Regs
	         $5e77 = CopyDefaultValsInHLIntoAudCRegs
	         $5e77 = CopyDefaultValsInHLIntoAudCRegs.loop
	         $5e7f = StoreOrigSoundEffectIdx_HLequAddressForSongData_tableHL_incEtwice
	         $5e83 = HLequAddressForSongData_tableHL_incE
	         $5e92 = IncCounterInDE_retZifHitsThreshold
	         $5e9d = IncCounterInDE_retZifHitsThreshold.done
	         $5e9f = CopyFromHLintoWav3Ram
	         $5ea2 = CopyFromHLintoWav3Ram.loop
	         $5eac = InitSound
	         $5ece = ResetSoundHwRegs
	         $5ee4 = UpdateSquareEffects
	         $5ef7 = UpdateSquareEffects.noSquareEffectToPlay
	         $5f03 = UpdateSquareEffects.done
	         $5f04 = UpdateNoiseEffects
	         $5f17 = UpdateNoiseEffects.noNoiseEffectToPlay
	         $5f23 = UpdateNoiseEffects.done
	         $5f24 = MuteSound
	         $5f28 = InitSong
	         $5f43 = SetSongsAudTermVars
	         $5f4b = SetSongsAudTermVars.nextSong
	         $5f54 = SetSongsAudTermVars.setSongVars
	         $5f6c = SetSongsAudTermRegs
	         $5f96 = SetSongsAudTermRegs.checkWavAndNoiseOutput
	         $5fa1 = SetSongsAudTermRegs.afterDecidingWavOutput
	         $5fab = SetSongsAudTermRegs.setAudTermToB
	         $5fac = SetSongsAudTermRegs.setAudTerm
	         $5faf = SetSongsAudTermRegs.outputAllTo1and2terminal
	         $5fb3 = SetSongsAudTermRegs.use1stOutputValue
	         $5fb8 = SetSongsAudTermRegs.notTimeToSwapOutput
	         $5fc5 = SongAudTermData
	         $6009 = StoreWordInWordInHLintoDE
	         $6014 = StoreWordInHLIintoDE
	         $601a = SetSongsInitialSoundChannelVars
	         $6071 = SetSongsInitialSoundChannelVars.loop
	         $6084 = ProcessSoundByte9dh_SetParams.aud3
	         $6084 = ProcessSoundByte9dh_SetParams
	         $6090 = ProcessSoundByte9dh_SetParams.start
	         $60ba = ProcessSoundByte9dh_SetParams.end
	         $60c0 = IncWordInHL
	         $60c6 = IncWordInHL.store
	         $60cc = IncWordTwiceInHL
	         $60d5 = GetABInWordStoredInHL
	         $60dc = UpdateMusic.thunk_toNextSndChannelFromStructIdx2
	         $60dc = UpdateMusic
	         $60df = UpdateMusic.processCurrSoundByteEnvelope
	         $60f6 = UpdateMusic.passedWaveEnvelope
	         $610b = UpdateMusic.toNextSndChannelFromStructIdx2
	         $6110 = UpdateMusic.setNextAddrInCurrSndChannelData
	         $6117 = UpdateMusic.afterSpecialSoundByteAddress
	         $612b = UpdateMusic.sndChannelAddrEquFFFFh
	         $6142 = UpdateMusic.stopCurrSong
	         $614b = UpdateMusic.start
	         $6159 = UpdateMusic.nextSoundChannel
	         $6163 = UpdateMusic.afterSettingSoundDataAddress
	         $6165 = UpdateMusic.processNextSoundByte
	         $6192 = UpdateMusic.contSoundByte
	         $61be = UpdateMusic.soundByte01
	         $61c3 = UpdateMusic.getNoiseDataToWrite
	         $61cb = UpdateMusic.noiseLoop
	         $61da = UpdateMusic.getNonNoiseDataToWrite
	         $61f4 = UpdateMusic.contWave
	         $61ff = UpdateMusic.startWritingToSq2
	         $6203 = UpdateMusic.startWritingToSq1
	         $6208 = UpdateMusic.afterChoosingSndChannelBaseReg
	         $6211 = UpdateMusic.after_hasWavRam
	         $6214 = UpdateMusic.fromWav
	         $621d = UpdateMusic.afterDisabledEnvelopeCheck
	         $623b = UpdateMusic.skippingHwRegWrites
	         $6240 = UpdateMusic.toNextSndChannel
	         $6251 = UpdateMusic.done
	         $625e = UpdateMusic.hasWavRam
	         $6265 = GetEinDEplusBdiv2
	         $626e = WriteToFrequencyRegsAdjustedWithEnvelope
	         $6290 = WriteToFrequencyRegsAdjustedWithEnvelope.done
	         $6292 = WriteToFrequencyRegsAdjustedWithEnvelope.sndChannels1to3
	         $62a8 = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble03
	         $62ad = WriteToFrequencyRegsAdjustedWithEnvelope.lowNybble01
	         $62b9 = WriteToFrequencyRegsAdjustedWithEnvelope.afterEnvelopeNybbleInE
	         $62c6 = WriteToFrequencyRegsAdjustedWithEnvelope.getPositiveHighAdjust
	         $62c8 = WriteToFrequencyRegsAdjustedWithEnvelope.afterGettingEnvelopeAdjust
	         $62c9 = WriteToFrequencyRegsAdjustedWithEnvelope.end
	EMPTY: $62d2-$7fff ($1d2e bytes)
	TOTAL EMPTY: $1d33 bytes

ROMX bank #3:
	SECTION: $4000-$417f ($0180 bytes) ["Demo Steps"]
	         $4000 = Demo2Inputs
	         $4100 = Demo1Inputs
	SECTION: $4180-$41af ($0030 bytes) ["Demo Pieces"]
	         $4180 = DemoPieces
	EMPTY: $41b0-$41ff ($0050 bytes)
	SECTION: $4200-$4ae9 ($08ea bytes) ["Night Layouts"]
	         $4200 = Layout_TitleScreen_Night
	         $46b0 = Layout_RocketScene_Night
	         $4980 = GameScreenLayout_Dancers_Night
	         $4aea = GameScreenLayout_Dancers_Night.end
	SECTION: $4aea-$7584 ($2a9b bytes) ["Palettes and Attribute Maps"]
	         $4aea = Palettes_TitleScreen
	         $4c6a = Palettes_InGameGuideline
	         $4dea = Palettes_InGameSega
	         $4f6a = Palettes_BoardBackgroundStart
	         $50ea = Palettes_BoardBackgroundTransition
	         $526a = Attributes_TitleScreen
	         $571a = Layout_TitleScreen_NoRTC
	         $5bca = Attributes_GameMusicTypeScreen
	         $5e9a = Attributes_ATypeSelectionScreen
	         $616a = Attributes_BTypeSelectionScreen
	         $643a = Attributes_ATypeInGame
	         $670a = Attributes_BTypeInGame
	         $69da = Layout_ATypePaused
	         $6caa = Layout_BTypePaused
	         $6f7a = Layout_DMG
	         $6f7a = Layout_BTypePaused.end
	         $70e2 = Palettes_BType
	         $7262 = Palettes_2P
	         $73e2 = BoardBackgroundColorTransition
	         $73f6 = BoardBackgroundColorTransition.skipTimerSet
	         $7417 = BoardBackgroundColorTransition.updateColor
	         $7434 = BoardBackgroundColorTransition.doneWaiting
	         $7446 = BoardBackgroundColorTransition.doneTransition
	         $7451 = Gfx_GridAnimation
	         $74d1 = AnimateGrid
	         $74df = AnimateGrid.continue
	         $74ee = AnimateGrid.skipTimerSet
	         $74f1 = AnimateGrid.updateGrid
	         $750b = AnimateGrid.doneWaiting
	         $751d = AnimateGrid.doneLoop
	         $7525 = CheckIfOtherPlayerCleared2PlusLines2
	         $7531 = CheckIfOtherPlayerCleared2PlusLines2.checkIfMultiplierToProcess
	         $753b = CheckIfOtherPlayerCleared2PlusLines2.multiplierToProcessAfterPlayingPiece
	         $7543 = CheckIfOtherPlayerCleared2PlusLines2.getStartingRow
	         $754c = CheckIfOtherPlayerCleared2PlusLines2.copyNextRow
	         $754e = CheckIfOtherPlayerCleared2PlusLines2.copyNextCol
	         $7566 = CheckIfOtherPlayerCleared2PlusLines2.copyDarkSolidRow
	         $756b = CheckIfOtherPlayerCleared2PlusLines2.copyDarkSolidCol
	         $7574 = CheckIfOtherPlayerCleared2PlusLines2.no
	         $7576 = CheckIfOtherPlayerCleared2PlusLines2.do
	EMPTY: $7585-$7fff ($0a7b bytes)
	TOTAL EMPTY: $0acb bytes

ROMX bank #4:
	SECTION: $4000 (0 bytes) ["Rosy Retrospection Data"]
	EMPTY

SRAM bank #0:
	SECTION: $a000-$ab76 ($0b77 bytes) ["SRAM"]
	         $a000 = sGameScreenBufferAttr
	         $a400 = sCurrMonth
	         $a400 = sGameScreenBufferAttr.end
	         $a401 = sCurrYear
	         $a403 = sIsDay_DuskDawn_Night
	         $a403 = sCurrYear.end
	         $a404 = sIsRocketScene
	         $a404 = sIsDay_DuskDawn_Night.end
	         $a405 = sOptionLights
	         $a405 = sIsRocketScene.end
	         $a406 = sOptionColors
	         $a407 = sOptionDayNightCycle
	         $a408 = sOptionDayNightCycle.end
	         $a408 = sBTypeHighScores
	         $aa5c = sATypeHighScores
	         $ab6a = sATypeHighScores.end
	         $ab6a = sSramBufferAddressesForCompletedRows
	         $ab73 = sSramBufferAddressesForCompletedRows.end
	         $ab73 = sIsSRAMInitialized
	         $ab74 = sIsSRAMInitialized.end
	         $ab74 = sSkipBg
	         $ab75 = sSkipBg.end
	         $ab75 = sRTCAvailable
	         $ab76 = sPlaceholder
	         $ab76 = sRTCAvailable.end
	         $ab77 = sPlaceholder.end
	EMPTY: $ab77-$bfff ($1489 bytes)
	TOTAL EMPTY: $1489 bytes

WRAM0 bank #0:
	SECTION: $c000-$d89f ($18a0 bytes) ["WRAM"]
	         $c000 = wOam
	         $c0a0 = wOam.end
	         $c0a0 = wScoreBCD
	         $c0a3 = wRamBufferAddressesForCompletedRows
	         $c0ac = wLinesClearedStructs
	         $c0ac = wRamBufferAddressesForCompletedRows.end
	         $c0c0 = wNumDrops
	         $c0c2 = wDropsTotalRollingUp
	         $c0c5 = wNumScoreCategoriesProcessed
	         $c0c6 = wCurrScoreCategIsProcessingOrUpdating
	         $c0c7 = wScoreCategoryVarsEnd
	         $c0c7 = wCanPressDownToMakePieceFall
	         $c0c8 = wc0c8
	         $c0ce = wATypeJustAddedDropsToScore
	         $c0cf = wc0cf
	         $c0de = wNextPieceHidden
	         $c0df = wc0df
	         $c200 = wSpriteSpecs
	         $c300 = wDemoOrMultiplayerPieces
	         $c400 = wDarkSolidBlocksUnderRandomBlocks
	         $c400 = wDemoOrMultiplayerPieces.end
	         $c800 = wGameScreenBuffer
	         $cc00 = wcc00
	         $cc00 = wGameScreenBuffer.end
	         $cfff = wStackTop
	         $d000 = wd762
	         $d80e = wCurrSoundChannelBeingProcessed
	         $d80f = wOrigSoundEffectIdx
	         $d80f = wUnusedShadowAudLen
	         $d810 = wdf72
	         $d813 = wAudTermCounterUntilChangingOutput
	         $d814 = wAudTermCounterValueToHitToChangeOutput
	         $d815 = wAudTermSelectedOutputVal
	         $d816 = wAudTermSongsSpec
	         $d817 = wAudTermOutputValue1
	         $d818 = wAudTermOutputValue2
	         $d819 = wdf7b
	         $d81c = wGamePausedSoundTimer
	         $d81d = wGamePausedActivity
	         $d81e = wUnused_df80
	         $d81f = wSongTempoAddr
	         $d821 = wdf83
	         $d82e = wAudStructs
	         $d82e = wAud1Struct
	         $d83e = wAud2Struct
	         $d84e = wAud3Struct
	         $d85e = wAud4Struct
	         $d86e = wdfd0
	         $d87e = wSquareSoundToPlay
	         $d87f = wSquareEffectBeingPlayed
	         $d880 = wSquareEffectFrameCounter
	         $d881 = wSquareEffectFrameCounterThreshold
	         $d882 = wSquareEffectMiscCounter
	         $d883 = wdfe5
	         $d886 = wSongToStart
	         $d887 = wSongBeingPlayed
	         $d888 = wdfea
	         $d88e = wWavSoundToPlay
	         $d88f = wWavEffectBeingPlayed
	         $d890 = wWavEffectFrameCounter
	         $d891 = wWavEffectFrameCounterThreshold
	         $d892 = wWavEffectMiscCounter
	         $d893 = wWavEffectRandomVal
	         $d893 = wWavEffectShouldIncOrDec
	         $d894 = wWavEffectCurrLoVal
	         $d895 = wdff7
	         $d896 = wNoiseSoundToPlay
	         $d897 = wNoiseEffectBeingPlayed
	         $d898 = wNoiseEffectFrameCounter
	         $d899 = wNoiseEffectFrameCounterThreshold
	         $d89a = wNoiseEffectMiscCounter
	         $d89b = wBoardBackgroundColorTransitionState
	         $d89c = wTransitionTimer
	         $d89e = wUpdateTimer
	EMPTY: $d8a0-$dfff ($0760 bytes)
	TOTAL EMPTY: $0760 bytes

HRAM bank #0:
	SECTION: $ff80-$fffe ($007f bytes) ["HRAM"]
	         $ff80 = hButtonsHeld
	         $ff81 = hButtonsPressed
	         $ff82 = hff82
	         $ff85 = hVBlankInterruptFinished
	         $ff86 = hCurrSpriteSpecStruct
	         $ff87 = hCurrSpriteSpecBaseY
	         $ff88 = hCurrSpriteSpecBaseX
	         $ff89 = hCurrSpriteSpecIdx
	         $ff89 = hCurrSpriteTileIndex
	         $ff8a = hUnusedFF8A
	         $ff8b = hCurrSpecEntireSpecYXFlipped
	         $ff8c = hCurrSpecBaseXFlip
	         $ff8d = hCurr_wOam_SpriteAddr
	         $ff8f = hNumSpriteSpecs
	         $ff90 = hCurrSpriteSpecBaseYOffset
	         $ff91 = hCurrSpriteSpecBaseXOffset
	         $ff92 = hCurrSpriteX
	         $ff93 = hCurrSpriteY
	         $ff94 = hCurrSpriteXFlipWithinCurrSpec
	         $ff95 = hShouldHideCurrSprite
	         $ff96 = hSpriteSpecSrcAddr
	         $ff98 = hPieceFallingState
	         $ff99 = hNumFramesUntilCurrPieceMovesDown
	         $ff9a = hNumFramesUntilPiecesMoveDown
	         $ff9b = hPieceCollisionDetected
	         $ff9c = hTetrisFlashCount
	         $ff9d = hff9d
	         $ff9e = hNumLinesCompletedBCD
	         $ffa0 = hRandomSquareObstacleTileChosen
	         $ffa0 = hMarioLuigiFaceTopLeftTileIdx
	         $ffa0 = hPreHorizMovementSpecIdx
	         $ffa0 = hNumCompletedTetrisRows
	         $ffa0 = hPreRotationSpecIdx
	         $ffa1 = hTempIE
	         $ffa2 = hffa2
	         $ffa4 = hUnusedFFA4
	         $ffa5 = hffa5
	         $ffa6 = hTimers
	         $ffa6 = hTimer1
	         $ffa7 = hTimer2
	         $ffa8 = hffa8
	         $ffa8 = hTimerEnd
	         $ffa9 = hATypeLinesThresholdToPassForNextLevel
	         $ffaa = hStickyButtonCounter
	         $ffab = hGamePaused
	         $ffac = w2PlayerHighSelected_1
	         $ffad = w2PlayerHighSelected_2
	         $ffae = hHiddenLoadedPiece
	         $ffaf = h2PlayerAddressOfNextPiece
	         $ffaf = hffaf
	         $ffb0 = hLowByteOfCurrDemoStepAddress
	         $ffb1 = hNumRowsUpOurTetrisPiecesAre
	         $ffb2 = hCurrPieceSquarePixelY
	         $ffb3 = hCurrPieceSquarePixelX
	         $ffb4 = hCurrPieceSquareScreen0Addr
	         $ffb6 = hOamDmaFunction
	         $ffc0 = hOamDmaFunction.end
	         $ffc0 = hGameType
	         $ffc1 = hMusicType
	         $ffc2 = hATypeLevel
	         $ffc3 = hBTypeLevel
	         $ffc4 = hBTypeHigh
	         $ffc5 = hIs2Player
	         $ffc6 = h5GamesFinishedTimer
	         $ffc6 = hTimerMultiplier
	         $ffc6 = hTypedLetterCounter
	         $ffc7 = hIsOptionMenu
	         $ffc8 = hSelectedOption
	         $ffc9 = hMustEnterHighScore
	         $ffca = hReversedHighScoreRanking
	         $ffcb = hTypedTextCharLoc
	         $ffcd = hMultiplayerPlayerRole
	         $ffce = hSerialInterruptHandled
	         $ffcf = hSerialInterruptFunc
	         $ffd0 = hMasterShouldSerialTransferInVBlank
	         $ffd1 = hNextSerialByteToLoad
	         $ffd2 = hSerialByteRead
	         $ffd3 = hOppositeSerialByteToWinningLosingState
	         $ffd4 = h2toThePowerOf_OtherPlayersLinesClearedMinus1
	         $ffd5 = hOtherPlayersMultiplierToProcess
	         $ffd6 = hCurrPlayersRowsShiftedUpDueToOtherPlayer
	         $ffd7 = hCurrPlayerJustFinishedRequiredLines
	         $ffd8 = h2PlayerGameFinished
	         $ffd9 = hNumWinningGames
	         $ffda = hNumLosingGames
	         $ffdb = hSelfIsAdvantage
	         $ffdc = hOtherIsAdvantage
	         $ffdd = hIsDeuce
	         $ffde = h2toThePowerOf_LinesClearedMinus1
	         $ffdf = hffdd
	         $ffe2 = hFoundDisplayableScoreDigit
	         $ffe3 = hGameState
	         $ffe4 = hVBlankInterruptCounter
	         $ffe5 = hRowsShiftingDownState
	         $ffe6 = hPrevOrCurrDemoPlayed
	         $ffe7 = hNumTimesHoldingDownEvery3Frames
	         $ffe8 = hLowByteOfVramDestForLevelNum
	         $ffe9 = hffe7
	         $ffea = hJustSetHighScoreAndCopiedToRamBuffer
	         $ffeb = hIsRecordingDemo
	         $ffec = hFramesUntilNextDemoInput
	         $ffed = hAddressOfDemoInput
	         $ffef = hDemoButtonsHeld
	         $fff0 = hActualUserButtonsHeldDuringDemo
	         $fff1 = hWonOrLostAtTheSameTimeAsOtherPlayer
	         $fff2 = hPassiveShouldUpdateMusicOamAndPlaySong
	         $fff3 = hPausedNextSerialByteToLoad
	         $fff4 = hPausedSerialByteRead
	         $fff5 = hATypeRocketSpecIdx
	         $fff6 = hIsHardMode
	         $fff7 = hfff5
	         $fffd = h1stHighScoreHighestByteForLevel
	         $fffd = hIsPieceStuckOnTopRow
	         $fffd = hfffb
	         $fffe = hPrevHiddenPiece
	TOTAL EMPTY: $0000 bytes

SUMMARY:
	ROM0: 14153 bytes used / 2231 free
	ROMX: 38775 bytes used / 26761 free in 4 banks
	SRAM: 2935 bytes used / 5257 free in 1 bank
	WRAM0: 6304 bytes used / 1888 free
	HRAM: 127 bytes used / 0 free
